SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS `sxs_article`;
CREATE TABLE `sxs_article` (
  `arcid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(30) NOT NULL DEFAULT '',
  `property` varchar(50) NOT NULL DEFAULT '',
  `pic` varchar(100) NOT NULL DEFAULT '',
  `colid` smallint(5) unsigned NOT NULL DEFAULT '0',
  `keyword` varchar(100) NOT NULL DEFAULT '',
  `description` text NOT NULL,
  `content` text NOT NULL,
  `createtime` int(10) unsigned NOT NULL DEFAULT '0',
  `updatetime` int(10) unsigned NOT NULL DEFAULT '0',
  `click` int(10) unsigned NOT NULL DEFAULT '0',
  `mid` smallint(5) unsigned NOT NULL DEFAULT '0',
  `source` varchar(100) NOT NULL DEFAULT '',
  `ord` tinyint(3) unsigned NOT NULL DEFAULT '50',
  `title` varchar(100) NOT NULL DEFAULT '',
  `ischeck` tinyint(1) NOT NULL DEFAULT '0',
  `id` bigint(20) NOT NULL,
  PRIMARY KEY (`arcid`),
  KEY `arcindex` (`username`,`colid`,`mid`)
) ENGINE=MyISAM AUTO_INCREMENT=196 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sxs_article
-- ----------------------------
INSERT INTO `sxs_article` VALUES ('4', 'admin', 'h,c', '', '1', 'php,java', 'php与java比优势在哪里', '<img src=\"http://www.sxs.pub/Public/editor/plugins/emoticons/images/13.gif\" border=\"0\" alt=\"\" />PHP很专一，用于创建动态网页的服务器端的脚本语言。作为一种为Web而特别设计的语言，PHP带来了许多商业机构渴望的特性。&nbsp;<br />\r\n<br />\r\n　　·学习周期短，比较简单<br />\r\n　　·快速的开发时间&nbsp;<br />\r\n　　·非常高的性能&nbsp;<br />\r\n<br />\r\n　　这对于缺乏熟练编程人员，时间又非常紧迫的公司来讲，具有非常重要的意义。跨平台性很好，PHP可以在所有主要的操作平台（UNIX，Windows，甚至是大型机）上运行，而且生来就支持各种流行的数据库。这决定它是一种进行Web开发的非常理想的选择：曾有运用PHP技术的网上商店称，他们只需雇佣业余的程序员，几天内就能够开发出可重用的代码。那些熟悉诸如C，C++或Java等语言的程序员们，也总是发现他们能够在几个小时之内就能够进行PHP编程。 ，可想而知，转行去php非常简单<br />\r\n<br />\r\n　　“PHP是构建在Web开发人员现实需求之上的....不同于其它笨重的，高负荷的方法，PHP非常轻便，是为Web开发度身定做的。它可以比其它同类技术更快，更容易的解决复杂的问题。”&nbsp;<br />\r\n<br />\r\n　　Java作为一种新的编程语言，最初用于运行嵌在浏览器中的客户端应用程序。在过去短短几年中，“applet”所暴露的问题迫使SUN和其它Java开发人员为该语言寻找新的出路。其中最为突出的就是服务器端编程，它允许Web站点连接数据库并产生其它服务器端的应用程序，即“servlets”。SUN最终推出了Java Server Pages(JSP)作为编写servlets的手段。与PHP一样，JSP在不同平台间也具有高可移植性（尽管PHP支持任何32位以及32位以上的平台，而JSP只能在安装了Java虚拟机的平台上运行）。 然后，一个没有编程背景的新手会发现，使用servlets编程是一件极为困难的事，原因在于该语言的复杂性以及JSP系统复杂的设计方式。&nbsp;<br />\r\n<br />\r\n　　JSP的性能也存在许多待改进的地方：ZDnet的在线刊物eWeek最近的一项调查发现，PHP的运行速度差不多是JSP的3.7倍。可以说，JSP是Web环境中非常差的一种解决方案，这是因为它每秒钟只能处理很少的事务，而且响应速度相当的慢。&nbsp;<br />\r\n<br />\r\n　　ZDnet的eWeek杂志还提到：&nbsp;<br />\r\n　　“JSP是一项相对较新的技术，从开发工具、资源、人才方面来看，还未具有完全的市场成熟度。”......由于JSP是基于Java的，而Java由是一种强类型的语言，所以我们不得不声明变量的类型，并在需要的地方手工转换类型。这使得JSP成为业余程序员最难于学习的一种脚本语言。&nbsp;<br />\r\n<br />\r\n　　PHP与Java协同工作&nbsp;<br />\r\n<br />\r\n　　JSP仅仅是一种能够访问Java对象的语言罢了，认识到这一点很重要。而PHP也可以整合Java，这意味着，PHP可以象JSP一样，成为一种能够调用Java逻辑的脚本语言。但与JSP不同的是，PHP还可以调用其它组件模型，如Microsoft的COM，而且增加对新的对象模型的支持也极为容易。可见，PHP的扩展能力是无穷的。而另一方面，JSP完全依赖于Java。&nbsp;<br />\r\n<br />\r\n　　IBM程序员Sam Ruby联合使用PHP和Java。通过PHP对Java的良好支持，使得Java对象如同常规的PHP对象一样，透明地被创建和使用。&nbsp;<br />\r\n<br />\r\n　　AutionWatch网站使得各种规模的商业团体都可以从其动态竞价环境中获益。它每月的访问人数在二百六十万以上；已有三十多万个注册用户；每个月进行一百二十万次拍卖。 他们曾尝试使用Java，但还是选择了PHP，就因为它更容易使用，开发速度更快。<br />\r\n<br />\r\n　　编程顾问Reuven Lerner曾在各种语言之间作过比较。他对PHP的评价：&nbsp;<br />\r\n　　“这是门容易学习的语言。美工和Web设计师可能会说他们并非程序员，但事实上，他们在大型项目中，越来越多的使用了JavaScript，VBScript以及其它一些简单的编程语言。与Perl相比，PHP更加正规和明确；对一个新手来说，PHP比Java更容易掌握。确实，PHP有点象JavaScript（如果存在服务器端版本的话）。任何人，不管有无编程经验，都可以在很短的时间里学会并使用PHP。这一点也许VBScript可以做到，但Perl和Java肯定不行.....PHP绝对是一个非凡的，强大的系统。无怪乎能够成为创建Web站点的流行语言.....我认为，PHP将成为Java和JSP强有力的竞争对手，我会在某些客户和公司内部项目中极力推荐PHP。”&nbsp;<br />\r\n<br />\r\n　　PHP：一直在前进&nbsp;<br />\r\n<br />\r\n　　JSP有Sun作为其后盾，因此不断获得媒体的关注。但有趣的是，尽管没有任何宣传攻势，PHP的流行度仍然以8-11%的速度在增长，远远大于服务器端应用程序4%的月增长率。有六百五十万个站点使用了PHP。39%的Apache服务器上配置了PHP；而Perl占了11%的市场分额，名列第四。Apache保持着59%的Web服务器市场占有率；Microsoft次之，仅28%。&nbsp;<br />\r\n<br />\r\n　　使用PHP的著名公司有：Unilever、Philips、NTT、Cisco、 Japan Airlines、 Air Canada、 Lufthansa、GE Marketplace、 Wallstreet:Online Germany、 AuctionWatch、 VillageVoic、 Dialpad以及BMC，等等很多，世界上前四十的网站中就有二十多个是用php语言开发的<br />\r\n<br />', '1432536074', '1432723317', '860', '1', '未知', '2', 'web时代，java与php的较量', '1', '0');
INSERT INTO `sxs_article` VALUES ('8', 'admin', 'h,c', 'http://www.sxs.pub/Uploads/image/20150527/20150527183202_35526.jpg', '4', 'php,string', 'php中关于常用字符串函数的使用', '<h2>\r\n	<span style=\"color:#E53333;\">php中String的操作</span>\r\n</h2>\r\n<p>\r\n	<span style=\"font-size:14px;\"><strong>php开发中，经常会涉及到字符串的操作，以下是常用字符串函数：</strong></span>\r\n</p>\r\n<p>\r\n	addcslashes — 以 C 语言风格使用反斜线转义字符串中的字符<br />\r\naddslashes — 使用反斜线引用字符串<br />\r\nbin2hex — 函数把ASCII字符的字符串转换为十六进制值<br />\r\nchop — rtrim 的别名<br />\r\nchr — 返回指定的字符<br />\r\nchunk_split — 将字符串分割成小块<br />\r\nconvert_cyr_string — 将字符由一种 Cyrillic 字符转换成另一种<br />\r\nconvert_uudecode — 解码一个 uuencode 编码的字符串<br />\r\nconvert_uuencode — 使用 uuencode 编码一个字符串<br />\r\ncount_chars — 返回字符串所用字符的信息<br />\r\ncrc32 — 计算一个字符串的 crc32 多项式<br />\r\ncrypt — 单向字符串散列<br />\r\necho — 输出一个或多个字符串<br />\r\nexplode — 使用一个字符串分割另一个字符串<br />\r\nfprintf — 将格式化后的字符串写入到流<br />\r\nget_html_translation_table — 返回使用 htmlspecialchars 和 htmlentities 后的转换表<br />\r\nhebrev — 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew）<br />\r\nhebrevc — 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符<br />\r\nhex2bin — 转换十六进制字符串为二进制字符串<br />\r\nhtml_entity_decode — Convert all HTML entities to their applicable characters<br />\r\nhtmlentities — Convert all applicable characters to HTML entities<br />\r\nhtmlspecialchars_decode — 将特殊的 HTML 实体转换回普通字符<br />\r\nhtmlspecialchars — Convert special characters to HTML entities<br />\r\nimplode — 将一个一维数组的值转化为字符串<br />\r\njoin — 别名 implode<br />\r\nlcfirst — 使一个字符串的第一个字符小写<br />\r\nlevenshtein — 计算两个字符串之间的编辑距离<br />\r\nlocaleconv — Get numeric formatting information<br />\r\nltrim — 删除字符串开头的空白字符（或其他字符）<br />\r\nmd5_file — 计算指定文件的 MD5 散列值<br />\r\nmd5 — 计算字符串的 MD5 散列值<br />\r\nmetaphone — Calculate the metaphone key of a string<br />\r\nmoney_format — Formats a number as a currency string<br />\r\nnl_langinfo — Query language and locale information<br />\r\nnl2br — 在字符串所有新行之前插入 HTML 换行标记<br />\r\nnumber_format — 以千位分隔符方式格式化一个数字<br />\r\nord — 返回字符的 ASCII 码值<br />\r\nparse_str — 将字符串解析成多个变量<br />\r\nprint — 输出字符串<br />\r\nprintf — 输出格式化字符串<br />\r\nquoted_printable_decode — 将 quoted-printable 字符串转换为 8-bit 字符串<br />\r\nquoted_printable_encode — 将 8-bit 字符串转换成 quoted-printable 字符串<br />\r\nquotemeta — 转义元字符集<br />\r\nrtrim — 删除字符串末端的空白字符（或者其他字符）<br />\r\nsetlocale — 设置地区信息<br />\r\nsha1_file — 计算文件的 sha1 散列值<br />\r\nsha1 — 计算字符串的 sha1 散列值<br />\r\nsimilar_text — 计算两个字符串的相似度<br />\r\nsoundex — Calculate the soundex key of a string<br />\r\nsprintf — Return a formatted string<br />\r\nsscanf — 根据指定格式解析输入的字符<br />\r\nstr_getcsv — 解析 CSV 字符串为一个数组<br />\r\nstr_ireplace — str_replace 的忽略大小写版本<br />\r\nstr_pad — 使用另一个字符串填充字符串为指定长度<br />\r\nstr_repeat — 重复一个字符串<br />\r\nstr_replace — 子字符串替换<br />\r\nstr_rot13 — 对字符串执行 ROT13 转换<br />\r\nstr_shuffle — 随机打乱一个字符串<br />\r\nstr_split — 将字符串转换为数组<br />\r\nstr_word_count — 返回字符串中单词的使用情况<br />\r\nstrcasecmp — 二进制安全比较字符串（不区分大小写）<br />\r\nstrchr — 别名 strstr<br />\r\nstrcmp — 二进制安全字符串比较<br />\r\nstrcoll — 基于区域设置的字符串比较<br />\r\nstrcspn — 获取不匹配遮罩的起始子字符串的长度<br />\r\nstrip_tags — 从字符串中去除 HTML 和 PHP 标记<br />\r\nstripcslashes — 反引用一个使用 addcslashes 转义的字符串<br />\r\nstripos — 查找字符串首次出现的位置（不区分大小写）<br />\r\nstripslashes — 反引用一个引用字符串<br />\r\nstristr — strstr 函数的忽略大小写版本<br />\r\nstrlen — 获取字符串长度<br />\r\nstrnatcasecmp — 使用“自然顺序”算法比较字符串（不区分大小写）<br />\r\nstrnatcmp — 使用自然排序算法比较字符串<br />\r\nstrncasecmp — 二进制安全比较字符串开头的若干个字符（不区分大小写）<br />\r\nstrncmp — 二进制安全比较字符串开头的若干个字符<br />\r\nstrpbrk — 在字符串中查找一组字符的任何一个字符<br />\r\nstrpos — 查找字符串首次出现的位置<br />\r\nstrrchr — 查找指定字符在字符串中的最后一次出现<br />\r\nstrrev — 反转字符串<br />\r\nstrripos — 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）<br />\r\nstrrpos — 计算指定字符串在目标字符串中最后一次出现的位置<br />\r\nstrspn — 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。<br />\r\nstrstr — 查找字符串的首次出现<br />\r\nstrtok — 标记分割字符串<br />\r\nstrtolower — 将字符串转化为小写<br />\r\nstrtoupper — 将字符串转化为大写<br />\r\nstrtr — 转换指定字符<br />\r\nsubstr_compare — 二进制安全比较字符串（从偏移位置比较指定长度）<br />\r\nsubstr_count — 计算字串出现的次数<br />\r\nsubstr_replace — 替换字符串的子串<br />\r\nsubstr — 返回字符串的子串<br />\r\ntrim — 去除字符串首尾处的空白字符（或者其他字符）<br />\r\nucfirst — 将字符串的首字母转换为大写<br />\r\nucwords — 将字符串中每个单词的首字母转换为大写<br />\r\nvfprintf — 将格式化字符串写入流<br />\r\nvprintf — 输出格式化字符串<br />\r\nvsprintf — 返回格式化字符串<br />\r\nwordwrap — 打断字符串为指定数量的字串<br />\r\n</p>', '1432811990', '1432811990', '810', '1', '未知', '2', 'php入门之字符串的操作', '1', '0');
INSERT INTO `sxs_article` VALUES ('11', 'admin', 'h,c', 'http://image.it168.com/cms/2008-5-9/Image/20085995651.jpg', '9', 'iis,session', 'IIS7.0下验证码无效问题解决方法', '<h2>\r\n	IIS7.0下验证码无效问题解决方法\r\n</h2>\r\n<p>\r\n	&nbsp; &nbsp; &nbsp; iis服务器配置完好后，试了一下php代码，感觉完好，性能响应方面感觉比Apache还要好，但是测试过程中发现了一个问题，验证码始终无效，后台进不去了，好悲催，但是不怕，继续折腾起来呗。\r\n</p>\r\n<p>\r\n	&nbsp; &nbsp; &nbsp; 采用排除法，排除了验证码代码的原因，因为可以正常显示，而且Apache下运行完美，随后想到了session，因为验证码加密后保存在了session中，如果session无效的话，验证码也就失效了，既然找到了突破口了，那就马上搞起来吧，当然先去度娘那里看看呗\r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150530/20150530115820_72467.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	以上是百度结果，果然这种问题是存在的，但是看了好几篇文章都是无关痛痒的问题，但是都指明了一个思路，那就是php.ini中session的配置问题，那就朝着这个方向继续搞起\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	首先看环境中的配置文件是否加载了正确的php.ini文件，我使用phpinfo()查看的结果如下：\r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150530/20150530120936_26380.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	可以看到，php.ini加载路径在windows下，不过这个没有关系，你也看到了下面加载文件是正确的php.ini的路径，所以可以肯定php.ini被正确加载了，接下来就来看看，关于php.ini中session的配置问题了\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	首先找到你的php.ini文件，用文本编辑工具打开，找到session.save_path，将前面的分号去掉，指定一个正确的目录给它，如下\r\n</p>\r\n<p>\r\n	session.save_path = \"c:/Temp\"\r\n</p>\r\n<div>\r\n	<br />\r\n</div>\r\n然后确保这个文件夹下的读写权限，因为这个配置是session的保存目录，每次session的生成都会在这个目录下生成一个session文件\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	接下来配置session.cookie_path = /\r\n</p>\r\n<p>\r\n	配置完后可以用phpinfo()函数再次查看下，当然你的服务器得再次重启一下了，我的查询配置结果如下：\r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150530/20150530122951_46398.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	做完以上工作后，好开心，验证码验证正常了，后台终于进去了，然后去c:/temp目录下看，生成了一个session文件，如下：\r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150530/20150530124805_76675.png\" alt=\"\" />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<div>\r\n	至此，你的Session可以在正常工作了，哦也\r\n</div>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span id=\"__kindeditor_bookmark_start_20__\"></span> \r\n</p>', '1432960542', '1432961291', '984', '1', '未知', '2', 'IIS7.0下验证码无效问题', '1', '0');
INSERT INTO `sxs_article` VALUES ('6', 'admin', 'h,c', '', '2', 'java,flex', 'java +flex入门', '<br />\r\n一、所需要的软件<br />\r\nMyEclipes + Tomcat6.0 + Flex Builder3 + BlazeDS，网上自己去下载。<br />\r\n二、配置服务器端（MyEclipes + Tomcat6.0 + BlazeDS）<br />\r\n1、先将BlazeDS压缩包解压开，在找到blazeds.war解压开，得到META-INF文件夹和WEB-INF文件夹。<br />\r\n2、打开MyEclipes，配置Tomcat服务器：window-&gt;Preferences-&gt;MyEclipes-&gt;Application Server-&gt;Tomcat-&gt;Tomcat 6.x配置Tomcat home directory 为Tomcat的安装路径，同时选择Tomcat server-&gt;Enable.。<br />\r\n3、接下来，在MyEclipse中创建一个Web Project，工程名 Peace。<br />\r\n4、然后把第一步解压blazeds.war所得的两个文件夹粘贴到Peace项目下的WebRoot文件夹下，出现Override提示框，选择Yes to All。<br />\r\n5、下面在本工程的src目录下编写一个java类（包名com.nankyrei.service，类名HelloWorld）：<br />\r\npackage com.nankyrei.service<br />\r\npublic class HelloWorld{<br />\r\npublic String getHello(){<br />\r\nreturn \"Hello World\";&nbsp;<br />\r\n}<br />\r\n}<br />\r\n6、java类写好了，下面要在remoting-config.xml中声明这个类(粗体字部分)：<br />\r\n<!--?mxl version=\"1.0\" encoding=\"UTF-8\"?--><br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<!--这里要写完整路径：包名+类名--><br />\r\ncom.nankyrei.service.HelloWorld<br />\r\n<br />\r\n<br />\r\n<br />\r\n7、好了，大功告成，现在将这个项目部署到Tomcatzhong，然后启动Tomcat。<br />\r\n三、创建flex客户端<br />\r\n1、新建一个flex项目，名称为flex_peace，选择Application server type：J2EE。<br />\r\n2、这一步非常重要，点击next，设置server location，其中Root folder为刚刚在tomcat里部署的Peace项目路径。为了保持一致性，Root URL和Context root 中的相对路径的名称都与该web项目名称保持相同。这三项内容填写好后，需要点击“Validate Configuration”按钮，进行配置验证（此时让Tomcat处于开启状态）。验证完成后点击Finish。<br />\r\n3、最后编写客户端（flex_peace.mxml）<br />\r\n&nbsp;<!--?xml version=\"1.0\" encoding=\"utf-8\"?--><br />\r\n<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; <!--[CDATA[<br /--> &nbsp; &nbsp; &nbsp; &nbsp; import mx.rpc.events.FaultEvent;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; import mx.controls.Alert;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; import mx.rpc.events.ResultEvent;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; private function resultHandler(event:ResultEvent):void {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Alert.show(event.result.toString(), \"成功\");<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; private function faultHandler(event:FaultEvent):void {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Alert.show(event.fault.toString(), \"失败\");<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; ]]&gt;<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; <!-- destination 属性值要和 remoting-config.xml 中 destination 的 id 一致--><br />\r\n&nbsp; &nbsp; <mx:remoteobject id=\"remoteObject\" <br=\"\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; destination=\"helloWorld\"<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;result=\"resultHandler(event)\"<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fault=\"faultHandler(event)\"/&gt;<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp; &nbsp;<br />\r\n<br />\r\n4、运行Flex Application，右键点击flex_peace.mxml-&gt;run as-&gt;Flex Application即可，(期间tomcat必须保持运行状态)<br />', '1432549928', '1432723306', '823', '1', 'http://blog.csdn.net/dy_smile/article/details/6251698', '2', 'java+flex富互联网应用', '1', '0');
INSERT INTO `sxs_article` VALUES ('7', 'admin', 'h,c', '/Uploads/image/20150527/20150527183202_35526.jpg', '4', 'php,array,json', 'php数组的使用以及与json的转换', '<p style=\"text-indent:2em;\">\r\n	<span style=\"line-height:1.5;color:#E53333;font-size:16px;\"><strong>在 PHP 中，有三种数组类型：</strong></span> \r\n</p>\r\n<p style=\"text-indent:2em;\">\r\n	<span style=\"background-color:;\"></span><br />\r\n索引数组 - 带有数字索引的数组，（可以理解C/C++/Java中的数组，按照索引位置直接访问）<br />\r\n关联数组 - 带有指定键的数组，（可以理解为map，按照键值对存储，按照键访问）<br />\r\n多维数组 - 包含一个或多个数组的数组，（可以理解为复杂的数组，元素可以是普通元素或者数组）<br />\r\n<br />\r\n1.索引数组<br />\r\n　　可以使用数据的索引(下标)访问的数组。如下面的代码：<br />\r\n&nbsp;<!--?php<br /--> &nbsp;$myArray=array(1,2);<br />\r\n&nbsp; &nbsp;$myArray[]=4; &nbsp; &nbsp;//向末尾添加元素，等价于array_push()<br />\r\n&nbsp; &nbsp;$myArray[]=5; &nbsp; &nbsp;//向末尾添加元素，等价于array_push()<br />\r\n&nbsp; &nbsp;echo $myArray[0].\"\\n\"; &nbsp; &nbsp;//1<br />\r\n&nbsp; &nbsp;echo $myArray[2].\"\\n\"; &nbsp; &nbsp;//4<br />\r\n&nbsp;?&gt;<br />\r\n<br />\r\n<br />\r\n2.关联数组<br />\r\n　　 保存键值对数据，数据按照键名访问。如出现同名的键，后加的替换之前数据。如下面的代码：<br />\r\n&nbsp; \"liu\");<br />\r\n&nbsp; $myArray[\"name\"]=\"wang\";<br />\r\n&nbsp; $myArray[\"school\"]=\"bupt\";<br />\r\n&nbsp; foreach($myArray as $key=&gt;$value){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; echo $key.\":\".$value.\"\\n\";<br />\r\n&nbsp; }<br />\r\n&nbsp; /*<br />\r\n&nbsp; 输出：<br />\r\n&nbsp;name:wang<br />\r\n&nbsp;school:bupt<br />\r\n&nbsp;*/<br />\r\n&nbsp;?&gt;<br />\r\n3.多维数组<br />\r\n　　 数组的元素可以是普通元素，也可以是其他的元素。如下面的代码:<br />\r\n&lt;?php<br />\r\n&nbsp;$indexArray=array(1,2,3);<br />\r\n&nbsp;$myArray=array($indexArray,\"6\"=&gt;\"liu\");<br />\r\n&nbsp;$myArray[\"age\"]=18;<br />\r\n&nbsp;$myArray[]=\"bupt\";<br />\r\n&nbsp;print_r($myArray);<br />\r\n&nbsp;?&gt;<br />\r\n4.PHP数组与JSON格式的转换<br />\r\n　　php提供了函数可以直接进行转换：<br />\r\n　　(1) json_encode : php数组 ---&gt; json字符串<br />\r\n　　(2) json_decode : json字符串 ---&gt;php对象<br />\r\n&nbsp; &nbsp; &nbsp; (3) &nbsp;json_decode: &nbsp;json字符串----&gt; php数组(需要设置第二个参数为true)\r\n</p>\r\n<div>\r\n	<br />\r\n</div>\r\n<p>\r\n	<br />\r\n</p>', '1432723253', '1432724091', '775', '1', 'http://www.cnblogs.com/xudong-bupt/p/3855132.html', '2', 'php入门之array与json的使用', '1', '0');
INSERT INTO `sxs_article` VALUES ('9', 'admin', 'h,c', '', '4', 'php，echo', 'php中不同输出函数的使用', '一、echo<br />\r\n定义和用法<br />\r\nPHP echo() 函数输出一个或多个字符串。<br />\r\necho \"\" 这种方法也可以，不需要括号都行<br />\r\n语法<br />\r\necho(strings)&nbsp;<br />\r\n参数 描述&nbsp;<br />\r\nstrings 必需。一个或多个要发送到输出的字符串。<br />\r\n提示和注释<br />\r\n　　注释：echo() 实际上不是一个函数，因此您无需对其使用括号。不过，如果您希望向 echo() 传递一个或多个参数，那么使用括号会发生解析错误。<br />\r\n提示：echo() 函数比 print() 函数快一点点。<br />\r\n提示：echo() 函数可以使用简化语法。参见例子 5。<br />\r\n&nbsp;代码如下 <br />\r\n例子<br />\r\n例子 1<br />\r\n<!--?php<br /--> $str = \"Who\'s John Adams?\";<br />\r\necho $str;<br />\r\necho \"<br />\r\n\";<br />\r\necho $str.\"<br />\r\nI don\'t know!\";<br />\r\n?&gt;<br />\r\n　　输出：<br />\r\nWho\'s John Adam?<br />\r\nWho\'s John Adam?<br />\r\nI don\'t know!<br />\r\n例子 2<br />\r\n<!--?php<br /--> echo \"This text spans multiple lines.\";<br />\r\n?&gt;<br />\r\n　　输出：<br />\r\nThis text spans multiple lines.<br />\r\n例子 3<br />\r\n<!--?php<br /--> echo \'This \',\'string \',\'was \',\'made \',\'with multiple parameters\';<br />\r\n?&gt;<br />\r\n　　输出：<br />\r\nThis string was made with multiple parameters<br />\r\n例子 4<br />\r\n　　单引号和双引号的不同之处。单引号仅输出变量名，而不是值：<br />\r\n<!--?php<br /--> $color = \"red\";<br />\r\necho \"Roses are $color\";echo \"<br />\r\n\";<br />\r\necho \'Roses are $color\';?&gt;<br />\r\n　　输出：<br />\r\nRoses are red Roses are $color<br />\r\n例子 5<br />\r\n　　简化语法：<br />\r\n<!--?php<br /--> $color = \"red\";<br />\r\n?&gt;\r\n<p>\r\n	Roses are <!--?=$color?-->\r\n</p>\r\n<br />\r\n　　<br />\r\n<hr />\r\n<br />\r\n二、print<br />\r\n&nbsp; &nbsp; print() 和 echo() 用法一样，但是echo速度会比print快一点点。实际上它也不是一个函数，因此您无需对其使用括号。不过，如果您希望向print() 传递一个以上的参数，那么使用括号会发生解析错误。注意print总是返回1的，这个和echo不一样，也就是可以使用print来赋值，不过没有实际意义。<br />\r\n例子：<br />\r\n&nbsp;代码如下 <br />\r\n<!--?php<br /--> &nbsp;$a = print(\"55nav\"); // 这个是允许的&nbsp;<br />\r\n&nbsp;echo $a; // $a的值是1<br />\r\n<p>\r\n	?&gt;\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<hr />\r\n<p>\r\n	<br />\r\n</p>\r\n三、print_r 函数<br />\r\n&nbsp; &nbsp; print_r函数打印关于变量的易于理解的信息。<br />\r\n&nbsp; &nbsp; 语法：mixed print_r ( mixed $expression [, bool return ] )<br />\r\n&nbsp; &nbsp; 如果变量是string , integer or float , 将会直接输出其值，如果变量是一个数组，则会输出一个格式化后的数组，便于阅读，也就是有key和value对应的那种格式。对于object对象类同。print_r有两个参数，第一个是变量，第二个可设为true，如果设为true，则会返回字符串，否则返回布尔值TRUE。<br />\r\n例子：<br />\r\n&nbsp;代码如下 <br />\r\n<!--?php<br /--> &nbsp;$a=\"55nav\";<br />\r\n&nbsp;$c = print_r($a);&nbsp;<br />\r\n&nbsp;echo $c; &nbsp;// $c的值是TRUE&nbsp;<br />\r\n&nbsp;$c = print_r($a, ture);&nbsp;<br />\r\n&nbsp;echo $c; // $c的值是字符串55nav&nbsp;<br />\r\n<p>\r\n	&nbsp;?&gt;\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<hr />\r\n<p>\r\n	<br />\r\n</p>\r\n四、printf函数<br />\r\n&nbsp; &nbsp; printf函数返回一个格式化后的字符串。<br />\r\n&nbsp; &nbsp; 语法：printf(format,arg1,arg2,arg++)<br />\r\n&nbsp; &nbsp; 参数 format 是转换的格式，以百分比符号 (“%”) 开始到转换字符结束。下面是可能的 format 值：<br />\r\n* %% – 返回百分比符号<br />\r\n* %b – 二进制数<br />\r\n* %c – 依照 ASCII 值的字符<br />\r\n* %d – 带符号十进制数<br />\r\n* %e – 可续计数法（比如 1.5e+3）<br />\r\n* %u – 无符号十进制数<br />\r\n* %f – 浮点数(local settings aware)<br />\r\n* %F – 浮点数(not local settings aware)<br />\r\n* %o – 八进制数<br />\r\n* %s – 字符串<br />\r\n* %x – 十六进制数（小写字母）<br />\r\n* %X – 十六进制数（大写字母）<br />\r\n&nbsp; &nbsp; arg1, arg2, arg++ 等参数将插入到主字符串中的百分号 (%) 符号处。该函数是逐步执行的，在第一个 % 符号中，插入 arg1，在第二个 % 符号处，插入 arg2，依此类推。如果 % 符号多于 arg 参数，则您必须使用占位符。占位符被插入 % 符号之后，由数字和 “$” 组成。可使用数字指定显示的参数，详情请看例子。<br />\r\n例子：<br />\r\n&nbsp;代码如下 <br />\r\n<!--?php<br /--> &nbsp;printf(\"My name is %s %s。\",\"55nav\", \"com\"); // My name is 55nav com。<br />\r\n&nbsp;printf(\"My name is %1$s %1$s\",\"55nav\", \"com\"); // 在s前添加1$或2$.....表示后面的参数显示的位置，此行输出 My name is Ricky Ricky因为只显示第一个参数两次。<br />\r\n&nbsp;printf(\"My name is %2$s %1$s\",\"55nav\", \"com\"); // My name is com 55nav&nbsp;<br />\r\n<p>\r\n	&nbsp;?&gt;\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<hr />\r\n<p>\r\n	<br />\r\n</p>\r\n五、function/43020.htm target=_blank &gt;sprintf函数<br />\r\n&nbsp; &nbsp; 　参数 format 是转换的格式，以百分比符号 (\"%\") 开始到转换字符结束。下面的可能的 format 值：<br />\r\n　　%% - 返回百分比符号<br />\r\n　　%b - 二进制数<br />\r\n　　%c - 依照 ASCII 值的字符<br />\r\n　　%d - 带符号十进制数<br />\r\n　　%e - 科学计数法（比如 1.5e+3）<br />\r\n　　%u - 无符号十进制数<br />\r\n　　%f - 浮点数(local settings aware)<br />\r\n　　%F - 浮点数(not local settings aware)<br />\r\n　　%o - 八进制数 %s - 字符串<br />\r\n　　%x - 十六进制数（小写字母）<br />\r\n　　%X - 十六进制数（大写字母）<br />\r\n　　arg1, arg2, ++ 等参数将插入到主字符串中的百分号 (%) 符号处。该函数是逐步执行的。在第一个 % 符号中，插入 arg1，在第二个 % 符号处，插入 arg2，依此类推。<br />\r\n提示和注释<br />\r\n　　注释：如果 % 符号多于 arg 参数，则您必须使用占位符。占位符插到 % 符号后面，由数字和 \"$\" 组成。请参见例子 3。<br />\r\n　　提示： 相关函数： fprintf()、 printf()、 vfprintf()、 vprintf() 以及 vsprintf()。<br />\r\n&nbsp;代码如下 <br />\r\n例子<br />\r\n例子 1<br />\r\n<!--?php<br /--> $str = \"Hello\";<br />\r\n$number = 123;<br />\r\n$txt = sprintf(\"%s world. Day number %u\",$str,$number);<br />\r\necho $txt;<br />\r\n?&gt;<br />\r\n输出：<br />\r\nHello world. Day number 123<br />\r\n例子 2<br />\r\n<!--?php<br /--> $number = 123;<br />\r\n$txt = sprintf(\"%f\",$number);<br />\r\necho $txt;<br />\r\n?&gt;<br />\r\n输出：<br />\r\n123.000000<br />\r\n例子 3<br />\r\n<!--?php<br /--> $number = 123;<br />\r\n$txt = sprintf(\"With 2 decimals: %1$.2f<br />\r\nWith no decimals: %1$u\",$number);<br />\r\necho $txt;<br />\r\n?&gt;<br />\r\n输出：<br />\r\nWith 2 decimals: 123.00 With no decimals: 123<br />\r\nPHP String 函数<br />\r\n<hr />\r\n<br />\r\n六、var_dump函数<br />\r\nvar_dump　　 (PHP 3 &gt;= 3.0.5, PHP 4, PHP 5) 　　<br />\r\nvar_dump -- 打印变量的相关信息<br />\r\n　　void var_dump ( mixed expression [, mixed expression [, ...]] ) 　　<br />\r\n此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。 　　<br />\r\n提示: 为了防止程序直接将结果输出到浏览器，可以使用输出控制函数（output-control functions）来捕获此函数的输出，并把它们保存到一个例如 string 类型的变量中。 　　<br />\r\n<br />\r\n可以比较一下 var_dump() 与 print_r()。<br />\r\n<br />\r\n例子<br />\r\n&nbsp;代码如下 <br />\r\n<br />\r\n<pre>\r\n　　<!--?php\r\n\r\n　　$a = array (1, 2, array (\"a\", \"b\", \"c\"));\r\n\r\n　　var_dump ($a);\r\n\r\n　　/* 输出：\r\n\r\n　　array(3) {\r\n\r\n　　[0]=-->\r\n\r\n　　int(1)\r\n\r\n　　[1]=&gt;\r\n\r\n　　int(2)\r\n\r\n　　[2]=&gt;\r\n\r\n　　array(3) {\r\n\r\n　　[0]=&gt;\r\n\r\n　　string(1) \"a\"\r\n\r\n　　[1]=&gt;\r\n\r\n　　string(1) \"b\"\r\n\r\n　　[2]=&gt;\r\n\r\n　　string(1) \"c\"\r\n\r\n　　}\r\n\r\n　　}\r\n\r\n　　*/\r\n\r\n　　$b = 3.1;\r\n\r\n　　$c = TRUE;\r\n\r\n　　var_dump($b,$c);\r\n\r\n　　/* 输出：\r\n\r\n　　float(3.1)\r\n\r\n　　bool(true)\r\n\r\n　　*/\r\n\r\n　　?&gt;\r\n\r\n　　</pre>\r\n&nbsp;<br />\r\n以上内容转自：<a href=\"http://www.111cn.net/phper/php/43382.htm\" target=\"_blank\">http://www.111cn.net/phper/php/43382.htm</a><br />', '1432896945', '1432899290', '789', '1', 'http://www.111cn.net/phper/php/43382.htm', '2', 'php入门之echo、printf、var_dump等函数用法介绍', '1', '0');
INSERT INTO `sxs_article` VALUES ('10', 'admin', 'h,c', '/Uploads/image/20150530/20150530124403_57245.jpg', '9', 'apache,iis7.0', 'iis服务器中的配置问题，url重写问题', '<h2>\r\n	关于Apache项目移动到iis7.0中的问题\r\n</h2>\r\n<p>\r\n	<strong>1.iis服务器添加处理程序映射（首先确保你的php环境没问题）</strong> \r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150530/20150530094120_98818.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150530/20150530094747_89323.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150530/20150530094814_12927.png\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<hr />\r\n走完以上步骤后，可以写一个index.php放在站点根目录下测试下，看环境是否配置成功了，测试代码如下：\r\n<p>\r\n	<!--?php\r\n</p>\r\n<p>\r\n	?phpinfo();\r\n</p>\r\n<p>\r\n	?>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\"><!--?php\r\n phpinfo();\r\n?-->\r\n	</p>\r\n\r\n<pre class=\"prettyprint lang-php\">如果可以打印出如下配置信息，那么恭喜你，你的php运行在iis中没有问题了</pre>\r\n<pre class=\"prettyprint lang-php\"><img src=\"/Uploads/image/20150530/20150530101314_18696.png\" alt=\"\" /> </pre>\r\n<pre class=\"prettyprint lang-php\">-------------------------------------------------------华丽分割线----------------------------------------------------------------------------------------</pre>\r\n<pre class=\"prettyprint lang-php\">2，如果你的php项目需要用到URL重新的话，继续往下看吧</pre>\r\n<pre class=\"prettyprint lang-php\">iis中默认是不带url重写模块的，所有你必须自己去安装</pre>\r\n<pre class=\"prettyprint lang-php\"><span style=\"color:#444444;font-family:宋体;font-size:15px;line-height:26px;\">下载相应模块：??</span><a href=\"http://www.iis.net/downloads/default.aspx?tabid=34&g=6&i=1691\">X86</a><span style=\"color:#444444;font-family:宋体;font-size:15px;line-height:26px;\">???</span><a href=\"http://www.iis.net/downloads/default.aspx?tabid=34&g=6&i=1692\">X64</a> </pre>\r\n<pre class=\"prettyprint lang-php\"></pre>\r\n<pre class=\"prettyprint lang-php\">安装完成后，你的功能视图会多一个</pre>\r\n<pre class=\"prettyprint lang-php\"><img src=\"/Uploads/image/20150530/20150530100107_46684.png\" alt=\"\" /> </pre>\r\n<pre class=\"prettyprint lang-php\">接下来就可以添加自己的重新规则了，添加规则是灵活的，可以自己手写，iis7也支持.htaccess文件导入</pre>\r\n<pre class=\"prettyprint lang-php\"><img src=\"/Uploads/image/20150530/20150530100351_91697.png\" alt=\"\" /> </pre>\r\n<pre class=\"prettyprint lang-php\">至此你的iis站点已经拥有url重新功能了，如果你添加了正确的url重写规则的话，访问的时候就可以隐藏index.php了</pre>\r\n	<p>\r\n		<br />\r\n	</p>', '1432951579', '1433229139', '926', '1', '未知', '2', 'Apache项目移动到iis', '1', '0');
INSERT INTO `sxs_article` VALUES ('12', 'admin', 'h,c', '', '4', 'sql脚本,php,mysql,', '通过php实现mysql数据库数据的脚本备份', '<p>\r\n	之前看过很多数据库的备份的功能，今天有时间自己也琢磨一下，实现思路就是生成sql脚本文件，我想也没几个会去硬备份文件库文件的吧？下面把详细的代码贴出来，实现过程中遇到 了诸多的问题，就不一一列出来了，代码关键易出错的部分备注的很详细，下面就看看代码吧（此实现基于thinkphp框架）\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\">&lt;?php\r\nnamespace Home\\Controller;\r\nuse Think\\Controller;\r\nclass IndexController extends Controller {\r\n    public function index(){\r\n		$m = M();\r\n		$list = $m-&gt;query(\"SHOW TABLE STATUS FROM \".\"`\".C(\'DB_NAME\').\"`\");//查询所有的库\r\n		$tables = array();\r\n        foreach ($list as $key =&gt; $val)\r\n		{\r\n			$tables[$key][\'name\'] = $val[\'Name\'];//表名\r\n			$tables[$key][\'rows\'] = $val[\'Rows\'];//记录数\r\n			$tables[$key][\'engine\'] = $val[\'Engine\'];//引擎\r\n			$tables[$key][\'data_length\'] = sizecount($val[\'Data_length\']);//表大小\r\n			$tables[$key][\'create_time\']=$val[\'Create_time\'];//表创建时间\r\n			$tables[$key][\'collation\']=$val[\'Collation\'];//编码类型\r\n        }\r\n		$this-&gt;assign(\'list\',$tables);//将数据传到页面，让用户选择备份的表\r\n		$this-&gt;display();    \r\n    }\r\n    \r\n    //数据备份\r\n    public function backup(){\r\n        $tbs = $_POST[\'tables\'];//获得所有的表名\r\n        if(!$tbs){\r\n            $this-&gt;error(\'请选中记录！\');\r\n        }\r\n        //初始化将要保存的sql字符串。设置外键约束失效，防止数据还原时，原表的外键约束干扰表的删除\r\n        $data = \"SET FOREIGN_KEY_CHECKS = 0;\\n\";\r\n        foreach($tbs as $tab){\r\n            $obj = M($tab);//实例化一个表模型\r\n            $row = $obj-&gt;query(\"SHOW CREATE TABLE $tab\");\r\n            $data .= \"DROP TABLE IF EXISTS `\".$tab.\"`;\\n\" . $row[0][\'Create Table\'] . \";\\n\";//如果存在这个表就删除\r\n             //$row[0][\'Create Table\']//这个包含了创建表的信息\r\n            $datalist = $obj-&gt;select();//依次查询每个表的数据         \r\n            foreach($datalist as $val){\r\n                $data .= \"INSERT INTO `\".$tab.\"` VALUES (\";\r\n                $vals = array();\r\n                foreach($val as $v){  \r\n                    if($v==\"\")\r\n                    {\r\n                        $vals[] = \'NULL\';//解决mysql5.0以上空字符串报错的问题\r\n                    }\r\n                    else \r\n                    {\r\n                         $vals[] = \"\'\" . $v . \"\'\";\r\n                    }\r\n                }\r\n                $data .= implode(\', \', $vals) . \");\\n\";//implode:把数组用,组装成字符串\r\n            }\r\n            $data .= \"\\n\";     \r\n        }\r\n        $data.=\"SET FOREIGN_KEY_CHECKS = 1;\\n\";//把外键约束重新设置回来\r\n       //------------------以上脚本sql拼接完成了,下面把这个字符串保存起来------------------\r\n        $datadir = \'backupdata/\';//保存备份文件的文件夹\r\n        $filename = $datadir . C(\'DB_NAME\').\"_\" . time() . \".sql\";//保存的文件名\r\n        if(!$fp = @fopen($filename, \"w+\")){//创建文件\r\n            echo \"&lt;font coloe=\'red\'&gt;提示：在创建文件时遇到错误!&lt;/font&gt;\";\r\n           $this-&gt;error(\'备份数据失败！\');\r\n        }\r\n        if(!@fwrite($fp, $data)){//写入文件\r\n            echo \"&lt;font color=\'red\'&gt;提示：在写入信息时遇到错误!&lt;/font&gt;\";\r\n            fclose($fp);\r\n            unlink($filename);//如果写入失败。就删除刚刚创建的文件\r\n             $this-&gt;error(\'备份数据失败！\');\r\n        }\r\n        fclose($fp);\r\n        $this-&gt;success(\'备份数据成功！\');  \r\n    }\r\n\r\n}</pre>\r\n<p>\r\n	<br />\r\n</p>', '1433389825', '1433389825', '839', '1', '未知', '2', 'php实现mysql数据库备份', '1', '0');
INSERT INTO `sxs_article` VALUES ('13', 'admin', 'h,c', '', '5', '', '使用IFNULL、IF、CASE...WHEN...THEN...等对查询结果过滤', '<p>\r\n	现在有一张用户表，用户名可以为null，查询用户的时候，若用户名为空则为匿名，否则为实际的name\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	1.用最简单的IFUNLL函数实现如下：\r\n</p>\r\n<p>\r\n	select passwd,IFNULL(name,\"匿名\") as \'name\' &nbsp;from users\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	2.使用IF函数实现如下\r\n</p>\r\n<p>\r\n	select passwd,IF(name is not null,name,\"匿名\") as \'name\' from users\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	3.使用CASE....WHEN...THEN函数实现如下\r\n</p>\r\n<p>\r\n	SELECT passwd, CASE WHEN name is not NULL THEN name ELSE \'匿名\' END &nbsp;as \'name\'FROM users\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	当然，IF和<span>CASE....WHEN...THEN函数的功能不仅仅如此，实际使用过程中看你的实际问题选择对应的函数，会达到事半功倍的效果</span> \r\n</p>', '1433405769', '1433407681', '985', '1', '未知', '2', 'mysql控制流程函数的使用', '1', '0');
INSERT INTO `sxs_article` VALUES ('14', 'admin', '', '', '4', 'php,function', '本文列出了php中常用函数，并对函数的功能加以说明，方便日后查看', 'php usleep() 函数延迟代码执行若干微秒。<br />\r\nunpack() 函数从二进制字符串对数据进行解包。<br />\r\nuniqid() 函数基于以微秒计的当前时间，生成一个唯一的 ID。<br />\r\ntime_sleep_until() 函数延迟代码执行直到指定的时间。<br />\r\ntime_nanosleep() 函数延迟代码执行若干秒和纳秒。<br />\r\nsleep() 函数延迟代码执行若干秒。<br />\r\nshow_source() 函数对文件进行语法高亮显示。<br />\r\nstrip_whitespace() 函数返回已删除 PHP 注释以及空白字符的源代码文件。<br />\r\npack() 函数把数据装入一个二进制字符串。<br />\r\nignore_user_abort() 函数设置与客户机断开是否会终止脚本的执行。<br />\r\nhighlight_string() 函数对字符串进行语法高亮显示。<br />\r\nhighlight_file() 函数对文件进行语法高亮显示。<br />\r\nget_browser() 函数返回用户浏览器的性能。<br />\r\nexit() 函数输出一条消息，并退出当前脚本。<br />\r\neval() 函数把字符串按照 PHP 代码来计算。<br />\r\ndie() 函数输出一条消息，并退出当前脚本。<br />\r\ndefined() 函数检查某常量是否存在。<br />\r\ndefine() 函数定义一个常量。<br />\r\nconstant() 函数返回常量的值。<br />\r\nconnection_status() 函数返回当前的连接状态。<br />\r\nconnection_aborted() 函数检查是否断开客户机。<br />\r\nzip_read() 函数读取打开的 zip 档案中的下一个文件。<br />\r\nzip_open() 函数打开 ZIP 文件以供读取。<br />\r\nzip_entry_read() 函数从打开的 zip 档案项目中获取内容。<br />\r\nzip_entry_open() 函数打开一个 ZIP 档案项目以供读取。<br />\r\nzip_entry_name() 函数返回 zip 档案项目的名称。<br />\r\nzip_entry_filesize() 函数返回 zip 档案项目的原始大小（在压缩之前）。<br />\r\nzip_entry_compressionmethod() 函数返回 zip 档案项目的压缩方法。<br />\r\nzip_entry_compressedsize() 函数返回 zip 档案项目的压缩文件尺寸。<br />\r\nzip_entry_close() 函数关闭由 zip_entry_open() 函数打开的 zip 档案文件。<br />\r\nzip_close() 函数关闭由 zip_open() 函数打开的 zip 档案文件。<br />\r\nxml_set_unparsed_entity_decl_handler() 函数规定在遇到无法解析的实体名称（NDATA）声明时被调用的函数。<br />\r\nxml_set_processing_instruction_handler() 函数规定当解析器在 XML 文档中找到处理指令时所调用的函数。<br />\r\nxml_set_object() 函数允许在对象中使用 XML 解析器。<br />\r\nxml_set_notation_decl_handler() 函数规定当解析器在 XML 文档中找到符号声明时被调用的函数。<br />\r\nxml_set_external_entity_ref_handler() 函数规定当解析器在 XML 文档中找到外部实体时被调用的函数。<br />\r\nxml_set_element_handler() 函数建立起始和终止元素处理器。<br />\r\nxml_set_default_handler() 函数为 XML 解析器建立默认的数据处理器。<br />\r\nxml_set_character_data_handler() 函数建立字符数据处理器。<br />\r\nxml_parser_set_option() 函数为 XML 解析器进行选项设置。<br />\r\nxml_parser_get_option() 函数从 XML 解析器获取选项设置信息。<br />\r\nxml_parser_free() 函数释放 XML 解析器。<br />\r\nxml_parser_create() 函数创建 XML 解析器。<br />\r\nxml_parser_create_ns() 函数创建带有命名空间支持的 XML 解析器。<br />\r\nxml_parse_into_struct() 函数把 XML 数据解析到数组中。<br />\r\nxml_parse() 函数解析 XML 文档。<br />\r\nxml_get_error_code() 函数获取 XML 解析器错误代码。<br />\r\nxml_get_current_line_number() 函数获取 XML 解析器的当前行号。<br />\r\nxml_get_current_column_number() 函数获取 XML 解析器的当前列号。<br />\r\nxml_get_current_byte_index() 函数获取 XML 解析器的当前字节索引。<br />\r\nxml_error_string() 函数获取 XML 解析器的错误描述。<br />\r\nutf8_encode() 函数把 ISO-8859-1 字符串编码为 UTF-8。<br />\r\nutf8_decode() 函数把 UTF-8 字符串解码为 ISO-8859-1。<br />\r\nwordwrap() 函数按照指定长度对字符串进行折行处理。<br />\r\nvsprintf() 函数把格式化字符串写入变量中。<br />\r\nvprintf() 函数输出格式化的字符串。<br />\r\nvfprintf() 函数把格式化的字符串写到指定的输出流。<br />\r\nucwords() 函数把字符串中每个单词的首字符转换为大写。<br />\r\nucfirst() 函数把字符串中的首字符转换为大写。<br />\r\ntrim() 函数从字符串的两端删除空白字符和其他预定义字符。<br />\r\nsubstr_replace() 函数把字符串的一部分替换为另一个字符串。<br />\r\nsubstr_count() 函数计算子串在字符串中出现的次数。<br />\r\nsubstr_compare() 函数从指定的开始长度比较两个字符串。<br />\r\nsubstr() 函数返回字符串的一部分。<br />\r\nstrtr() 函数转换字符串中特定的字符。<br />\r\nstrtoupper() 函数把字符串转换为大写。<br />\r\nstrtolower() 函数把字符串转换为小写。<br />\r\nstrtok() 函数把字符串分割为更小的字符串。<br />\r\nstrstr() 函数搜索一个字符串在另一个字符串中的第一次出现。<br />\r\nstrspn() 函数返回在字符串中包含的特定字符的数目。<br />\r\nstrrpos() 函数查找字符串在另一个字符串中最后一次出现的位置。<br />\r\nstrripos() 函数查找字符串在另一个字符串中最后一次出现的位置。<br />\r\nstrrev() 函数反转字符串。<br />\r\nstrrchr() 函数查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符。<br />\r\nstrpos() 函数返回字符串在另一个字符串中第一次出现的位置。<br />\r\nstrpbrk() 函数在字符串中搜索指定字符中的任意一个。<br />\r\nstrncmp() 函数比较两个字符串。<br />\r\nstrncasecmp() 函数比较两个字符串。<br />\r\nstrnatcmp() 函数使用一种“自然”算法来比较两个字符串。<br />\r\nstrnatcasecmp() 函数使用一种“自然”算法来比较两个字符串。<br />\r\nstrlen() 函数返回字符串的长度。<br />\r\nstristr() 函数查找字符串在另一个字符串中第一次出现的位置。<br />\r\nstripos() 函数返回字符串在另一个字符串中第一次出现的位置。<br />\r\nstripslashes() 函数删除由 addslashes() 函数添加的反斜杠。<br />\r\nstripcslashes() 函数删除由 addcslashes() 函数添加的反斜杠。<br />\r\nstrip_tags() 函数剥去 HTML、XML 以及 PHP 的标签。<br />\r\nstrcspn() 函数返回在找到任何指定的字符之前，在字符串查找的字符数。<br />\r\nstrcoll() 函数比较两个字符串。<br />\r\nstrcmp() 函数比较两个字符串。<br />\r\nstrchr() 函数搜索一个字符串在另一个字符串中的第一次出现。<br />\r\nstrcasecmp() 函数比较两个字符串。<br />\r\nstr_word_count() 函数计算字符串中的单词数。<br />\r\nstr_split() 函数把字符串分割到数组中。<br />\r\nstr_shuffle() 函数随机地打乱字符串中的所有字符。<br />\r\nstr_rot13() 函数对字符串执行 ROT13 编码。<br />\r\nstr_replace() 函数使用一个字符串替换字符串中的另一些字符。<br />\r\nstr_repeat() 函数把字符串重复指定的次数。<br />\r\nstr_pad() 函数把字符串填充为指定的长度。<br />\r\nstr_ireplace() 函数使用一个字符串替换字符串中的另一些字符。<br />\r\nsscanf() 函数根据指定的格式解析来自一个字符串的输入。<br />\r\nsprintf() 函数把格式化的字符串写写入一个变量中。<br />\r\nsoundex() 函数计算字符串的 soundex 键。<br />\r\nsimilar_text() 函数计算两个字符串的匹配字符的数目。<br />\r\nsha1_file() 函数计算文件的 SHA-1 散列。<br />\r\nsha1() 函数计算字符串的 SHA-1 散列。<br />\r\nsetlocale() 函数设置地区信息（地域信息）。<br />\r\nrtrim() P rtrim() 函数&nbsp;<br />\r\nPHP String 函数<br />\r\nquotemeta() 函数在字符串中某些预定义的字符前添加反斜杠。<br />\r\nquoted_printable_decode() 函数对经过 quoted-printable 编码后的字符串进行解码，返回 8 位的字符串。<br />\r\nprintf() 函数输出格式化的字符串。<br />\r\nprint() 函数输出一个或多个字符串。<br />\r\nparse_str() 函数把查询字符串解析到变量中。<br />\r\nord() 函数返回字符串第一个字符的 ASCII 值。<br />\r\nnumber_format() 函数通过千位分组来格式化数字。<br />\r\nnl2br() 函数在字符串中的每个新行 (\\n) 之前插入 HTML 换行符 (&lt;br /&gt;)。<br />\r\nnl_langinfo() 函数返回指定的本地信息。<br />\r\nmoney_format() 函数把字符串格式化为货币字符串。<br />\r\nmetaphone() 函数计算字符串的 metaphone 键。<br />\r\nmd5_file() 函数计算文件的 MD5 散列。<br />\r\nmd5() 函数计算字符串的 MD5 散列。<br />\r\nltrim() 函数从字符串左侧删除空格或其他预定义字符。<br />\r\nlocaleconv() 函数返回包含本地数字及货币信息格式的数组。<br />\r\nlevenshtein() 函数返回两个字符串之间的 Levenshtein 距离。<br />\r\njoin() 函数把数组元素组合为一个字符串。<br />\r\nimplode() 函数把数组元素组合为一个字符串。<br />\r\nhtmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体。<br />\r\nhtml_entity_decode() chars_decode() 函数<br />\r\n<br />\r\nPHP String 函数<br />\r\nhtmlentities() 函数把字符转换为 HTML 实体。<br />\r\nhtml_entity_decode() 函数把 HTML 实体转换为字符。<br />\r\nhebrevc() 函数把希伯来文本从右至左的流转换为左至右的流。它也会把新行 (\\n) 转换为 &lt;br /&gt;。<br />\r\nhebrev() 函数把希伯来文本从右至左的流转换为左至右的流。<br />\r\nget_html_translation_table() 函数返回被 htmlentities() 和 htmlspecialchars() 函数使用的翻译表。<br />\r\nfprintf() 函数把格式化的字符串写到指定的输出流（例如：文件或数据库）。<br />\r\nexplode() 函数把字符串分割为数组。<br />\r\necho() 函数输出一个或多个字符串。<br />\r\ncrypt() 函数返回使用 DES、Blowfish 或 MD5 加密的字符串。<br />\r\ncrc32() 函数计算一个字符串的 crc32 多项式。<br />\r\ncount_chars() 函数返回字符串所用字符的信息。<br />\r\nconvert_uuencode() 函数使用 uuencode 算法对字符串进行编码。<br />\r\nconvert_uudecode() 函数对 uuencode 编码的字符串进行解码。<br />\r\nconvert_cyr_string() 函数把字符由一种 Cyrillic 字符转换成另一种。<br />\r\nchunk_split() 函数把字符串分割为一连串更小的部分。<br />\r\nchr() 函数从指定的 ASCII 值返回字符。<br />\r\nchop() 函数从字符串的末端开始删除空白字符或其他预定义字符。<br />\r\nbin2hex() 函数把 ASCII 字符的字符串转换为十六进制值。<br />\r\naddslashes() 函数在指定的预定义字符前添加反斜杠。<br />\r\naddcslashes() 函数在指定的字符前添加反斜杠。<br />\r\nxpath() 函数运行对 XML 文档的 XPath 查询。<br />\r\nsimplexml_load_string() 函数把 XML 字符串载入对象中。<br />\r\nsimplexml_load_file() 函数把 XML 文档载入对象中。<br />\r\nsimplexml_import_dom() 函数把 DOM 节点转换为 SimpleXMLElement 对象。<br />\r\nregisterXPathNamespace() 函数为下一次 XPath 查询创建命名空间语境。<br />\r\ngetNamespace() 函数获取在 XML 文档中使用的命名空间。<br />\r\ngetName() 函数从 SimpleXMLElement 对象获取 XML 元素的名称。<br />\r\ngetDocNamespaces() 函数从 SimpleXMLElement 对象返回在 XML 文档中声明的命名空间。<br />\r\nchildren() 函数获取指定节点的子节点。<br />\r\nattributes() 函数获取 SimpleXML 元素的属性。<br />\r\nasXML() 函数以字符串的形式从 SimpleXMLElement 对象返回 XML 文档。<br />\r\naddChild() 函数向指定的 XML 节点添加一个子节点。<br />\r\naddAttribute() 函数给 SimpleXML 元素添加一个属性。<br />\r\n__construct() 函数创建一个新的 SimpleXMLElement 对象。<br />\r\nmysql_unbuffered_query() 函数向 MySQL 发送一条 SQL 查询（不获取 / 缓存结果）。<br />\r\nmysql_thread_id() 函数返回当前线程的 ID。<br />\r\nmysql_stat() 函数返回 MySQL 服务器的当前系统状态。<br />\r\nmysql_select_db() 函数设置活动的 MySQL 数据库。<br />\r\nmysql_result() 函数返回结果集中一个字段的值。<br />\r\nmysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。<br />\r\nmysql_query() 函数执行一条 MySQL 查询。<br />\r\nmysql_ping() 函数 Ping 一个服务器连接，如果没有连接则重新连接。<br />\r\nmysql_pconnect() 函数打开一个到 MySQL 服务器的持久连接。<br />\r\nmysql_num_rows() 函数返回结果集中行的数目。<br />\r\nmysql_num_fields() 函数返回结果集中字段的数。<br />\r\nmysql_list_processes() 函数列出 MySQL 进程。<br />\r\nmysql_list_dbs() 函数列出 MySQL 服务器中所有的数据库。<br />\r\nmysql_insert_id() 函数返回上一步 INSERT 操作产生的 ID。<br />\r\nmysql_info() 函数返回最近一条查询的信息。<br />\r\nmysql_get_server_info() 函数返回 MySQL 服务器的信息。<br />\r\nmysql_get_proto_info() 函数返回 MySQL 协议的信息。<br />\r\nmysql_get_host_info() 函数返回 MySQL 主机的信息。<br />\r\nmysql_get_client_info() 函数返回 MySQL 客户端信息。<br />\r\nmysql_free_result() 函数释放结果内存。<br />\r\nmysql_field_type() 函数返回结果集中指定字段的类型。<br />\r\nmysql_field_table() 函数返回指定字段所在的表名。<br />\r\nmysql_field_seek() 函数将结果集中的指针设定为指定的字段偏移量。<br />\r\nmysql_field_name() 函数取得结果中指定字段的字段名。<br />\r\nmysql_field_len() 函数返回指定字段的长度。<br />\r\nmysql_field_flags() 函数从结果中取得和指定字段关联的标志。<br />\r\nmysql_fetch_row() 函数从结果集中取得一行作为数字数组。<br />\r\nmysql_fetch_object() 函数从结果集（记录集）中取得一行作为对象。<br />\r\nmysql_fetch_lengths() 函数取得一行中每个字段的内容的长度。<br />\r\nmysql_fetch_field() 函数从结果集中取得列信息并作为对象返回。<br />\r\nmysql_fetch_assoc() 函数从结果集中取得一行作为关联数组。<br />\r\nmysql_fetch_array() 函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有<br />\r\nmysql_error() 函数返回上一个 MySQL 操作产生的文本错误信息。<br />\r\nmysql_errno() 函数返回上一个 MySQL 操作中的错误信息的数字编码。<br />\r\nmysql_db_name() 函数取得 mysql_list_dbs() 调用所返回的数据库名。<br />\r\nmysql_data_seek() 函数移动内部结果的指针。<br />\r\nmysql_connect() 函数打开非持久的 MySQL 连接。<br />\r\nmysql_close() 函数关闭非持久的 MySQL 连接。<br />\r\nmysql_client_encoding() 函数返回当前连接的字符集的名称。<br />\r\nmysql_affected_rows() 函数返回前一次 MySQL 操作所影响的记录行数。<br />\r\ntanh() 函数返回双曲正切。<br />\r\ntan() 函数返回正切。<br />\r\nsrand() 函数播下随机数发生器种子。<br />\r\nsqrt() 函数返回一个数的平方根。<br />\r\nsinh() 函数返回一个数的双曲正弦。<br />\r\nsin() 函数返回一个数的正弦。<br />\r\nround() 函数对浮点数进行四舍五入。<br />\r\nrand() 函数返回随机整数。<br />\r\nrad2deg() 函数把弧度数转换为角度数。<br />\r\npow() 函数返回 x 的 y 次方。<br />\r\npi() 函数返回圆周率的值。<br />\r\noctdec() 函数把八进制转换为十进制。<br />\r\nmt_srand() 播种 Mersenne Twister 随机数生成器。<br />\r\nmt_rand() 使用 Mersenne Twister 算法返回随机整数。<br />\r\nmt_getrandmax() 显示随机数的最大可能值。<br />\r\nmin() 返回最小值。<br />\r\nmax() 返回最大值。<br />\r\nlog1p() 以返回 log(1 + x)，甚至当 x 的值接近零也能计算出准确结果。<br />\r\nlog10() 以 10 为底的对数。<br />\r\nlog() 返回自然对数。<br />\r\nlcg_value() 组合线性同余发生器。<br />\r\nis_nan() 判断是否为合法数值。<br />\r\nis_infinite() 判断是否为无限值。<br />\r\nis_finite() 函数判断是否为有限值。<br />\r\nhypot() 函数计算一直角三角形的斜边长度。<br />\r\nhexdec() 函数把十六进制转换为十进制。<br />\r\nfmod() 函数显示随机数最大的可能值。<br />\r\nfmod() 函数返回除法的浮点数余数。<br />\r\nfloor() 函数向下舍入为最接近的整数。<br />\r\nexpm1() 函数返回 exp(x) - 1，甚至当 number 的值接近零也能计算出准确结果。<br />\r\nexp() 函数计算 e 的指数。<br />\r\ndeg2rad() 函数将角度转换为弧度。<br />\r\ndecoct() 函数把十进制转换为八进制。<br />\r\ndechex() 函数把十进制转换为十六进制。<br />\r\ndecbin() 函数把十进制转换为二进制。<br />\r\ncosh() 函数返回一个数的双曲余弦。<br />\r\ncos() 函数返回一个数的余弦。<br />\r\nceil() 函数向上舍入为最接近的整数。<br />\r\nbindec() 函数把二进制转换为十进制。<br />\r\nbase_convert() 函数在任意进制之间转换数字。<br />\r\natanh() 函数返回一个角度的反双曲正切。<br />\r\natan() 和 atan2() 和 atan2() 函数<br />\r\n<br />\r\nPHP Math 函数<br />\r\natan() 和 atan2() 和 atan2() 函数<br />\r\n<br />\r\nPHP Math 函数<br />\r\nasinh() 函数返回一个数的反双曲正弦。<br />\r\nasin() 函数返回不同数值的反正弦，返回的结果是介于 -PI/2 与 PI/2 之间的弧度值。<br />\r\nacosh() 函数返回一个数的反双曲余弦。<br />\r\nacos() 函数返回一个数的反余弦。<br />\r\nabs() 函数返回一个数的绝对值。<br />\r\nmail() 函数允许您从脚本中直接发送电子邮件。<br />\r\nlibxml_use_internal_errors() 函数禁用标准的 libxml 错误，并启用用户错误处理。<br />\r\nlibxml_get_last_error() 函数从 libxml 错误缓冲中获取最后一个错误。<br />\r\nlibxml_get_errors() 函数从 libxml 错误缓冲中获取错误。<br />\r\nlibxml_clear_errors() 函数清空 libxml 错误缓冲。<br />\r\nsetrawcookie() 函数不对 cookie 值进行 URL 编码，发送一个 HTTP cookie。<br />\r\nsetcookie() 函数向客户端发送一个 HTTP cookie。<br />\r\nheaders_sent() 函数检查 HTTP 报头是否发送/已发送到何处。<br />\r\nheaders_list() 函数返回已发送的（或待发送的）响应头部的一个列表。<br />\r\nheader() 函数向客户端发送原始的 HTTP 报头。<br />\r\nftp_systype() 函数返回远程 FTP 服务器的系统类型标识符。<br />\r\nftp_ssl_connect() 函数打开一个安全的 SSL-FTP 连接。<br />\r\nftp_size() 函数返回指定文件的大小。<br />\r\nftp_site() 函数向服务器发送 SITE 命令。<br />\r\nftp_set_option() 函数设置各种 FTP 运行时选项。<br />\r\nftp_rmdir() 函数删除一个目录。<br />\r\nftp_rename() 函数更改 FTP 服务器上的文件或目录名。<br />\r\nftp_rawlist() 函数返回指定目录中文件的详细列表。<br />\r\nftp_raw() 函数向 FTP 服务器发送一个 raw 命令。<br />\r\nftp_quit() 函数关闭 FTP 连接。<br />\r\nftp_pwd() 函数返回当前目录名。<br />\r\nftp_put() 函数把文件上传到服务器。<br />\r\nftp_pasv() 函数把被动模式设置为打开或关闭。<br />\r\nftp_nlist() 函数返回指定目录的文件列表。<br />\r\nftp_nb_put() 函数把文件上传到服务器 (non-blocking)。<br />\r\nftp_nb_get() 函数从 FTP 服务器上获取文件并写入本地文件 (non-blocking)。<br />\r\nftp_nb_fput() 函数上传一个已打开的文件，并在 FTP 服务器上把它保存为文件 (non-blocking)。<br />\r\nftp_nb_fget() 函数从 FTP 服务器上下载一个文件并保存到本地已经打开的一个文件中 (non-blocking)。<br />\r\nftp_nb_continue() 函数连续获取 / 发送文件。<br />\r\nftp_mkdir() 函数在 FTP 服务器上建立新目录。<br />\r\nftp_mdtm() 函数返回指定文件的最后修改时间。<br />\r\nftp_login() 函数登录 FTP 服务器。<br />\r\nftp_get() 函数从 FTP 服务器上下载一个文件。<br />\r\nftp_get_option() 函数返回当前 FTP 连接的各种不同的选项设置。<br />\r\nftp_fput() 函数上传一个已经打开的文件到 FTP 服务器。<br />\r\nftp_fget() 函数从 FTP 服务器上下载一个文件并保存到本地一个已经打开的文件中。<br />\r\nftp_exec() 函数请求在 FTP 服务器上执行一个程序或命令。<br />\r\nftp_delete() 函数删除 FTP 服务器上的一个文件。<br />\r\nftp_connect() 函数建立一个新的 FTP 连接。<br />\r\nftp_close() 函数关闭 FTP 连接。<br />\r\nftp_chmod() 函数设置 FTP 服务器上指定文件的权限。<br />\r\nftp_chdir() 函数改变 FTP 服务器上的当前目录。<br />\r\nftp_cdup() 函数把当前目录改变为 FTP 服务器上的父目录。<br />\r\nftp_alloc() 函数为要上传到 FTP 服务器的文件分配空间。<br />\r\nfilter_var() 函数通过指定的过滤器过滤变量。<br />\r\nfilter_var_array() 函数获取多项变量，并进行过滤。<br />\r\nfilter_list() 函数返回包含所有得到支持的过滤器的一个数组。<br />\r\nfilter_input_array() 函数从脚本外部获取多项输入，并进行过滤。<br />\r\nfilter_input() 函数从脚本外部获取输入，并进行过滤。<br />\r\nfilter_id() 函数返回指定过滤器的 ID 号。<br />\r\nfilter_has_var() 函数检查是否存在指定输入类型的变量。<br />\r\nunlink() 函数删除文件。<br />\r\numask() 函数改变当前的 umask。<br />\r\ntouch() 函数设置指定文件的访问和修改时间。<br />\r\ntmpfile() 函数以读写（w+）模式建立一个具有唯一文件名的临时文件。<br />\r\ntempnam() 函数创建一个具有唯一文件名的临时文件。<br />\r\nsymlink() 函数创建符号连接。<br />\r\nstat() 函数返回关于文件的信息。<br />\r\nset_file_buffer() 函数设置打开文件的缓冲大小。<br />\r\nrmdir() 函数删除空的目录。<br />\r\nrewind() 函数将文件指针的位置倒回文件的开头。<br />\r\nrename() 函数重命名文件或目录。<br />\r\nrealpath() 函数返回绝对路径。<br />\r\nreadlink() 函数返回符号连接指向的目标。<br />\r\nreadfile() 函数输出一个文件。<br />\r\npopen() 函数打开进程文件指针。<br />\r\npclose() 函数关闭由 popen() 打开的管道。<br />\r\npathinfo() 函数以数组的形式返回文件路径的信息。<br />\r\nparse_ini_file() 函数解析一个配置文件，并以数组的形式返回其中的设置。<br />\r\nmove_uploaded_file() 函数将上传的文件移动到新位置。<br />\r\nmkdir() 函数创建目录。<br />\r\nlstat() 函数返回关于文件或符号连接的信息。<br />\r\nlinkinfo() 函数返回连接的信息。<br />\r\nlink() 函数建立一个硬连接。<br />\r\nis_writeable() 函数判断指定的文件是否可写。<br />\r\nis_writable() 函数判断指定的文件是否可写。<br />\r\nis_uploaded_file() 函数判断指定的文件是否是通过 HTTP POST 上传的。<br />\r\nis_readable() 函数判断指定文件名是否可读。<br />\r\nis_link() 函数判断指定文件名是否为一个符号连接。<br />\r\nis_file() 函数检查指定的文件名是否是正常的文件。<br />\r\nis_executable() 函数检查指定的文件是否可执行。<br />\r\nis_dir() 函数检查指定的文件是否是目录。<br />\r\nglob() 函数返回匹配指定模式的文件名或目录。<br />\r\nfwrite() 函数写入文件（可安全用于二进制文件）。<br />\r\nftruncate() 函数把文件截断到指定的长度。<br />\r\nftell() 函数在打开文件中的当前位置。<br />\r\nfstat() 函数返回关于打开文件的信息。<br />\r\nfseek() 函数在打开的文件中定位。<br />\r\nfscanf() 函数根据指定的格式对来自打开的文件的输入进行解析。<br />\r\nfread() 函数读取文件（可安全用于二进制文件）。<br />\r\nfputs() 函数写入文件（可安全用于二进制文件）。<br />\r\nfputcsv() 函数将行格式化为 CSV 并写入一个打开的文件。<br />\r\nfpassthru() 函数输出文件指针处的所有剩余数据。<br />\r\nfopen() 函数打开文件或者 URL。<br />\r\nfnmatch() 函数根据指定的模式来匹配文件名或字符串。<br />\r\nflock() 函数锁定或释放文件。<br />\r\nfiletype() 函数返回指定文件或目录的类型。<br />\r\nfilesize() 函数返回指定文件的大小。<br />\r\nfileperms() 函数返回文件或目录的权限。<br />\r\nfileowner() 函数返回文件的所有者。<br />\r\nfilemtime() 函数返回文件内容上次的修改时间。<br />\r\nfileinode() 函数返回文件的 inode 编号。<br />\r\nfilegroup() 函数返回指定文件的组 ID。<br />\r\nfilectime() 函数返回指定文件的上次 inode 修改时间。<br />\r\nfileatime() 函数返回指定文件的上次访问时间。<br />\r\nfile_put_contents() 函数把一个字符串写入文件中。<br />\r\nfile_get_contents() 函数把整个文件读入一个字符串中。<br />\r\nfile_exists() 函数检查文件或目录是否存在。<br />\r\nfile() 函数把整个文件读入一个数组中。<br />\r\nfgetss() 函数从打开的文件中读取一行并过滤掉 HTML 和 PHP 标记。<br />\r\nfgets() 函数从文件指针中读取一行。<br />\r\nfgetcsv() 函数从文件指针中读入一行并解析 CSV 字段。<br />\r\nfgetc() 函数从文件指针中读取一个字符。<br />\r\nfflush() 函数将缓冲内容输出到文件。<br />\r\nfeof() 函数检测是否已到达文件末尾 (eof)。<br />\r\nfclose() 函数关闭一个打开文件。<br />\r\ndiskfreespace() 函数返回目录中的可用空间。该函数是 disk_free_space() 函数的别名。<br />\r\ndisk_total_space() 函数返回指定目录的磁盘总大小。<br />\r\ndisk_free_space() 函数返回目录中的可用空间<br />\r\ndirname() 函数返回路径中的目录部分。<br />\r\nclearstatcache() 函数拷贝文件。<br />\r\nclearstatcache() 函数清除文件状态缓存。<br />\r\nchown() 函数改变指定文件的所有者。<br />\r\nchmod() 函数改变文件模式。<br />\r\nchgrp() 函数改变文件所属的组。<br />\r\nbasename() 函数返回路径中的文件名部分。<br />\r\nset_exception_handler() handler() 函数<br />\r\n<br />\r\nPHP Error 和 Logging 函数<br />\r\nset_exception_handler() 函数设置用户自定义的异常处理函数。<br />\r\nset_error_handler() 函数设置用户自定义的错误处理函数。<br />\r\nrestore_exception_handler() 函数恢复之前的异常处理程序，该程序是由 set_exception_handler() 函数改变的。<br />\r\nrestore_error_handler() 函数恢复之前的错误处理程序，该程序是由 set_error_handler() 函数改变的。<br />\r\nerror_reporting() 设置 PHP 的报错级别并返回当前级别。<br />\r\nerror_log() 函数向服务器错误记录、文件或远程目标发送一个错误。<br />\r\nerror_get_last() 函数获取最后发生的错误。<br />\r\ndebug_print_backtrace() 函数输出 backtrace。<br />\r\ndebug_backtrace() cktrace() 函数<br />\r\n<br />\r\nPHP Error 和 Logging 函数<br />\r\nscandir() 函数返回一个数组，其中包含指定路径中的文件和目录。<br />\r\nrewinddir() 函数重置由 opendir() 打开的目录句柄。<br />\r\nreaddir() 函数返回由 opendir() 打开的目录句柄中的条目。<br />\r\nopendir() 函数打开一个目录句柄，可由 closedir()，readdir() 和 rewinddir() 使用。<br />\r\ngetcwd() 函数返回当前目录。<br />\r\nclosedir() 函数关闭由 opendir() 函数打开的目录句柄。<br />\r\ndir() 函数打开一个目录句柄，并返回一个对象。这个对象包含三个方法：read() , rewind() 以及 close()。<br />\r\nchroot() 函数把当前进程的根目录改变为指定的目录。<br />\r\nchdir() 函数把当前的目录改变为指定的目录。<br />\r\ntime() 函数返回当前时间的 Unix 时间戳。<br />\r\nstrtotime() 函数将任何英文文本的日期时间描述解析为 Unix 时间戳。<br />\r\nstrptime() 函数解析由 strftime() 生成的日期／时间。<br />\r\nstrftime() 函数根据区域设置格式化本地时间／日期。<br />\r\nmktime() 函数返回一个日期的 Unix 时间戳。<br />\r\nmicrotime() 函数返回当前 Unix 时间戳和微秒数。<br />\r\nlocaltime() 函数返回本地时间（一个数组）。<br />\r\nidate() 函数将本地时间/日期格式化为整数。<br />\r\ngmstrftime() 函数根据本地区域设置格式化 GMT/UTC 时间／日期。<br />\r\ngmmktime() 函数取得 GMT 日期的 UNIX 时间戳。<br />\r\ngmdate() 函数格式化 GMT/UTC 日期/时间。<br />\r\ngettimeofday() 函数返回一个包含当前时间信息的数组。<br />\r\ngetdate() 函数取得日期／时间信息。<br />\r\ndate() 函数格式化一个本地时间／日期。<br />\r\ndate_sunset() 函数返回指定的日期与地点的日落时间。<br />\r\ndate_sunrise() 函数返回指定的日期与地点的日出时间。<br />\r\ndate_default_timezone_set() 函数设置用在脚本中所有日期/时间函数的默认时区。<br />\r\ndate_default_timezone_get() 函数返回脚本中所有日期时间函数所使用的默认时区。<br />\r\ncheckdate() 函数验证一个格里高里日期。<br />\r\nUnixToJD() 函数把 Unix 时间戳转换为儒略日计数。<br />\r\nJulianToJD() 函数把儒略历转换为儒略日计数。<br />\r\nJewishToJD() 函数把犹太历法转换为儒略日计数。<br />\r\nJDToUnix() 函数把儒略日计数转换为 Unix 时间戳。<br />\r\nJDToGregorian() lian() 函数<br />\r\n<br />\r\nPHP Array 函数<br />\r\nJDToGregorian() wish() 函数<br />\r\n<br />\r\nPHP Array 函数<br />\r\nJDToGregorian() 函数把儒略日计数转换为格利高里历法。<br />\r\nJDToFrench() 函数把儒略日计数转换为法国共和国历法。<br />\r\nJDMonthName() 函数返回指定历法的月份字符串。<br />\r\nJDDayOfWeek() 函数返回日期在周几。<br />\r\nGregorianToJD() 函数将格利高里历法转换成为儒略日计数。<br />\r\nFrenchToJD() 函数将法国共和历法转换成为儒略日计数。<br />\r\neaster_days() 函数返回指定年份的复活节与 3 月 21 日之间的天数。<br />\r\neaster_date() 函数返回指定年份的复活节午夜的 Unix 时间戳。<br />\r\ncal_to_jd() 函数把指定的日期转换为儒略日计数。<br />\r\ncal_info() 函数返回一个数组，其中包含了关于给定历法的信息。<br />\r\ncal_from_jd() 函数把儒略日计数转换为指定历法的日期。<br />\r\ncal_days_in_month() 函数针对指定的年份和日历，返回一个月中的天数。<br />\r\nusort() 函数使用用户自定义的函数对数组排序。<br />\r\nuksort() 函数使用用户自定义的比较函数按照键名对数组排序，并保持索引关系。<br />\r\nuasort() 函数使用用户自定义的比较函数对数组排序，并保持索引关联（不为元素分配新的键）。<br />\r\nsort() 函数按升序对给定数组的值排序。<br />\r\nsizeof() 函数计算数组中的单元数目或对象中的属性个数。<br />\r\nshuffle() 函数把数组中的元素按随机顺序重新排列。<br />\r\nrsort() 函数对数组的元素按照键值进行逆向排序。与 arsort() 的功能基本相同。<br />\r\nreset() 函数把数组的内部指针指向第一个元素，并返回这个元素的值。<br />\r\nrange() 函数创建并返回一个包含指定范围的元素的数组。<br />\r\nprev() HP prev() 函数<br />\r\n<br />\r\nPHP Array 函数<br />\r\npos() 函数是 current() 函数 的别名。它可返回数组中当前元素的值。<br />\r\nnext() 函数把指向当前元素的指针移动到下一个元素的位置，并返回当前元素的值。<br />\r\nnatsort() 函数用自然顺序算法对给定数组中的元素排序。<br />\r\nnatcasesort() 函数用不区分大小写的自然顺序算法对给定数组中的元素排序。<br />\r\nlist() 函数用数组中的元素为一组变量赋值。<br />\r\nksort() 函数按照键名对数组排序，为数组值保留原来的键。<br />\r\nkrsort() 函数将数组按照键逆向排序，为数组值保留原来的键。<br />\r\nkey() 函数返回数组内部指针当前指向元素的键名。<br />\r\nin_array() 函数在数组中搜索给定的值。<br />\r\nextract() extract() 函数<br />\r\n<br />\r\nPHP Array 函数<br />\r\nend() 函数将数组内部指针指向最后一个元素，并返回该元素的值（如果成功）。<br />\r\neach() 函数生成一个由数组当前内部指针所指向的元素的键名和键值组成的数组，并把内部指针向前移动。<br />\r\ncurrent() 函数返回数组中的当前元素（单元）。<br />\r\ncount() 函数计算数组中的单元数目或对象中的属性个数。<br />\r\ncompact() 函数创建一个由参数所带变量组成的数组。如果参数中存在数组，该数组中变量的值也会被获取。<br />\r\nasort() 函数对数组进行排序并保持索引关系。主要用于对那些单元顺序很重要的结合数组进行排序。<br />\r\narsort() 函数对数组进行逆向排序并保持索引关系。主要用于对那些单元顺序很重要的结合数组进行排序。<br />\r\narray_walk_recursive() cursive() 函数<br />\r\n<br />\r\n<strong>PHP Array 函数</strong><br />\r\narray_walk() 函数对数组中的每个元素应用回调函数。如果成功则返回 TRUE，否则返回 FALSE。<br />\r\narray_values() 函数返回一个包含给定数组中所有键值的数组，但不保留键名。<br />\r\narray_unshift() 函数在数组开头插入一个或多个元素。<br />\r\narray_unique() 函数移除数组中的重复的值，并返回结果数组。<br />\r\narray_uintersect_assoc() 函数带索引检查计算数组的交集，用回调函数比较数据。<br />\r\narray_uintersect() 函数计算数组的交集，用回调函数比较数据。<br />\r\narray_udiff_uassoc() 函数返回 array1 数组中存在但其它数组中都不存在的部分。返回的数组中键名保持不变。<br />\r\narray_udiff_assoc() 函数返回 array1 中存在但其它数组中都不存在的部分。<br />\r\narray_udiff() 函数返回一个数组，该数组包括了所有在被比较数组中，但是不在任何其它参数数组中的值，键名保留不变。<br />\r\narray_sum() 函数返回数组中所有值的总和。<br />\r\narray_splice() 函数与 array_slice() 函数类似，选择数组中的一系列元素，但不返回，而是删除它们并用其它值代替。<br />\r\narray_slice() 函数在数组中根据条件取出一段值，并返回。<br />\r\narray_shift() 函数删除数组中的第一个元素，并返回被删除元素的值。<br />\r\narray_search() 函数与 in_array() 一样，在数组中查找一个键值。如果找到了该值，匹配元素的键名会被返回。如果没找到，则返回 false。<br />\r\narray_reverse() 函数将原数组中的元素顺序翻转，创建新的数组并返回。如果第二个参数指定为 true，则元素的键名保持不变，否则键名将丢失。<br />\r\narray_reduce() 函数用回调函数迭代地将数组简化为单一的值。如果指定第三个参数，则该参数将被当成是数组中的第一个值来处理，或者如果数组为空的话就作为最终返回值。<br />\r\narray_rand() 函数从数组中随机选出一个或多个元素，并返回。<br />\r\narray_push() 函数向第一个参数的数组尾部添加一个或多个元素（入栈），然后返回新数组的长度。<br />\r\narray_product() 函数计算并返回数组中所有值的乘积。<br />\r\narray_pop() 函数删除数组中的最后一个元素。<br />\r\narray_pad() 函数向一个数组插入带有指定值的指定数量的元素。<br />\r\narray_multisort() 函数对多个数组或多维数组进行排序。<br />\r\narray_merge_recursive() 函数与 array_merge() 函数 一样，将一个或多个数组的元素的合并起来，一个数组中的值附加在前一个数组的后面。并返回作为结果的数组。<br />\r\narray_merge() 函数把两个或多个数组合并为一个数组。<br />\r\narray_map() 函数返回用户自定义函数作用后的数组。回调函数接受的参数数目应该和传递给 array_map() 函数的数组数目一致。<br />\r\narray_keys() 函数返回包含数组中所有键名的一个新数组。<br />\r\narray_key_exists() 函数判断某个数组中是否存在指定的 key，如果该 key 存在，则返回 true，否则返回 false。<br />\r\narray_intersect_ukey() 函数用回调函数比较键名来计算数组的交集。<br />\r\narray_intersect_uassoc() 函数使用用户自定义的回调函数计算数组的交集，用回调函数比较索引。<br />\r\narray_intersect_key() 函数使用键名比较计算数组的交集。<br />\r\narray_intersect_assoc() 函数返回两个或多个数组的交集数组。<br />\r\narray_intersect() 函数返回两个或多个数组的交集数组。<br />\r\narray_flip() 函数返回一个反转后的数组，如果同一值出现了多次，则最后一个键名将作为它的值，所有其他的键名都将丢失。<br />\r\narray_filter() 函数用回调函数过滤数组中的元素，如果自定义过滤函数返回 true，则被操作的数组的当前值就会被包含在返回的结果数组中， 并将结果组成一个新的数组。如果原数组是一个关联数组，键名保持不变。<br />\r\narray_fill() 函数用给定的值填充数组，返回的数组有 number 个元素，值为 value。返回的数组使用数字索引，从 start 位置开始并递增。如果 number 为 0 或小于 0，就会出错。<br />\r\narray_diff_ukey() 返回一个数组，该数组包括了所有出现在 array1 中但是未出现在任何其它参数数组中的键名的值。注意关联关系保留不变。与 array_diff() 不同的是，比较是根据键名而不是值来进行的。<br />\r\narray_diff_uassoc() 函数使用用户自定义的回调函数 (callback) 做索引检查来计算两个或多个数组的差集。返回一个数组，该数组包括了在 array1 中但是不在任何其他参数数组中的值。<br />\r\narray_diff_key() 函数返回一个数组，该数组包括了所有在被比较的数组中，但是不在任何其他参数数组中的键。<br />\r\narray_diff_assoc() 函数返回两个数组的差集数组。该数组包括了所有在被比较的数组中，但是不在任何其他参数数组中的键和值。<br />\r\narray_diff() 函数返回两个数组的差集数组。该数组包括了所有在被比较的数组中，但是不在任何其他参数数组中的键值。<br />\r\narray_count_values() 函数用于统计数组中所有值出现的次数。<br />\r\narray_combine() 函数通过合并两个数组来创建一个新数组，其中的一个数组是键名，另一个数组的值为键值。<br />\r\narray_chunk() 函数把一个数组分割为新的数组块。<br />\r\narray_change_key_case() 函数将数组的所有的 KEY 都转换为大写或小写。<br />\r\narray() 创建数组，带有键和值。如果在规定数组时省略了键，则生成一个整数键，这个 key 从 0 开始，然后以 1 进行递增。<br />', '1433408166', '1433408166', '747', '1', '未知', '2', 'PHP常用函数大全', '1', '0');
INSERT INTO `sxs_article` VALUES ('15', 'admin', 'h,c', '', '2', '远程调用,分布式', ' 在分布式服务框架中，一个最基础的问题就是远程服务是怎么通讯的，在Java领域中有很多可实现远程通讯的技术，例如：RMI、MINA、ESB、 Burlap、Hessian、SOAP、EJB和JMS 等，这些名词之间到底是些什么关系呢，它们背后到底是基于什么原理实现的呢，了解这些是实现分布式服务框架的基础知识，而如果在性能上有高的要求的话，那 深入了解这些技术背后的机制就是必须的了，在这篇blog中', '<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	在分布式服务框架中，一个最基础的问题就是远程服务是怎么通讯的，在Java领域中有很多可实现远程通讯的技术，例如：RMI、MINA、ESB、 Burlap、Hessian、SOAP、EJB和JMS 等，这些名词之间到底是些什么关系呢，它们背后到底是基于什么原理实现的呢，了解这些是实现分布式服务框架的基础知识，而如果在性能上有高的要求的话，那 深入了解这些技术背后的机制就是必须的了，在这篇blog中我们将来一探究竟，抛砖引玉，欢迎大家提供更多的实现远程通讯的技术和原理的介绍。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<strong>基本原理</strong>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	要实现网络机器间的通讯，首先得来看看计算机系统网络通信的基本原理，在底层层面去看，网络通信需要做的就是将流从一台计算机传输到另外一台计算 机，基于传输协议和网络IO来实现，其中传输协议有 tcp、udp等等，tcp、udp都是在基于Socket概念上为某类应用场景而扩展出的传输协议，网络IO，主要有bio、 nio、aio三种方式，所有的分布式应用通讯都基于这个原理而实现，只是为了应用的易用，各种语言通常都会提供一些更为贴近应用易用的应用层协议。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<strong>应用级协议</strong>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	远程服务通讯，需要达到的目标是在一台计算机发起请求，另外一台机器在接收到请求后进行相应的处理并将结果返回给请求端，这其中又会有诸如one way request、同步请求、异步请求等等请求方式，按照网络通信原理，需要实现这个需要做的就是将请求转换成流，通过传输协议传输至远端，远端计算机在接 收到请求的流后进行处理，处理完毕后将结果转化为流，并通过传输协议返回给调用端。<br />\r\n原理是这样的，但为了应用的方便，业界推出了很多基于此原理之上的应用级的协议，使得大家可以不用去直接操作这么底层的东西，通常应用级的远程通信协议会 提供：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 为了避免直接做流操作这么麻烦，提供一种更加易用或贴合语言的标准传输格式；<br />\r\n2. 网络通信机制的实现，就是替你完成了将传输格式转化为流，通过某种传输协议传输至远端计算机，远端计算机在接收到流后转化为传输格式，并进行存储或以某种 方式通知远端计算机。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	所以在学习应用级的远程通信协议时，我们可以带着这几个问题进行学习：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 传输的标准格式是什么？<br />\r\n2. 怎么样将请求转化为传输的流？<br />\r\n3. 怎么接收和处理流？<br />\r\n4. 传输协议是？\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	不过应用级的远程通信协议并不会在传输协议上做什么多大的改进，主要是在流操作方面，让应用层生成流和处理流的这个过程更加的贴合所使用的语言或标 准，至于传输协议则通常都是可选的，在java领域中知名的有：RMI、XML-RPC、Binary-RPC、SOAP、CORBA、JMS，来具体的 看看这些远程通信的应用级协议：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<strong>RMI</strong>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	RMI是个典型的为java定制的远程通信协议，我们都知道，在single vm中，我们可以通过直接调用java object instance来实现通信，那么在远程通信时，如果也能按照这种方式当然是最好了，这种远程通信的机制成为RPC（Remote Procedure Call），RMI正是朝着这个目标而诞生的。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	来看下基于RMI的一次完整的远程通信过程的原理：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 客户端发起请求，请求转交至RMI客户端的stub类；<br />\r\n2. stub类将请求的接口、方法、参数等信息进行序列化；<br />\r\n3. 基于socket将序列化后的流传输至服务器端；<br />\r\n4. 服务器端接收到流后转发至相应的skelton类；<br />\r\n5. skelton类将请求的信息反序列化后调用实际的处理类；<br />\r\n6. 处理类处理完毕后将结果返回给skelton类；<br />\r\n7. Skelton类将结果序列化，通过socket将流传送给客户端的stub；<br />\r\n8. stub在接收到流后反序列化，将反序列化后的Java Object返回给调用者。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	根据原理来回答下之前学习应用级协议带着的几个问题：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 传输的标准格式是什么？<br />\r\n是Java ObjectStream。<br />\r\n2. 怎么样将请求转化为传输的流？<br />\r\n基于Java串行化机制将请求的java object信息转化为流。<br />\r\n3. 怎么接收和处理流？<br />\r\n根据采用的协议启动相应的监听端口，当有流进入后基于Java串行化机制将流进行反序列化，并根据RMI协议获取到相应的处理对象信息，进行调用并处理， 处理完毕后的结果同样基于java串行化机制进行返回。<br />\r\n4. 传输协议是？<br />\r\nSocket。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<strong>XML-RPC</strong>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	XML-RPC也是一种和RMI类似的远程调用的协议，它和RMI的不同之处在于它以标准的xml格式来定义请求的信息(请求的对象、方法、参数 等)，这样的好处是什么呢，就是在跨语言通讯的时候也可以使用。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	来看下XML-RPC协议的一次远程通信过程：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 客户端发起请求，按照XML-RPC协议将请求信息进行填充；<br />\r\n2. 填充完毕后将xml转化为流，通过传输协议进行传输；<br />\r\n3. 接收到在接收到流后转换为xml，按照XML-RPC协议获取请求的信息并进行处理；<br />\r\n4. 处理完毕后将结果按照XML-RPC协议写入xml中并返回。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	同样来回答问题：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 传输的标准格式是？<br />\r\n标准格式的XML。<br />\r\n2. 怎么样将请求转化为传输的流？<br />\r\n将XML转化为流。<br />\r\n3. 怎么接收和处理流？<br />\r\n通过监听的端口获取到请求的流，转化为XML，并根据协议获取请求的信息，进行处理并将结果写入XML中返回。<br />\r\n4. 传输协议是？<br />\r\nHttp。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<strong>Binary-RPC</strong>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	Binary-RPC看名字就知道和XML-RPC是差不多的了，不同之处仅在于传输的标准格式由XML转为了二进制的格式。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	同样来回答问题：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 传输的标准格式是？<br />\r\n标准格式的二进制文件。<br />\r\n2. 怎么样将请求转化为传输的流？<br />\r\n将二进制格式文件转化为流。<br />\r\n3. 怎么接收和处理流？<br />\r\n通过监听的端口获取到请求的流，转化为二进制文件，根据协议获取请求的信息，进行处理并将结果写入XML中返回。<br />\r\n4. 传输协议是？<br />\r\nHttp。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<strong>SOAP</strong>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	SOAP原意为Simple Object Access Protocol，是一个用于分布式环境的、轻量级的、基于XML进行信息交换的通信协议，可以认为SOAP是XML RPC的高级版，两者的原理完全相同，都是http+XML，不同的仅在于两者定义的XML规范不同，SOAP也是Webservice采用的服务调用协 议标准，因此在此就不多加阐述了。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	CORBA\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	Common Object Request Broker Architecture（公用对象请求代理[调度]程序体系结构），是一组用来定义“分布式对象系统”的标准，由OMG(Object Menagement Group)作为发起和标准制定单位。CORBA的目的是定义一套协议，符合这个协议的对象可以互相交互，不论它们是用什么样的语言写的，不论它们运行于 什么样的机器和操作系统。<br />\r\nCORBA在我看来是个类似于SOA的体系架构，涵盖可选的远程通信协议，但其本身不能列入通信协议这里来讲，而且CORBA基本淘汰，再加上对 CORBA也不怎么懂，在此就不进行阐述了。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	<strong>JMS</strong>\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	JMS呢，是实现java领域远程通信的一种手段和方法，基于JMS实现远程通信时和RPC是不同的，虽然可以做到RPC的效果，但因为不是从协议 级别定义的，因此我们不认为JMS是个RPC协议，但它确实是个远程通信协议，在其他的语言体系中也存在着类似JMS的东西，可以统一的将这类机制称为消 息机制，而消息机制呢，通常是高并发、分布式领域推荐的一种通信机制，这里的主要一个问题是容错（详细见ErLang论文）。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	来看JMS中的一次远程通信的过程：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 客户端将请求转化为符合JMS规定的Message；<br />\r\n2. 通过JMS API将Message放入JMS Queue或Topic中；<br />\r\n3. 如为JMS Queue，则发送中相应的目标Queue中，如为Topic，则发送给订阅了此Topic的JMS Queue。<br />\r\n4. 处理端则通过轮训JMS Queue，来获取消息，接收到消息后根据JMS协议来解析Message并处理。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	回答问题：\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	1. 传输的标准格式是？<br />\r\nJMS规定的Message。<br />\r\n2. 怎么样将请求转化为传输的流？<br />\r\n将参数信息放入Message中即可。<br />\r\n3. 怎么接收和处理流？<br />\r\n轮训JMS Queue来接收Message，接收到后进行处理，处理完毕后仍然是以Message的方式放入Queue中发送或Multicast。<br />\r\n4. 传输协议是？<br />\r\n不限。\r\n</p>\r\n<p style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n	基于JMS也是常用的实现远程异步调用的方法之一。\r\n</p>', '1433852510', '1433852510', '697', '1', '未知', '2', '远程调用的几种方式', '1', '0');
INSERT INTO `sxs_article` VALUES ('16', 'admin', 'h,c', '', '4', 'qq,discuz', 'qq登入时报Unknown column \'conuintoken\' in \'field list\'这个错误，未知的字段名', '<p>\r\n	qq登入时报Unknown column \'conuintoken\' in \'field list\'这个错误，具体信息如下\r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150612/20150612200351_38606.png\" width=\"590\" height=\"400\" alt=\"\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	翻译下错误信息就知道是未知的字段名！其实问题很简单就是表中缺少了某个字段，在对应的表中添加字段就ok了，修改相关表中字段的脚本如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	ALTER TABLE &nbsp;`前缀_common_member_connect` ADD COLUMN conuintoken char(32) NOT NULL DEFAULT \'\';\r\n</p>\r\n<p>\r\n	<br />\r\nALTER TABLE &nbsp;`前缀_common_connect_guest` ADD COLUMN conuintoken char(32) NOT NULL DEFAULT \'\';\r\n</p>\r\n<p>\r\n	<br />\r\n</p>', '1434109853', '1434110781', '800', '1', '未知', '2', 'discuz开启qq登陆报错', '1', '0');
INSERT INTO `sxs_article` VALUES ('17', 'admin', 'h,c', '', '4', 'down,php', ' 近期搞了一个安卓的客户端，想把它挂到站点上提供下载，整理实现思路如下： (1).浏览器发送一个请求，请求访问服务器中的某个网页（如：down.php） (2).运行该文件的时候，必然要把将要被下载的文件读入内存当中,通过fopen()函数完成该动作 (3).从内存当中读取文件，通过fread()函数完成该动作 需要注意的是，如果文件较大，文件应该是被分成多段返回给客户端的，并不是等文件在服', '<p>\r\n	近期搞了一个安卓的客户端，想把它挂到站点上提供下载，整理实现思路如下：\r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\"><br />\r\n</span> \r\n</p>\r\n<p>\r\n	<span style=\"line-height:1.5;\">(1).浏览器发送一个请求，请求访问服务器中的某个网页（如：down.php）</span> \r\n</p>\r\n<p>\r\n	<br />\r\n&nbsp; &nbsp; &nbsp; (2).运行该文件的时候，必然要把将要被下载的文件读入内存当中,通过fopen()函数完成该动作&nbsp;\r\n</p>\r\n<p>\r\n	<br />\r\n&nbsp; &nbsp; &nbsp; (3).从内存当中读取文件，通过fread()函数完成该动作&nbsp;\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	(4).把读到的内容输出到客户端\r\n</p>\r\n<p>\r\n	<br />\r\n需要注意的是，如果文件较大，文件应该是被分成多段返回给客户端的，并不是等文件在服务端全部读取完毕后，一次性返回给客户端，因为这样子会增加服务器的负荷。 <br />\r\n所以我们需要在php代码中设置一次读取的字节数,比如我在下面的代码中通过$buffer=1024设置一次读取的字节数，每读取一次，就输出数据（即返回给浏览器） &nbsp;\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	具体实现如下，我把代码贴出来，代码都做了详细的注释，保证能看明白\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-php\">public function index()\r\n    {\r\n        $file_name=\"Kl博客.apk\"; \r\n        //用以解决中文不能显示出来的问题 \r\n        $file_name=iconv(\"utf-8\",\"gb2312\",$file_name); \r\n        $file_sub_path=$_SERVER[\'DOCUMENT_ROOT\']./admin.php?s=.\"/Uploads/DownFile/\"; \r\n        $file_path=$file_sub_path.$file_name; //完整的文件路径\r\n        //首先要判断给定的文件存在与否 \r\n        if(!file_exists($file_path)){ \r\n          echo \"来晚了，文件不存在\"; \r\n        } \r\n         else \r\n         {\r\n            $fp=fopen($file_path,\"r\"); //以只读的方式打开文件\r\n            $file_size=filesize($file_path);//得到文件大小\r\n            //下载文件需要用到的头 \r\n            Header(\"Content-type: application/octet-stream\"); //告诉浏览器这是一个文件流格式的文件\r\n            Header(\"Accept-Ranges: bytes\"); //告诉客户端浏览器返回的文件大小是按照字节进行计算的\r\n            Header(\"Content-length:\".$file_size); //告诉浏览器返回的文件大小 \r\n            Header(\"Content-Disposition: attachment; filename=\".$file_name); //告诉浏览器文件的名称\r\n            $buffer=1024; //设置缓冲区大小\r\n            $file_count=0; //读取到的文件大小变量\r\n            //向浏览器返回数据 \r\n            while(!feof($fp) &amp;&amp; $file_count&lt;$file_size){ \r\n            $file_con=fread($fp,$buffer); //读到一个缓冲区文件的大小\r\n            $file_count+=$buffer; //累积读到的文件大小\r\n            echo $file_con; //直接向浏览器输出\r\n            } \r\n            //echo fread($fp, $file_size);//小文件可以直接一次性读完\r\n            fclose($fp); //可以把缓冲区内最后剩余的数据输出到磁盘文件中，并释放文件指针和有关的缓冲区\r\n         }\r\n    }</pre>\r\n<p>\r\n	<br />\r\n</p>', '1434251368', '1434251635', '884', '1', '未知', '2', 'php实现文件下载', '1', '0');
INSERT INTO `sxs_article` VALUES ('18', 'admin', 'h,c', '', '2', 'file上传', '文件上传下载', '<p>\r\n	首先详细讲一下文件上传部分\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-java\"> &lt;form id=\"form\" action=\"Upload!uploads.action\" method=\"post\" enctype=\"multipart/form-data\"&gt;  \r\n       &lt;input type=\"file\" name=\"file\" /&gt; \r\n       &lt;input type=\"button\" onclick=\"tijiao()\" value=\"提交\"&gt;\r\n       &lt;/form&gt;  </pre>\r\n</p>\r\n<p>\r\n	以上是一个简单的文件上传表单，需要注意的是enctype=\"multipart/form-data\"这个属性必须加上，表明以二进制的数据格式来传输数据\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	上传的Action中可以这么写\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">           private File file;//用此属性接收页面表单的file值\r\n	   private String fileFileName;//此处的文件名必须是表单file name+FileName\r\n	   private String types;    \r\n	   private IfileService service;\r\n	   private String commonTypes;\r\n		                @Override\r\n  		  	        public String execute() throws Exception {\r\n				String path=ServletActionContext.getRequest().getRealPath(\"/upload\");\r\n				 File fi= new File(path);\r\n				if(!fi.exists())\r\n					   fi.mkdir();\r\n				FileOutputStream os=new FileOutputStream(path+\"/\"+fileFileName);\r\n				byte buffer[]=FileToByte.getBytesFromFile(file);\r\n			      os.write(buffer);\r\n			      os.close();\r\n			      \r\n				return \"success\";\r\n			}</pre>\r\n<p>\r\n	&nbsp;&nbsp; 以上就实现文件上传了，文件下下载也很简单，贴代码吧\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\"> public InputStream getInputStream() {\r\n    	InputStream stream=ServletActionContext.getServletContext().getResourceAsStream(\r\n			    \"/upload/\" + fileName);\r\n       return	stream;\r\n	}\r\n@Override\r\n	public String execute() throws Exception {\r\n		if(getInputStream()==null)\r\n		{\r\n			return INPUT;\r\n		}else\r\n		{\r\n			 return updateFileDownLoadCount();\r\n		}\r\n	}</pre>\r\n<p>\r\n	然后注意下Struts.xml中result的type类型\r\n</p>\r\n<p>\r\n	&nbsp;\r\n<pre class=\"prettyprint lang-java\">&lt;action name=\"DownloadFileAction\" class=\"DownloadFileAction\"&gt;\r\n		        &lt;result type=\"stream\"&gt;\r\n		             &lt;param name=\"bufferSize\"&gt;2048&lt;/param&gt;&lt;!-- 缓冲区大小 --&gt;\r\n		             &lt;param name=\"contentType\"&gt;application/octet-stream;charset=ISO8859-1&lt;/param&gt;&lt;!--告诉浏览器内容是文件流--&gt;\r\n		             &lt;param name=\"contentDisposition\"&gt;attachment;fileName=\"${fileName}\"&lt;/param&gt; &lt;!--获取下载文件名  --&gt; \r\n	           &lt;/result&gt;\r\n	       &lt;/action&gt;</pre>\r\n</p>', '1434788738', '1434789694', '897', '1', '未知', '2', 'java Struts2实现文件上传下载', '1', '0');
INSERT INTO `sxs_article` VALUES ('19', 'admin', 'h,c', '', '2', 'springMVC', 'SpringMVC上传下载文件', '<p>\r\n	表单部分代码我就不贴 了，只要注意下表单的enctype=\"multipart/form-data\"这个属性必须加上，表明以二进制的数据格式来传输数据\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	下面贴出springmvc的Controller代码\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-js\">package com.sxstroller;\r\n\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.List;\r\nimport java.util.UUID;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport org.apache.commons.io.FileUtils;\r\nimport org.springframework.http.HttpHeaders;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.MediaType;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.ui.ModelMap;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.multipart.MultipartFile;\r\nimport com.sxsUpload;\r\nimport com.sxsvice.IuploadService;\r\n\r\n@Controller\r\npublic class UploadController {\r\n	\r\n   private IuploadService uploadService;\r\n   \r\n   @RequestMapping(value={\"/\",\"/index.htm\"})\r\n   public String index()\r\n   {\r\n	   return \"index\";\r\n   }\r\n   /**\r\n    * 视频播放页面\r\n    * @param id\r\n    * @param model\r\n    * @return\r\n    */\r\n   @RequestMapping(value=\"/viedo.htm\")\r\n   public String viedo( int id,Model model)\r\n   {\r\n	   model.addAttribute(uploadService.getUpload(id));\r\n	   return \"viedo\";\r\n   }\r\n   /**\r\n    * 文件列表页面\r\n    * @param model\r\n    * @return\r\n    */\r\n   @RequestMapping(value=\"/showFiel.htm\")\r\n   public String showFile(Model model)\r\n   {\r\n	   List&lt;Upload&gt; list= uploadService.getAllUpload();\r\n	   model.addAttribute(\"list\", list);\r\n	   return \"showFile\";\r\n   }\r\n   /**\r\n    * 文件上传\r\n    * @param file\r\n    * @param request\r\n    * @param model\r\n    * @return\r\n    */\r\n   @RequestMapping(value =\"/uploads.htm\")\r\n   public String upload(@RequestParam(value = \"file\", required = false) MultipartFile file, HttpServletRequest request, ModelMap model) {  \r\n       \r\n	   String path = request.getSession().getServletContext().getRealPath(\"upload\");  \r\n      //实际上传文件名\r\n	   String fileName = file.getOriginalFilename();\r\n       //保存至服务器得文件名\r\n       String videoName=UUID.randomUUID().toString()+fileName.substring(fileName.lastIndexOf(\".\"), fileName.length());//避免覆盖同名文件\r\n       \r\n        File targetFile = new File(path, videoName);  \r\n       if(!targetFile.exists()){  \r\n           targetFile.mkdirs();  \r\n       }  \r\n       //保存  \r\n       try {  \r\n           file.transferTo(targetFile);  \r\n       } catch (Exception e) {  \r\n           e.printStackTrace();  \r\n       }  \r\n       Upload upload=new Upload();\r\n       upload.setVideoName(videoName);\r\n       upload.setFileName(fileName);\r\n       uploadService.saveUpload(upload);\r\n       return \"index\";  \r\n   }\r\n   /**\r\n    * 文件下载\r\n    * @param request\r\n    * @param fileName\r\n    * @return\r\n    * @throws IOException\r\n    */\r\n   @RequestMapping(\"download.htm\")  \r\n   public ResponseEntity&lt;byte[]&gt; download(HttpServletRequest request,String videoName,String fileName) throws IOException {  \r\n	   \r\n	   String path = request.getSession().getServletContext().getRealPath(\"upload\");\r\n	 \r\n	   String filepath=path+\"\\\\\"+ videoName;\r\n	   \r\n	   File file=new File(filepath);\r\n      \r\n	   HttpHeaders headers = new HttpHeaders();//封装http头部信息  \r\n       \r\n	   headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);  \r\n       headers.setContentDispositionFormData(\"attachment\",fileName);  //告诉浏览器将要下载的文件名\r\n       \r\n       return new ResponseEntity&lt;byte[]&gt;(FileUtils.readFileToByteArray(file),  \r\n                                         headers, HttpStatus.CREATED);  \r\n   }  \r\n	public void setUploadService(IuploadService uploadService) {\r\n		this.uploadService = uploadService;\r\n	}\r\n}\r\n</pre>\r\n然后注意下spring的几个配置\r\n</p>\r\n<p>\r\n	&nbsp;\r\n<pre class=\"prettyprint lang-java\">  &lt;!-- 支持上传文件 --&gt;  \r\n   &lt;bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\"&gt;\r\n       &lt;property name=\"defaultEncoding\" value=\"UTF-8\"/&gt;    \r\n         &lt;!-- 指定所上传文件的总大小不能超过200Mb。 --&gt;   \r\n       &lt;property name=\"maxUploadSize\" value=\"209715200\"/&gt;  \r\n        &lt;!-- resolveLazily属性启用是为了推迟文件解析，以便在UploadController 中捕获文件大小异常  --&gt;   \r\n        &lt;property name=\"resolveLazily\" value=\"true\"/&gt;  \r\n   &lt;/bean&gt;  \r\n   &lt;!--文件上传异常处理  --&gt;\r\n   &lt;bean id=\"exceptionResolver\"  class=\"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver\"&gt;\r\n      &lt;property name=\"exceptionMappings\"&gt;  \r\n		   &lt;props&gt;  \r\n		        &lt;prop key=\"org.springframework.web.multipart.MaxUploadSizeExceededException\"&gt;error&lt;/prop&gt;  &lt;!-- 此处的key为异常类的完全限定名 --&gt;\r\n		   &lt;/props&gt;   \r\n        &lt;/property&gt; \r\n   &lt;/bean&gt;</pre>\r\n&nbsp;&nbsp;&nbsp; 到此处也基本差不多了，还需要注意的就是，如果你需要异步上传文件，请使用jquery form插件，很实用。\r\n</p>\r\n<p>\r\n<pre class=\"prettyprint lang-java\">&lt;script type=\"text/javascript\" src=\"Scripts/jquery-1.4.1.js\"&gt;&lt;/script&gt;\r\n	&lt;script type=\"text/javascript\" src=\"Scripts/Plugins/jquery.form.js\"&gt;&lt;/script&gt;\r\n	\r\n	&lt;script type=\"text/javascript\"&gt;\r\n	   function tijiao()\r\n	   {\r\n		  	var ajax_option={\r\n		  			success:function(data){\r\n                         alert(\"上传成功\");\r\n		  			}};\r\n		  	$(\"#form\").ajaxSubmit(ajax_option);\r\n	   }\r\n	&lt;/script&gt;</pre>\r\n</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;\r\n</p>', '1434790612', '1434790612', '2266', '1', '未知', '2', 'SpringMvc实现文件上传与下载', '1', '0');
INSERT INTO `sxs_article` VALUES ('20', 'admin', 'h,c', '', '10', '', 'Spring task定时任务，基于注解或配置文件', '<p>\r\n	首先基于配置文件的\r\n</p>\r\n<p>\r\n	&nbsp;&nbsp;\r\n</p>\r\n<pre class=\"prettyprint lang-java\">package com.sxsk;\r\n\r\nimport org.springframework.scheduling.annotation.Scheduled;\r\n\r\n\r\npublic class SpringTask {\r\n	\r\n	public void task() {\r\n        System.out.println(\"Test\");\r\n    }\r\n	\r\n}</pre>\r\n现有如上类方法，我需要他在指定的时间运行（每隔一分钟），那么我的配置文件需要这么配置\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-java\">    &lt;bean id=\"springTask\" class=\"com.sxsk.SpringTask\"/&gt;\r\n          \r\n               &lt;task:scheduled-tasks&gt;\r\n             &lt;task:scheduled ref=\"springTask\" method=\"task\" cron=\"0 * * * * ?\" /&gt;\r\n              &lt;/task:scheduled-tasks&gt;</pre>\r\n当然，配置之前我们需要加上task的命名空间\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	&nbsp;&nbsp;\r\n</p>\r\n<pre class=\"prettyprint lang-java\">	xmlns=\"http://www.springframework.org/schema/beans\"\r\n	xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n	xmlns:p=\"http://www.springframework.org/schema/p\"\r\n	xmlns:task=\"http://www.springframework.org/schema/task\"\r\n	xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\r\n	 http://www.springframework.org/schema/task \r\n     http://www.springframework.org/schema/task/spring-task-3.0.xsd\"</pre>\r\n以上所有是基于配置文件配置的，现在说下不想配置，基于注解的，在spring中开启注解扫描\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	&nbsp;&nbsp;\r\n</p>\r\n<pre class=\"prettyprint lang-java\">  &lt;context:component-scan base-package=\"com.sxsgt;\r\n   &lt;task:annotation-driven /&gt;</pre>\r\n然后方法名上加上这样的注解\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<pre class=\"prettyprint lang-java\">@Scheduled(cron=\"0 * * * * ?\")\r\n	public void anfef()\r\n	{\r\n		System.out.println(\"注解的\");\r\n	}</pre>\r\n<p>\r\n	就是这么简单，scheduled是规定方法何时运行的规则，下面贴出他的配置格式\r\n</p>\r\n<p>\r\n	&nbsp; 格式: [秒] [分] [小时] [日] [月] [周] [年]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;序号 说明 是否必填 允许填写的值 允许的通配符<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; 1&nbsp;&nbsp; 秒&nbsp;&nbsp;&nbsp; 是&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0-59 ,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - * /<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;2&nbsp;&nbsp;&nbsp; 分&nbsp;&nbsp;&nbsp; 是&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0-59 ,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - * /<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;3&nbsp;&nbsp;&nbsp; 小时&nbsp; 是&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0-23 ,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - * /<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;4&nbsp;&nbsp;&nbsp; 日&nbsp;&nbsp;&nbsp; 是&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1-31 ,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - * ? / L W<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;5&nbsp;&nbsp;&nbsp; 月&nbsp;&nbsp;&nbsp; 是&nbsp;&nbsp;&nbsp; 1-12 or JAN-DEC , - * /<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;6&nbsp;&nbsp;&nbsp; 周&nbsp;&nbsp;&nbsp;&nbsp; 是&nbsp;&nbsp;&nbsp;&nbsp; 1-7 or SUN-SAT , - * ? / L #<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;7&nbsp;&nbsp;&nbsp; 年&nbsp;&nbsp;&nbsp;&nbsp; 否&nbsp;&nbsp;&nbsp;&nbsp; empty 或 1970-2099 , - * /<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; <br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;通配符说明:<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* 表示所有值. 例如:在分的字段上设置 \"*\",表示每一分钟都会触发。<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;? 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的10号触发一个操作，但不关心是周几，所以需要周位置的那个字段设置为\"?\" 具体设置为 0 0 0 10 * ?<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- 表示区间。例如在小时上设置 \"10-12\",表示 10,11,12点都会触发。<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;, 表示指定多个值，例如在周字段上设置 \"MON,WED,FRI\" 表示周一，周三和周五触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/ 用于递增触发。如在秒上面设置\"5/15\" 表示从5秒开始，每增15秒触发(5,20,35,50)。 在月字段上设置\'1/3\'所示每月1号开始，每隔三天触发一次。<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会依据是否是润年[leap]), 在周字段上表示星期六，相当于\"7\"或\"SAT\"。如果在\"L\"前加上数字，则表示该数据的最后一个。例如在周字段上设置\"6L\"这样的格式,则表示“本 月最后一个星期五\"<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;W 表示离指定日期的最近那个工作日(周一至周五). 例如在日字段上设置\"15W\"，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 如果15号是周未，则找最近的下周一(16号)触发.如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 \"1W\",它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，\"W\"前只能设置具体的数字,不允许区间\"-\").<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;小提示<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\'L\'和 \'W\'可以一组合使用。如果在日字段上设置\"LW\",则表示在本月的最后一个工作日触发(一般指发工资 )<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;# 序号(表示每月的第几个周几)，例如在周字段上设置\"6#3\"表示在每月的第三个周六.注意如果指定\"#5\",正好第五周没有周六，则不会触发该配置(用 在母亲节和父亲节再合适不过了)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;小提示<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;周字段的设置，若使用英文字母是不区分大小写的 MON 与mon相同.<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; <br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;常用示例:<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 0 12 * * ? 每天12点触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 ? * * 每天10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 * * ? 每天10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 * * ? * 每天10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 * * ? 2005 2005年每天10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 * 14 * * ? 每天下午的 2点到2点59分每分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 0/5 14 * * ? 每天下午的 2点到2点59分(整点开始，每隔5分触发)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 0/5 14,18 * * ? 每天下午的 2点到2点59分(整点开始，每隔5分触发) 每天下午的 18点到18点59分(整点开始，每隔5分触发)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 0-5 14 * * ? 每天下午的 2点到2点05分每分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 10,44 14 ? 3 WED 3月分每周三下午的 2点10分和2点44分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 ? * MON-FRI 从周一到周五每天上午的10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 15 * ? 每月15号上午10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 L * ? 每月最后一天的10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 ? * 6L 每月最后一周的星期五的10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 ? * 6L 2002-2005 从2002年到2005年每月最后一周的星期五的10点15分触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 15 10 ? * 6#3 每月的第三周的星期五开始触发<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 0 12 1/5 * ? 每月的第一个中午开始每隔5天触发一次<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;0 11 11 11 11 ? 每年的11月11号 11点11分触发<br />\r\n<br />\r\n<br />\r\n<span id=\"__kindeditor_bookmark_start_19__\"></span>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>', '1434792082', '1434792082', '1095', '1', '未知', '2', 'Spring task定时任务', '1', '0');
INSERT INTO `sxs_article` VALUES ('25', 'admin', 'h', 'http://pic.58pic.com/58pic/14/51/76/13U58PICu5G_1024.png', '5', 'mysql', 'MySQL凭借着出色的性能、低廉的成本、丰富的资源，已经成为绝大多数互联网公司的首选关系型数据库。虽然性能出色，但所谓“好马配好鞍”，如何 能够更好的使用它，已经成为开发工程师的必修课', '<p>\r\n	这是一篇美团技术团队总结的关于MySQL索引原理及慢查询优化的文章，还是非常有参考价值的，文章虽长，但是写的很清楚，值得学习\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	MySQL凭借着出色的性能、低廉的成本、丰富的资源，已经成为绝大多数互联网公司的首选关系型数据库。虽然性能出色，但所谓“好马配好鞍”，如何\r\n能够更好的使用它，已经成为开发工程师的必修课，我们经常会从职位描述上看到诸如“精通MySQL”、“SQL语句优化”、“了解数据库原理”等要求。我\r\n们知道一般的应用系统，读写比例在10:1左右，而且插入操作和一般的更新操作很少出现性能问题，遇到最多的，也是最容易出问题的，还是一些复杂的查询操\r\n 作，所以查询语句的优化显然是重中之重。<br />\r\n本人从13年7月份起，一直在美团核心业务系统部做慢查询的优化工作，共计十余个系统，累计解决和积累了上百个慢查询案例。随着业务的复杂性提升，遇到的问题千奇百怪，五花八门，匪夷所思。本文旨在以开发工程师的角度来解释数据库索引的原理和如何优化慢查询。\r\n</p>\r\n<h1 id=\"-\">\r\n	一个慢查询引发的思考\r\n</h1>\r\n<div id=\"crayon-55abab23757c9928752199\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n	<div class=\"crayon-main\">\r\n		<table class=\"crayon-table\">\r\n			<tbody>\r\n				<tr class=\"crayon-row\">\r\n					<td class=\"crayon-nums \">\r\n						<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-num\">\r\n								1\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								2\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								3\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								4\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								5\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								6\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								7\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								8\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								9\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td class=\"crayon-code\">\r\n						<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757c9928752199-1\">\r\n								<span class=\"crayon-i\">select</span>&nbsp;&nbsp;&nbsp;<span class=\"crayon-e\">count</span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">*</span><span class=\"crayon-sy\">)</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757c9928752199-2\">\r\n								<span class=\"crayon-i\">from</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757c9928752199-3\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">task</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757c9928752199-4\">\r\n								<span class=\"crayon-i\">where</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757c9928752199-5\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">status</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">2</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757c9928752199-6\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">operator_id</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">20839</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757c9928752199-7\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">operate_time</span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-i\">gt</span><span class=\"crayon-sy\">;</span><span class=\"crayon-cn\">1371169729</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757c9928752199-8\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">operate_time</span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-i\">lt</span><span class=\"crayon-sy\">;</span><span class=\"crayon-cn\">1371174603</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757c9928752199-9\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">type</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">;</span> \r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	系统使用者反应有一个功能越来越慢，于是工程师找到了上面的SQL。<br />\r\n并且兴致冲冲的找到了我，“这个SQL需要优化，给我把每个字段都加上索引”<br />\r\n我很惊讶，问道“为什么需要每个字段都加上索引？”<br />\r\n“把查询的字段都加上索引会更快”工程师信心满满<br />\r\n“这种情况完全可以建一个联合索引，因为是最左前缀匹配，所以operate_time需要放到最后，而且还需要把其他相关的查询都拿来，需要做一个综合评估。”<br />\r\n“联合索引？最左前缀匹配？综合评估？”工程师不禁陷入了沉思。<br />\r\n多数情况下，我们知道索引能够提高查询效率，但应该如何建立索引？索引的顺序如何？许多人却只知道大概。其实理解这些概念并不难，而且索引的原理远没有想象的那么复杂。\r\n</p>\r\n<h1 id=\"mysql-\">\r\n	MySQL索引原理\r\n</h1>\r\n<h2 id=\"-\">\r\n	索引目的\r\n</h2>\r\n<p>\r\n	索 \r\n引的目的在于提高查询效率，可以类比字典，如果要查“mysql”这个单词，我们肯定需要定位到m字母，然后从下往下找到y字母，再找到剩下的sql。如\r\n果没有索引，那么你可能需要把所有单词看一遍才能找到你想要的，如果我想找到m开头的单词呢？或者ze开头的单词呢？是不是觉得如果没有索引，这个事情根\r\n 本无法完成？\r\n</p>\r\n<h2 id=\"-\">\r\n	索引原理\r\n</h2>\r\n<p>\r\n	除了词典，生活中随处可见索引的例子，如火车站的车次表、图书的目录等。它们的原理都是一样的，通过不断的缩小想要获得数据的范围来筛选出最终想要的结果，同时把随机的事件变成顺序的事件，也就是我们总是通过同一种查找方式来锁定数据。<br />\r\n数据库也是一样，但显然要复杂许多，因为不仅面临着等值查询，还有范围查询(&gt;、&lt;、between、in)、模糊查询(like)、并集 \r\n查询(or)等等。数据库应该选择怎么样的方式来应对所有的问题呢？我们回想字典的例子，能不能把数据分成段，然后分段查询呢？最简单的如果1000条数\r\n据，1到100分成第一段，101到200分成第二段，201到300分成第三段......这样查第250条数据，只要找第三段就可以了，一下子去除了\r\n90%的无效数据。但如果是1千万的记录呢，分成几段比较好？稍有算法基础的同学会想到搜索树，其平均复杂度是lgn，具有不错的查询性能。但这里我们忽\r\n略了一个关键的问题，复杂度模型是基于每次相同的操作成本来考虑的，数据库实现比较复杂，数据保存在磁盘上，而为了提高性能，每次又可以把部分数据读入内\r\n 存来计算，因为我们知道访问磁盘的成本大概是访问内存的十万倍左右，所以简单的搜索树难以满足复杂的应用场景。\r\n</p>\r\n<h3 id=\"-io-\">\r\n	磁盘IO与预读\r\n</h3>\r\n<p>\r\n	前 \r\n面提到了访问磁盘，那么这里先简单介绍一下磁盘IO和预读，磁盘读取数据靠的是机械运动，每次读取数据花费的时间可以分为寻道时间、旋转延迟、传输时间三\r\n个部分，寻道时间指的是磁臂移动到指定磁道所需要的时间，主流磁盘一般在5ms以下；旋转延迟就是我们经常听说的磁盘转速，比如一个磁盘7200转，表示\r\n 每分钟能转7200次，也就是说1秒钟能转120次，旋转延迟就是1/120/2 = \r\n4.17ms；传输时间指的是从磁盘读出或将数据写入磁盘的时间，一般在零点几毫秒，相对于前两个时间可以忽略不计。那么访问一次磁盘的时间，即一次磁盘\r\n IO的时间约等于5+4.17 = 9ms左右，听起来还挺不错的，但要知道一台500 \r\n-MIPS的机器每秒可以执行5亿条指令，因为指令依靠的是电的性质，换句话说执行一次IO的时间可以执行40万条指令，数据库动辄十万百万乃至千万级数\r\n 据，每次9毫秒的时间，显然是个灾难。下图是计算机硬件延迟的对比图，供大家参考：<br />\r\n<a class=\"fancybox\" href=\"http://tech.meituan.com/img/mysql_index/various-system-software-hardware-latencies.png\"><img src=\"http://tech.meituan.com/img/mysql_index/various-system-software-hardware-latencies.png\" alt=\"\" height=\"321\" width=\"548\" /></a> \r\n</p>\r\n<p>\r\n	考 \r\n虑到磁盘IO是非常高昂的操作，计算机操作系统做了一些优化，当一次IO时，不光把当前磁盘地址的数据，而是把相邻的数据也都读取到内存缓冲区内，因为局\r\n部预读性原理告诉我们，当计算机访问一个地址的数据的时候，与其相邻的数据也会很快被访问到。每一次IO读取的数据我们称之为一页(page)。具体一页\r\n 有多大数据跟操作系统有关，一般为4k或8k，也就是我们读取一页内的数据时候，实际上才发生了一次IO，这个理论对于索引的数据结构设计非常有帮助。\r\n</p>\r\n<h3 id=\"-\">\r\n	索引的数据结构\r\n</h3>\r\n<p>\r\n	前 \r\n面讲了生活中索引的例子，索引的基本原理，数据库的复杂性，又讲了操作系统的相关知识，目的就是让大家了解，任何一种数据结构都不是凭空产生的，一定会有\r\n它的背景和使用场景，我们现在总结一下，我们需要这种数据结构能够做些什么，其实很简单，那就是：每次查找数据时把磁盘IO次数控制在一个很小的数量级，\r\n 最好是常数数量级。那么我们就想到如果一个高度可控的多路搜索树是否能满足需求呢？就这样，b+树应运而生。\r\n</p>\r\n<h3 id=\"-b-\">\r\n	详解b+树\r\n</h3>\r\n<p>\r\n	<a class=\"fancybox\" href=\"http://tech.meituan.com/img/mysql_index/btree.jpg\"><img class=\"aligncenter\" src=\"http://tech.meituan.com/img/mysql_index/btree.jpg\" alt=\"\" height=\"300\" width=\"624\" /></a> \r\n</p>\r\n<p>\r\n	如上图，是一颗b+树，关于b+树的定义可以参见<a href=\"http://zh.wikipedia.org/wiki/B%2B%E6%A0%91\">B+树</a>，\r\n 这里只说一些重点，浅蓝色的块我们称之为一个磁盘块，可以看到每个磁盘块包含几个数据项（深蓝色所示）和指针（黄色所示），如磁盘块1包含数据项17和\r\n35，包含指针P1、P2、P3，P1表示小于17的磁盘块，P2表示在17和35之间的磁盘块，P3表示大于35的磁盘块。真实的数据存在于叶子节点即\r\n3、5、9、10、13、15、28、29、36、60、75、79、90、99。非叶子节点只不存储真实的数据，只存储指引搜索方向的数据项，如17、\r\n 35并不真实存在于数据表中。\r\n</p>\r\n<h3 id=\"b-\">\r\n	b+树的查找过程\r\n</h3>\r\n<p>\r\n	如图所示，如果要查找数据项29，那么首先会把磁盘块1 \r\n由磁盘加载到内存，此时发生一次IO，在内存中用二分查找确定29在17和35之间，锁定磁盘块1的P2指针，内存时间因为非常短（相比磁盘的IO）可以\r\n忽略不计，通过磁盘块1的P2指针的磁盘地址把磁盘块3由磁盘加载到内存，发生第二次IO，29在26和30之间，锁定磁盘块3的P2指针，通过指针加载\r\n磁盘块8到内存，发生第三次IO，同时内存中做二分查找找到29，结束查询，总计三次IO。真实的情况是，3层的b+树可以表示上百万的数据，如果上百万\r\n 的数据查找只需要三次IO，性能提高将是巨大的，如果没有索引，每个数据项都要发生一次IO，那么总共需要百万次的IO，显然成本非常非常高。\r\n</p>\r\n<h3 id=\"b-\">\r\n	b+树性质\r\n</h3>\r\n<p>\r\n	1. \r\n通过上面的分析，我们知道IO次数取决于b+数的高度h，假设当前数据表的数据为N，每个磁盘块的数据项的数量是m，则有h=㏒(m+1)N，当数据量N\r\n 一定的情况下，m越大，h越小；而m = 磁盘块的大小 / \r\n数据项的大小，磁盘块的大小也就是一个数据页的大小，是固定的，如果数据项占的空间越小，数据项的数量越多，树的高度越低。这就是为什么每个数据项，即索\r\n引字段要尽量的小，比如int占4字节，要比bigint8字节少一半。这也是为什么b+树要求把真实的数据放到叶子节点而不是内层节点，一旦放到内层节\r\n 点，磁盘块的数据项会大幅度下降，导致树增高。当数据项等于1时将会退化成线性表。<br />\r\n2.当b+树的数据项是复合的数据结构，比如 \r\n(name,age,sex)的时候，b+数是按照从左到右的顺序来建立搜索树的，比如当(张三,20,F)这样的数据来检索的时候，b+树会优先比较 \r\nname来确定下一步的所搜方向，如果name相同再依次比较age和sex，最后得到检索的数据；但当(20,F)这样的没有name的数据来的时 \r\n候，b+树就不知道下一步该查哪个节点，因为建立搜索树的时候name就是第一个比较因子，必须要先根据name来搜索才能知道下一步去哪里查询。比如当\r\n(张三,F)这样的数据来检索时，b+树可以用name来指定搜索方向，但下一个字段age的缺失，所以只能把名字等于张三的数据都找到，然后再匹配性别\r\n 是F的数据了， 这个是非常重要的性质，即索引的最左匹配特性。\r\n</p>\r\n<h1 id=\"-\">\r\n	慢查询优化\r\n</h1>\r\n<p>\r\n	关于MySQL索引原理是比较枯燥的东西，大家只需要有一个感性的认识，并不需要理解得非常透彻和深入。我们回头来看看一开始我们说的慢查询，了解完索引原理之后，大家是不是有什么想法呢？先总结一下索引的几大基本原则\r\n</p>\r\n<h2 id=\"-\">\r\n	建索引的几大原则\r\n</h2>\r\n<p>\r\n	1. \r\n最左前缀匹配原则，非常重要的原则，mysql会一直向右匹配直到遇到范围查询(&gt;、&lt;、between、like)就停止匹配，比如a \r\n1=\"\" and=\"\" b=\"2\" c=\"\"&gt; 3 and d = 4 \r\n&nbsp;如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整。<br />\r\n2.=和in可以乱序，比如a = 1 and b = 2 and c = 3 建立(a,b,c)索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式<br />\r\n3. 尽量选择区分度高的列作为索引,区分度的公式是count(distinct \r\ncol)/count(*)，表示字段不重复的比例，比例越大我们扫描的记录数越少，唯一键的区分度是1，而一些状态、性别字段可能在大数据面前区分度就\r\n是0，那可能有人会问，这个比例有什么经验值吗？使用场景不同，这个值也很难确定，一般需要join的字段我们都要求是0.1以上，即平均1条扫描10条\r\n 记录<br />\r\n4.索引列不能参与计算，保持列“干净”，比如from_unixtime(create_time) = \r\n’2014-05-29’就不能使用到索引，原因很简单，b+树中存的都是数据表中的字段值，但进行检索时，需要把所有元素都应用函数才能比较，显然成本\r\n 太大。所以语句应该写成create_time = unix_timestamp(’2014-05-29’);<br />\r\n5.尽量的扩展索引，不要新建索引。比如表中已经有a的索引，现在要加(a,b)的索引，那么只需要修改原来的索引即可\r\n</p>\r\n<h2 id=\"-\">\r\n	回到开始的慢查询\r\n</h2>\r\n<p>\r\n	根据最左匹配原则，最开始的sql语句的索引应该是status、operator_id、type、operate_time的联合索引；其中status、operator_id、type的顺序可以颠倒，所以我才会说，把这个表的所有相关查询都找到，会综合分析；<br />\r\n比如还有如下查询\r\n</p>\r\n<div id=\"crayon-55abab23757eb319887175\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n	<div class=\"crayon-main\">\r\n		<table class=\"crayon-table\">\r\n			<tbody>\r\n				<tr class=\"crayon-row\">\r\n					<td class=\"crayon-nums \">\r\n						<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-num\">\r\n								1\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td class=\"crayon-code\">\r\n						<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757eb319887175-1\">\r\n								<span class=\"crayon-i\">select</span>&nbsp;<span class=\"crayon-o\">*</span>&nbsp;<span class=\"crayon-i\">from</span>&nbsp;<span class=\"crayon-i\">task</span>&nbsp;<span class=\"crayon-i\">where</span>&nbsp;<span class=\"crayon-i\">status</span>&nbsp;<span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-cn\">0</span>&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">type</span>&nbsp;<span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-cn\">12</span>&nbsp;<span class=\"crayon-i\">limit</span>&nbsp;<span class=\"crayon-cn\">10</span><span class=\"crayon-sy\">;</span> \r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<div id=\"crayon-55abab23757f3800045428\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n	<div class=\"crayon-main\">\r\n		<table class=\"crayon-table\">\r\n			<tbody>\r\n				<tr class=\"crayon-row\">\r\n					<td class=\"crayon-nums \">\r\n						<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-num\">\r\n								1\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td class=\"crayon-code\">\r\n						<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757f3800045428-1\">\r\n								<span class=\"crayon-i\">select</span>&nbsp;<span class=\"crayon-e\">count</span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">*</span><span class=\"crayon-sy\">)</span>&nbsp;<span class=\"crayon-i\">from</span>&nbsp;<span class=\"crayon-i\">task</span>&nbsp;<span class=\"crayon-i\">where</span>&nbsp;<span class=\"crayon-i\">status</span>&nbsp;<span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-cn\">0</span>&nbsp;<span class=\"crayon-sy\">;</span> \r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	那么索引建立成(status,type,operator_id,operate_time)就是非常正确的，因为可以覆盖到所有情况。这个就是利用了索引的最左匹配的原则\r\n</p>\r\n<h2 id=\"-explain-\">\r\n	查询优化神器 - explain命令\r\n</h2>\r\n<p>\r\n	关于explain命令相信大家并不陌生，具体用法和字段含义可以参考官网<a href=\"http://dev.mysql.com/doc/refman/5.5/en/explain-output.html\">explain-output</a>，这里需要强调rows是核心指标，绝大部分rows小的语句执行一定很快（有例外，下面会讲到）。所以优化语句基本上都是在优化rows。\r\n</p>\r\n<h2 id=\"-\">\r\n	慢查询优化基本步骤\r\n</h2>\r\n<p>\r\n	0.先运行看看是否真的很慢，注意设置SQL_NO_CACHE<br />\r\n1.where条件单表查，锁定最小返回记录表。这句话的意思是把查询语句的where都应用到表中返回的记录数最小的表开始查起，单表每个字段分别查询，看哪个字段的区分度最高<br />\r\n2.explain查看执行计划，是否与1预期一致（从锁定记录较少的表开始查询）<br />\r\n3.order by limit 形式的sql语句让排序的表优先查<br />\r\n4.了解业务方使用场景<br />\r\n5.加索引时参照建索引的几大原则<br />\r\n6.观察结果，不符合预期继续从0分析\r\n</p>\r\n<h2 id=\"-\">\r\n	几个慢查询案例\r\n</h2>\r\n<p>\r\n	下面几个例子详细解释了如何分析和优化慢查询\r\n</p>\r\n<h3 id=\"-\">\r\n	复杂语句写法\r\n</h3>\r\n<p>\r\n	很多情况下，我们写SQL只是为了实现功能，这只是第一步，不同的语句书写方式对于效率往往有本质的差别，这要求我们对mysql的执行计划和索引原则有非常清楚的认识，请看下面的语句\r\n</p>\r\n<div id=\"crayon-55abab23757fb433967007\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n	<div class=\"crayon-main\">\r\n		<table class=\"crayon-table\">\r\n			<tbody>\r\n				<tr class=\"crayon-row\">\r\n					<td class=\"crayon-nums \">\r\n						<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-num\">\r\n								1\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								2\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								3\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								4\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								5\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								6\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								7\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								8\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								9\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								10\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								11\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								12\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								13\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								14\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								15\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								16\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								17\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								18\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								19\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								20\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								21\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								22\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								23\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								24\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								25\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								26\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td class=\"crayon-code\">\r\n						<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-1\">\r\n								<span class=\"crayon-i\">select</span>&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">distinct</span>&nbsp;<span class=\"crayon-i\">cert</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">emp_id</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-2\">\r\n								<span class=\"crayon-i\">from</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-3\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">cm_log</span>&nbsp;<span class=\"crayon-i\">cl</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-4\">\r\n								<span class=\"crayon-i\">inner</span>&nbsp;<span class=\"crayon-i\">join</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-5\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-sy\">(</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">select</span> \r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-6\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">emp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">id</span>&nbsp;<span class=\"crayon-st\">as</span>&nbsp;<span class=\"crayon-i\">emp_id</span><span class=\"crayon-sy\">,</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-7\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">emp_cert</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">id</span>&nbsp;<span class=\"crayon-st\">as</span>&nbsp;<span class=\"crayon-i\">cert_id</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-8\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">from</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-9\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">employee</span>&nbsp;<span class=\"crayon-i\">emp</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-10\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">left</span>&nbsp;<span class=\"crayon-i\">join</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-11\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">emp_certificate</span>&nbsp;<span class=\"crayon-i\">emp_cert</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-12\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">on</span>&nbsp;<span class=\"crayon-i\">emp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">id</span>&nbsp;<span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-i\">emp_cert</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">emp_id</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-13\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">where</span> \r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-14\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">emp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">is_deleted</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">0</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-15\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-sy\">)</span>&nbsp;<span class=\"crayon-i\">cert</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-16\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">on</span>&nbsp;<span class=\"crayon-sy\">(</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-17\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">ref_table</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\'Employee\'</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-18\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">ref_oid</span><span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-i\">cert</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">emp_id</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-19\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-sy\">)</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-20\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">or</span>&nbsp;<span class=\"crayon-sy\">(</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-21\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">ref_table</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\'EmpCertificate\'</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-22\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">ref_oid</span><span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-i\">cert</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">cert_id</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-23\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-sy\">)</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-24\">\r\n								<span class=\"crayon-i\">where</span> \r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab23757fb433967007-25\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">last_upd_date</span>&nbsp;<span class=\"crayon-o\">&amp;</span><span class=\"crayon-i\">gt</span><span class=\"crayon-sy\">;</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\'2013-11-07&nbsp;15:03:00\'</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab23757fb433967007-26\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">last_upd_date</span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-i\">lt</span><span class=\"crayon-sy\">;</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\'2013-11-08&nbsp;16:00:00\'</span><span class=\"crayon-sy\">;</span> \r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	0.先运行一下，53条记录 1.87秒，又没有用聚合语句，比较慢\r\n</p>\r\n<div id=\"crayon-55abab2375803412116507\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n	<div class=\"crayon-main\">\r\n		<table class=\"crayon-table\">\r\n			<tbody>\r\n				<tr class=\"crayon-row\">\r\n					<td class=\"crayon-nums \">\r\n						<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-num\">\r\n								1\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td class=\"crayon-code\">\r\n						<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-line\" id=\"crayon-55abab2375803412116507-1\">\r\n								<span class=\"crayon-cn\">53</span>&nbsp;<span class=\"crayon-i\">rows</span>&nbsp;<span class=\"crayon-st\">in</span>&nbsp;<span class=\"crayon-i\">set</span>&nbsp;<span class=\"crayon-sy\">(</span><span class=\"crayon-cn\">1.87</span>&nbsp;<span class=\"crayon-i\">sec</span><span class=\"crayon-sy\">)</span> \r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	简述一下执行计划，首先mysql根据idx_last_upd_date索引扫描cm_log表获得379条记录；然后查表扫描了63727条记\r\n录，分 \r\n为两部分，derived表示构造表，也就是不存在的表，可以简单理解成是一个语句形成的结果集，后面的数字表示语句的ID。derived2表示的是 \r\nID = 2的查询构造了虚拟表，并且返回了63727条记录。我们再来看看ID = \r\n2的语句究竟做了写什么返回了这么大量的数据，首先全表扫描employee表13317条记录，然后根据索引 \r\nemp_certificate_empid关联emp_certificate表，rows = \r\n1表示，每个关联都只锁定了一条记录，效率比较高。获得后，再和cm_log的379条记录根据规则关联。从执行过程上可以看出返回了太多的数据，返回的\r\n数据绝大部分cm_log都用不到，因为cm_log只锁定了379条记录。<br />\r\n如何优化呢？可以看到我们在运行完后 \r\n还是要和cm_log做join,那么我们能不能之前和cm_log做join呢？仔细分析语句不难发现，其基本思想是如果cm_log的 \r\nref_table是EmpCertificate就关联emp_certificate表，如果ref_table是Employee就关联 \r\nemployee表，我们完全可以拆成两部分，并用union连接起来，注意这里用union，而不用union \r\nall是因为原语句有“distinct”来得到唯一的记录，而union恰好具备了这种功能。如果原语句中没有distinct不需要去重，我们就可以\r\n 直接使用union all了，因为使用union需要去重的动作，会影响SQL性能。<br />\r\n优化过的语句如下\r\n</p>\r\n<div id=\"crayon-55abab237581c275229421\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n	<div class=\"crayon-main\">\r\n		<table class=\"crayon-table\">\r\n			<tbody>\r\n				<tr class=\"crayon-row\">\r\n					<td class=\"crayon-nums \">\r\n						<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-num\">\r\n								1\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								2\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								3\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								4\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								5\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								6\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								7\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								8\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								9\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								10\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								11\r\n							</div>\r\n							<div class=\"crayon-num crayon-striped-num\">\r\n								12\r\n							</div>\r\n							<div class=\"crayon-num\">\r\n								13\r\n							</div>\r\n						</div>\r\n					</td>\r\n					<td class=\"crayon-code\">\r\n						<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n							<div class=\"crayon-line\" id=\"crayon-55abab237581c275229421-1\">\r\n								<span class=\"crayon-i\">select</span> \r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237581c275229421-2\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">emp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">id</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab237581c275229421-3\">\r\n								<span class=\"crayon-i\">from</span> \r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237581c275229421-4\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">cm_log</span>&nbsp;<span class=\"crayon-i\">cl</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab237581c275229421-5\">\r\n								<span class=\"crayon-i\">inner</span>&nbsp;<span class=\"crayon-i\">join</span> \r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237581c275229421-6\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">employee</span>&nbsp;<span class=\"crayon-i\">emp</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab237581c275229421-7\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">on</span>&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">ref_table</span>&nbsp;<span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-s\">\'Employee\'</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237581c275229421-8\">\r\n								&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">ref_oid</span>&nbsp;<span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-i\">emp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">id</span>&nbsp;&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab237581c275229421-9\">\r\n								<span class=\"crayon-i\">where</span> \r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237581c275229421-10\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">last_upd_date</span>&nbsp;<span class=\"crayon-o\">&amp;</span><span class=\"crayon-i\">gt</span><span class=\"crayon-sy\">;</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\'2013-11-07&nbsp;15:03:00\'</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab237581c275229421-11\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">last_upd_date</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\'2013-11-07&nbsp;15:03:00\'</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237581c275229421-12\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">cl</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">last_upd_date</span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-i\">lt</span><span class=\"crayon-sy\">;</span><span class=\"crayon-o\">=</span><span class=\"crayon-s\">\'2013-11-08&nbsp;16:00:00\'</span>&nbsp;\r\n							</div>\r\n							<div class=\"crayon-line\" id=\"crayon-55abab237581c275229421-13\">\r\n								&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-i\">emp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">is_deleted</span>&nbsp;<span class=\"crayon-o\">=</span>&nbsp;<span class=\"crayon-cn\">0</span> \r\n							</div>\r\n						</div>\r\n					</td>\r\n				</tr>\r\n			</tbody>\r\n		</table>\r\n	</div>\r\n</div>\r\n<p>\r\n	4.不需要了解业务场景，只需要改造的语句和改造之前的语句保持结果一致\r\n</p>\r\n<p>\r\n	5.现有索引可以满足，不需要建索引\r\n</p>\r\n<p>\r\n	6.用改造后的语句实验一下，只需要10ms 降低了近200倍\r\n</p>\r\n<div id=\"crayon-55abab2375827739957201\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n	<div class=\"crayon-main\">\r\n		<h3 id=\"-\">\r\n			明确应用场景\r\n		</h3>\r\n		<p>\r\n			举这个例子的目的在于颠覆我们对列的区分度的认知，一般上我们认为区分度越高的列，越容易锁定更少的记录，但在一些特殊的情况下，这种理论是有局限性的\r\n		</p>\r\n		<div id=\"crayon-55abab2375834896274782\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n			<div class=\"crayon-main\">\r\n				<table class=\"crayon-table\">\r\n					<tbody>\r\n						<tr class=\"crayon-row\">\r\n							<td class=\"crayon-nums \">\r\n								<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-num\">\r\n										1\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										2\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										3\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										4\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										5\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										6\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										7\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										8\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										9\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										10\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										11\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td class=\"crayon-code\">\r\n								<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375834896274782-1\">\r\n										<span class=\"crayon-i\">select</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375834896274782-2\">\r\n										&nbsp;&nbsp;&nbsp;<span class=\"crayon-o\">*</span>&nbsp;\r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375834896274782-3\">\r\n										<span class=\"crayon-i\">from</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375834896274782-4\">\r\n										&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">stage_poi</span>&nbsp;<span class=\"crayon-i\">sp</span>&nbsp;\r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375834896274782-5\">\r\n										<span class=\"crayon-i\">where</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375834896274782-6\">\r\n										&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">sp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">accurate_result</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">1</span>&nbsp;\r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375834896274782-7\">\r\n										&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">and</span>&nbsp;<span class=\"crayon-sy\">(</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375834896274782-8\">\r\n										&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-i\">sp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">sync_status</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">0</span>&nbsp;\r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375834896274782-9\">\r\n										&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">or</span>&nbsp;<span class=\"crayon-i\">sp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">sync_status</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">2</span>&nbsp;\r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375834896274782-10\">\r\n										&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-st\">or</span>&nbsp;<span class=\"crayon-i\">sp</span><span class=\"crayon-sy\">.</span><span class=\"crayon-i\">sync_status</span><span class=\"crayon-o\">=</span><span class=\"crayon-cn\">4</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375834896274782-11\">\r\n										&nbsp;&nbsp;&nbsp;<span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span> \r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n		<p>\r\n			0.先看看运行多长时间,951条数据6.22秒，真的很慢\r\n		</p>\r\n		<div id=\"crayon-55abab237583e095238819\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n			<div class=\"crayon-main\">\r\n				<table class=\"crayon-table\">\r\n					<tbody>\r\n						<tr class=\"crayon-row\">\r\n							<td class=\"crayon-nums \">\r\n								<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-num\">\r\n										1\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td class=\"crayon-code\">\r\n								<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-line\" id=\"crayon-55abab237583e095238819-1\">\r\n										<span class=\"crayon-cn\">951</span>&nbsp;<span class=\"crayon-i\">rows</span>&nbsp;<span class=\"crayon-st\">in</span>&nbsp;<span class=\"crayon-i\">set</span>&nbsp;<span class=\"crayon-sy\">(</span><span class=\"crayon-cn\">6.22</span>&nbsp;<span class=\"crayon-i\">sec</span><span class=\"crayon-sy\">)</span> \r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n		<p>\r\n			1.先explain，rows达到了361万，type = ALL表明是全表扫描\r\n		</p>\r\n		<div id=\"crayon-55abab2375846315825876\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n			<div class=\"crayon-main\">\r\n				<table class=\"crayon-table\">\r\n					<tbody>\r\n						<tr class=\"crayon-row\">\r\n							<td class=\"crayon-nums \">\r\n								<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-num\">\r\n										1\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										2\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										3\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										4\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										5\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td class=\"crayon-code\">\r\n								<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375846315825876-1\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375846315825876-2\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">id</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">select_type</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">table</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">type</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">possible_keys</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">key</span>&nbsp;&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">key_len</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">ref</span>&nbsp;&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">rows</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">Extra</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375846315825876-3\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375846315825876-4\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;&nbsp;<span class=\"crayon-cn\">1</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-cn\">SIMPLE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">sp</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-cn\">ALL</span>&nbsp;&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-t\">NULL</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-t\">NULL</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-t\">NULL</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-t\">NULL</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-cn\">3613155</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">Using</span>&nbsp;<span class=\"crayon-i\">where</span>&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375846315825876-5\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n		<p>\r\n			2.所有字段都应用查询返回记录数，因为是单表查询 0已经做过了951条\r\n		</p>\r\n		<p>\r\n			3.让explain的rows 尽量逼近951\r\n		</p>\r\n		<p>\r\n			看一下accurate_result = 1的记录数\r\n		</p>\r\n		<div id=\"crayon-55abab237584f630244023\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n			<div class=\"crayon-main\">\r\n				<table class=\"crayon-table\">\r\n					<tbody>\r\n						<tr class=\"crayon-row\">\r\n							<td class=\"crayon-nums \">\r\n								<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-num\">\r\n										1\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										2\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										3\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										4\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										5\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										6\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										7\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										8\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td class=\"crayon-code\">\r\n								<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-line\" id=\"crayon-55abab237584f630244023-1\">\r\n										<span class=\"crayon-i\">select</span>&nbsp;<span class=\"crayon-e\">count</span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">*</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span><span class=\"crayon-i\">accurate_result</span>&nbsp;<span class=\"crayon-i\">from</span>&nbsp;<span class=\"crayon-i\">stage_poi</span>&nbsp;&nbsp;<span class=\"crayon-i\">group</span>&nbsp;<span class=\"crayon-i\">by</span>&nbsp;<span class=\"crayon-i\">accurate_result</span><span class=\"crayon-sy\">;</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237584f630244023-2\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab237584f630244023-3\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-e\">count</span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">*</span><span class=\"crayon-sy\">)</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">accurate_result</span>&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237584f630244023-4\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab237584f630244023-5\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-cn\">1023</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-o\">-</span><span class=\"crayon-cn\">1</span>&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237584f630244023-6\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;&nbsp;<span class=\"crayon-cn\">2114655</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-cn\">0</span>&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab237584f630244023-7\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;&nbsp;&nbsp;<span class=\"crayon-cn\">972815</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-cn\">1</span>&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab237584f630244023-8\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n		<p>\r\n			我们看到accurate_result这个字段的区分度非常低，整个表只有-1,0,1三个值，加上索引也无法锁定特别少量的数据\r\n		</p>\r\n		<p>\r\n			再看一下sync_status字段的情况\r\n		</p>\r\n		<div id=\"crayon-55abab2375859771196948\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n			<div class=\"crayon-main\">\r\n				<table class=\"crayon-table\">\r\n					<tbody>\r\n						<tr class=\"crayon-row\">\r\n							<td class=\"crayon-nums \">\r\n								<div class=\"crayon-nums-content\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-num\">\r\n										1\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										2\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										3\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										4\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										5\r\n									</div>\r\n									<div class=\"crayon-num crayon-striped-num\">\r\n										6\r\n									</div>\r\n									<div class=\"crayon-num\">\r\n										7\r\n									</div>\r\n								</div>\r\n							</td>\r\n							<td class=\"crayon-code\">\r\n								<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375859771196948-1\">\r\n										<span class=\"crayon-i\">select</span>&nbsp;<span class=\"crayon-e\">count</span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">*</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span><span class=\"crayon-i\">sync_status</span>&nbsp;<span class=\"crayon-i\">from</span>&nbsp;<span class=\"crayon-i\">stage_poi</span>&nbsp;&nbsp;<span class=\"crayon-i\">group</span>&nbsp;<span class=\"crayon-i\">by</span>&nbsp;<span class=\"crayon-i\">sync_status</span><span class=\"crayon-sy\">;</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375859771196948-2\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375859771196948-3\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-e\">count</span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">*</span><span class=\"crayon-sy\">)</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;<span class=\"crayon-i\">sync_status</span>&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375859771196948-4\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375859771196948-5\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-cn\">3080</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-cn\">0</span>&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line crayon-striped-line\" id=\"crayon-55abab2375859771196948-6\">\r\n										<span class=\"crayon-o\">|</span>&nbsp;&nbsp;<span class=\"crayon-cn\">3085413</span>&nbsp;<span class=\"crayon-o\">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"crayon-cn\">3</span>&nbsp;<span class=\"crayon-o\">|</span> \r\n									</div>\r\n									<div class=\"crayon-line\" id=\"crayon-55abab2375859771196948-7\">\r\n										<span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">+</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">--</span><span class=\"crayon-o\">-</span><span class=\"crayon-o\">+</span> \r\n									</div>\r\n								</div>\r\n							</td>\r\n						</tr>\r\n					</tbody>\r\n				</table>\r\n			</div>\r\n		</div>\r\n		<p>\r\n			同样的区分度也很低，根据理论，也不适合建立索引\r\n		</p>\r\n		<p>\r\n			问题分析到这，好像得出了这个表无法优化的结论，两个列的区分度都很低，即便加上索引也只能适应这种情况，很难做普遍性的优化，比如当sync_status 0、3分布的很平均，那么锁定记录也是百万级别的\r\n		</p>\r\n		<p>\r\n			4. \r\n找业务方去沟通，看看使用场景。业务方是这么来使用这个SQL语句的，每隔五分钟会扫描符合条件的数据，处理完成后把sync_status这个字段变成\r\n1,五分钟符合条件的记录数并不会太多，1000个左右。了解了业务方的使用场景后，优化这个SQL就变得简单了，因为业务方保证了数据的不平衡，如果加\r\n 上索引可以过滤掉绝大部分不需要的数据\r\n		</p>\r\n		<p>\r\n			5.根据建立索引规则，使用如下语句建立索引\r\n		</p>\r\n		<div id=\"crayon-55abab2375860923264196\" class=\"crayon-syntax crayon-theme-familiar crayon-font-courier-new crayon-os-pc print-yes notranslate\" style=\"font-size:12px ! important;\">\r\n			<div class=\"crayon-main\">\r\n				<div class=\"crayon-pre\" style=\"font-size:12px !important;\">\r\n					<div class=\"crayon-line\" id=\"crayon-55abb30d9689d732345022-1\">\r\n						<p>\r\n							<span class=\"crayon-i\">alter</span>&nbsp;<span class=\"crayon-i\">table</span>&nbsp;<span class=\"crayon-i\">stage_poi</span>&nbsp;<span class=\"crayon-i\">add</span>&nbsp;<span class=\"crayon-i\">index</span>&nbsp;<span class=\"crayon-e\">idx_acc_status</span><span class=\"crayon-sy\">(</span><span class=\"crayon-i\">accurate_result</span><span class=\"crayon-sy\">,</span><span class=\"crayon-i\">sync_status</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span><br />\r\n6.观察预期结果,发现只需要200ms，快了30多倍\r\n						</p>\r\n					</div>\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</div>', '1437314431', '1437316187', '1118', '1', '未知', '2', 'MySQL索引原理及慢查询优化', '1', '0');
INSERT INTO `sxs_article` VALUES ('24', 'admin', 'h,c', '', '2', 'Date', 'java.sql.Date不会保存时分秒', '<p>\r\n	问题出处：公司的一个p2p产品倒计时的一个功能\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span id=\"__kindeditor_bookmark_start_7__\"></span>\r\n</p>\r\n<p>\r\n	没有发现问题之前一直用java.sql.Date保存记录的创建时间值，后来在计算时间差的时候老是不对劲，后来才发现java.sql.Date根本就不保存时分秒 ，SimpleDateFormat format打印出来的就是 yyyy:mm:dd: 00:00:00,终于真相大白了，这个问题困扰了我两天时间，最后将类型换成了java.sql.Timestampl类型，问题马上解决啊，究其原因还是自己对Date类型不熟悉啊，路漫漫其修远兮，少年还得加油\r\n</p>', '1436094101', '1436094101', '803', '1', '未知', '2', '关于java.sql.Date', '1', '0');
INSERT INTO `sxs_article` VALUES ('26', 'admin', 'h', '', '5', 'mysql', 'MySQL5.5以后默认使用InnoDB存储引擎，其中InnoDB和BDB提供事务安全表，其它存储引擎都是非事务安全表。', '<p>\r\n	MySQL5.5以后默认使用<strong>InnoDB</strong>存储引擎，其中InnoDB和BDB提供事务安全表，其它存储引擎都是非事务安全表。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n若要修改默认引擎，可以修改配置文件中的<span style=\"color:#3366ff;\">default-storage-engine</span>。可以通过：<span style=\"color:#3366ff;\">show variables like \'default_storage_engine\';</span>查看当前数据库到默认引擎。命令：<span style=\"color:#3366ff;\"><em>show engines</em>和<em>show variables like \'have%\'</em></span>可\r\n以列出当前数据库所支持到引擎。其中Value显示为disabled的记录表示数据库支持此引擎，而在数据库启动时被禁用。在MySQL5.1以\r\n后，INFORMATION_SCHEMA数据库中存在一个ENGINES的表，它提供的信息与show \r\nengines;语句完全一样，可以使用下面语句来查询哪些存储引擎支持事物处理：<span style=\"color:#3366ff;\">select engine from information_chema.engines where transactions = \'yes\';</span><br />\r\n可以通过<span style=\"color:#3366ff;\">engine</span>关键字在创建或修改数据库时指定所使用到引擎。<br />\r\n主要存储引擎：MyISAM、InnoDB、MEMORY和MERGE介绍：<br />\r\n在创建表到时候通过<em>engine=...</em>或<em>type=...</em>来指定所要使用到引擎。<span style=\"color:#3366ff;\"><em>show table status from DBname</em></span>来查看指定表到引擎。\r\n<p>\r\n	<strong>(一)MyISAM<br />\r\n　　</strong>它不支持事务，也不支持外键，优点是访问速度快，对事务完整性没有要求或者以SELECT、INSERT为主的应用基本都可以使用这个引擎来创建表。<br />\r\n每个MyISAM在磁盘上存储成3个文件，其中文件名和表名都相同，但是扩展名分别为：\r\n</p>\r\n<ul>\r\n	<li>\r\n		.frm(存储表定义)\r\n	</li>\r\n	<li>\r\n		MYD(MYData，存储数据)\r\n	</li>\r\n	<li>\r\n		MYI(MYIndex，存储索引)\r\n	</li>\r\n</ul>\r\n<p>\r\n	　　数据文件和索引文件可以放置在不同的目录，平均分配IO，获取更快的速度。要指定数据文件和索引文件的路径，需要在创建表的时候通过<span style=\"color:#3366ff;\">DATA DIRECTORY</span>和<span style=\"color:#3366ff;\">INDEX DIRECTORY</span>语句指定，文件路径需要使用绝对路径。<br />\r\n　每个MyISAM表都有一个标志，服务器或myisamchk程序在检查MyISAM数据表时会对这个标志进行设置。MyISAM表还有一个标志用来表\r\n明该数据表在上次使用后是不是被正常的关闭了。如果服务器以为当机或崩溃，这个标志可以用来判断数据表是否需要检查和修复。如果想让这种检查自动进行，可\r\n以在启动服务器时使用--myisam-recover现象。这会让服务器在每次打开一个MyISAM数据表是自动检查数据表的标志并进行必要的修复处\r\n理。MyISAM类型的表可能会损坏，可以使用<span style=\"color:#3366ff;\">CHECK TABLE</span>语句来检查MyISAM表的健康，并用<span style=\"color:#3366ff;\">REPAIR TABLE</span>语句修复一个损坏到MyISAM表。<br />\r\n　　MyISAM的表还支持3种不同的存储格式：\r\n</p>\r\n<ul>\r\n	<li>\r\n		静态(固定长度)表\r\n	</li>\r\n	<li>\r\n		动态表\r\n	</li>\r\n	<li>\r\n		压缩表\r\n	</li>\r\n</ul>\r\n<p>\r\n	　　其中静态表是默认的存储格式。静态表中的字段都是非变长字段，这样每个记录都是固定长度的，这种存储方式的优点是存储非常迅速，容易缓存，出现\r\n故障容易恢复；缺点是占用的空间通常比动态表多。静态表在数据存储时会根据列定义的宽度定义补足空格，但是在访问的时候并不会得到这些空格，这些空格在返\r\n回给应用之前已经去掉。同时需要注意：在某些情况下可能需要返回字段后的空格，而使用这种格式时后面到空格会被自动处理掉。<br />\r\n　　动态表包含变长字段，记录不是固定长度的，这样存储的优点是占用空间较少，但是频繁到更新删除记录会产生碎片，需要定期执行OPTIMIZE TABLE语句或myisamchk -r命令来改善性能，并且出现故障的时候恢复相对比较困难。<br />\r\n　　压缩表由myisamchk工具创建，占据非常小的空间，因为每条记录都是被单独压缩的，所以只有非常小的访问开支。 <br />\r\n<strong>(二)InnoDB<br />\r\n　　</strong>InnoDB存储引擎提供了具有提交、回滚和崩溃恢复能力的事务安全。但是对比MyISAM的存储引擎，InnoDB写的处理效率差一些并且会占用更多的磁盘空间以保留数据和索引。<br />\r\n<em>1)自动增长列：<br />\r\n　　</em>InnoDB表的自动增长列可以手工插入，但是插入的如果是空或0，则实际插入到则是自动增长后到值。可以通过\"<span style=\"color:#3366ff;\">ALTER TABLE...AUTO_INCREMENT=n;</span>\"语句强制设置自动增长值的起始值，默认为1，但是该强制到默认值是保存在内存中，数据库重启后该值将会丢失。可以使用<span style=\"color:#3366ff;\">LAST_INSERT_ID()</span>查询当前线程最后插入记录使用的值。如果一次插入多条记录，那么返回的是第一条记录使用的自动增长值。<br />\r\n对于InnoDB表，自动增长列必须是索引。如果是组合索引，也必须是组合索引的第一列，但是对于MyISAM表，自动增长列可以是组合索引的其他列，这样插入记录后，自动增长列是按照组合索引到前面几列排序后递增的。<br />\r\n<em>2)外键约束：<br />\r\n　　</em>MySQL支持外键的存储引擎只有InnoDB，在创建外键的时候，父表必须有对应的索引，子表在创建外键的时候也会自动创建对应的索引。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在创建索引的时候，可以指定在删除、更新父表时，对子表进行的相应操作，包括<span style=\"color:#3366ff;\">restrict、cascade、set null</span>和<span style=\"color:#3366ff;\">no action</span>。其中restrict和no action相同，是指限制在子表有关联的情况下，父表不能更新；casecade表示父表在更新或删除时，更新或者删除子表对应的记录；set null&nbsp;则表示父表在更新或者删除的时候，子表对应的字段被set null。<br />\r\n　　当某个表被其它表创建了外键参照，那么该表对应的索引或主键被禁止删除。<br />\r\n　　可以使用<span style=\"color:#3366ff;\">set foreign_key_checks=0;</span>临时关闭外键约束，<span style=\"color:#3366ff;\">set foreign_key_checks=1;</span>打开约束。<br />\r\n<strong>(三)MEMORY<br />\r\n　　</strong>memory使用存在内存中的内容来创建表。每个MEMORY表实际对应一个磁盘文件，格式是.frm。MEMORY类型的表访问非常快，因为它到数据是放在内存中的，并且默认使用HASH索引，但是一旦服务器关闭，表中的数据就会丢失，但表还会继续存在。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n默认情况下，memory数据表使用散列索引，利用这种索引进行“相等比较”非常快，但是对“范围比较”的速度就慢多了。因此，散列索引值适合使用\r\n在\"=\"和\"&lt;=&gt;\"的操作符中，不适合使用在\"&lt;\"或\"&gt;\"操作符中，也同样不适合用在order \r\nby字句里。如果确实要使用\"&lt;\"或\"&gt;\"或betwen操作符，可以使用btree索引来加快速度。<br />\r\n　　存储在MEMORY数据表里的数据行使用的是长度不变的格式，因此加快处理速度，这意味着不能使用BLOB和TEXT这样的长度可变的数据类型。VARCHAR是一种长度可变的类型，但因为它在MySQL内部当作长度固定不变的CHAR类型，所以可以使用。\r\n</p>\r\n<div class=\"cnblogs_Highlighter\">\r\n	<div>\r\n		<div id=\"highlighter_649855\" class=\"syntaxhighlighter nogutter  csharp\">\r\n			<table class=\"ke-zeroborder\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"code\">\r\n							<div class=\"container\">\r\n								<div class=\"line number1 index0 alt2\">\r\n									create table tab_memory engine=memoryselectid,name,age,addrfromman orderbyid;\r\n								</div>\r\n							</div>\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	　　使用USING HASH/BTREE来指定特定到索引。\r\n</p>\r\n<div class=\"cnblogs_Highlighter\">\r\n	<div>\r\n		<div id=\"highlighter_563616\" class=\"syntaxhighlighter nogutter  csharp\">\r\n			<table class=\"ke-zeroborder\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n				<tbody>\r\n					<tr>\r\n						<td class=\"code\">\r\n							<div class=\"container\">\r\n								<div class=\"line number1 index0 alt2\">\r\n									create index mem_hashusinghashontab_memory(city_id);\r\n								</div>\r\n							</div>\r\n						</td>\r\n					</tr>\r\n				</tbody>\r\n			</table>\r\n		</div>\r\n	</div>\r\n</div>\r\n<p>\r\n	　　在启动MySQL服务的时候使用--init-file选项，把insert into...select或load data infile 这样的语句放入到这个文件中，就可以在服务启动时从持久稳固的数据源中装载表。<br />\r\n　　服务器需要足够的内存来维持所在的在同一时间使用的MEMORY表，当不再使用MEMORY表时，要释放MEMORY表所占用的内存，应该执行DELETE FROM或truncate table或者删除整个表。<br />\r\n　　每个MEMORY表中放置到数据量的大小，受到max_heap_table_size系统变量的约束，这个系统变量的初始值是16M，同时在创建MEMORY表时可以使用MAX_ROWS子句来指定表中的最大行数。<br />\r\n<strong>(四)MERGE<br />\r\n　　</strong>merge\r\n存储引擎是一组MyISAM表的组合，这些MyISAM表结构必须完全相同，MERGE表中并没有数据，对MERGE类型的表可以进行查询、更新、删除的\r\n操作，这些操作实际上是对内部的MyISAM表进行操作。对于对MERGE表进行的插入操作，是根据INSERT_METHOD子句定义的插入的表，可以\r\n有3个不同的值，first和last值使得插入操作被相应的作用在第一个或最后一个表上，不定义这个子句或者为NO，表示不能对这个MERGE表进行插\r\n入操作。可以对MERGE表进行drop操作，这个操作只是删除MERGE表的定义，对内部的表没有任何影响。MERGE在磁盘上保留2个以MERGE表\r\n名开头文件：.frm文件存储表的定义；.MRG文件包含组合表的信息，包括MERGE表由哪些表组成，插入数据时的依据。可以通过修改.MRG文件来修\r\n改MERGE表，但是修改后要通过flush table刷新。\r\n</p>\r\n<div class=\"container\">\r\n	<div class=\"line number1 index0 alt2\">\r\n		<p>\r\n			createtableman_all(idint,namevarchar(20))engine=mergeunion=(man1,man2) insert_methos=last;\r\n		</p>\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			本文收录自：http://www.cnblogs.com/gbyukg/archive/2011/11/09/2242271.html\r\n		</p>\r\n	</div>\r\n</div>', '1437386335', '1437386362', '671', '1', 'http://www.cnblogs.com/gbyukg/archive/2011/11/09/2242271.html', '2', 'mysql存储引擎', '1', '0');
INSERT INTO `sxs_article` VALUES ('27', 'admin', 'h', '', '7', 'node.js,angular.js,yeoman', 'Yeoman是Google的团队和外部贡献者团队合作开发的，他的目标是通过Grunt（一个用于开发任务自动化的命令行工具）和Bower（一个HTML、CSS、Javascript和图片等前端资源的包管理器）的包装为开发者创建一个易用的工作流', '<p>\r\n	<span style=\"font-size:14px;\">公司前端框架使用了<a href=\"http://baike.baidu.com/link?url=iRpKZa2II2y6r5zsKyLIhpzW5e_fq_We7LZS2ZC8p3xsSHC-aMklg8RCCxIv8glq8ben6HBrUHQNNleW5zHu5q\" target=\"_blank\">angular.js</a>,之前都没有听说过，特网上搜寻了一番，收货不小，特记于此</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<span style=\"font-size:14px;\">angular项目生成框架yeoman能快速的帮你构建一个完美的高质量项目，具体如何，请看下文</span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p style=\"font-family:\'Lucida Grande\', \'Lucida Sans Unicode\', Helvetica, Arial, Verdana, sans-serif;background-color:#FFFFFF;\">\r\n	<span style=\"font-family:Arial;font-size:medium;\">Yeoman是Google的团队和外部贡献者团队合作开发的，他的目标是通过Grunt（一个用于开发任务自动化的命令行工具）和Bower（一个HTML、CSS、Javascript和图片等前端资源的包管理器）的包装为开发者创建一个易用的工作流。</span> \r\n</p>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	Yeoman的目的不仅是要为新项目建立工作流，同时还是为了解决前端开发所面临的诸多严重问题，例如零散的依赖关系。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	Yeoman主要有三部分组成：yo（脚手架工具）、grunt（构建工具）、bower（包管理器）。这三个工具是分别独立开发的，但是需要配合使用，来实现我们高效的工作流模式。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	下面这幅图很形象的表明了他们三者之间的协作关系。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09214923-27fe6dea6eb34f468e601589ea83a675.png\" width=\"580\" height=\"219\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<strong>YOMAN的特性</strong> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	闪电般的初始化：项目开始阶段，可以基于现有的模板框架（例如：HTML5 Bolierplate、Twitter Bootstrap）进行项目初始化的快速构建。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	了不起的构建流程：不仅仅包括JS、CSS代码的压缩、合并，还可以对图片和HTML文件进行优化，同时对CoffeScript和Compass的文件进行编译。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	自动编译CoffeScript和Compass：通过LiveReload进程可以对源文件发生的改动自动编译，完成后刷新浏览器。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	自动Lint代码：对于JS代码会自动进行JSLint测试，确保代码符合最佳编程实践。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	内置的预览服务器：不再需要自己配置服务器了，使用内置的就可以快速预览。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	惊人的图片优化：通过使用OptiPNG和JPEGTran来优化图片，减少下载损耗。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	杀手级包管理：通过bower search jQuery，可以快速安装和更新相关的文件，不再需要打开浏览器自己搜索了。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	PhantomJS单元测试：可以非常方便的使用PhantomJS进行单元测试，一切在项目初始的时候都准备好了。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:15px;background-color:#FFFFFF;\">\r\n	<strong>安装前的准备工作</strong> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	检查系统中是否安装了：Node.js、Ruby、Compass。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	Mac下安装Node.js非常方便，首页提供了一个pkg下载，双击后可以默认安装node、npm到/usr/local/bin下，我们只需要确保/usr/local/bin包含在PATH变量中就可以。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	Mac Mountain Lion 下自带了Ruby，所以也就不需要再单独安装了。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	Compass安装需要依赖于Ruby Gems，执行下面的步骤：\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	sudo gem update --system\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	sudo gem install compass\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:15px;background-color:#FFFFFF;\">\r\n	<strong>安装</strong> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	环境准备好之后，就可以进行安装了，执行：\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	sudo npm install -g yo grunt-cli bower\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	安装成功后，会看到下面的提示：\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09214959-ab7a06cafa054e23b9b0bcd2a2a9e823.png\" width=\"580\" height=\"348\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:15px;background-color:#FFFFFF;\">\r\n	<strong>使用</strong> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	执行 yo webapp 我们就可以快速的创建一个新的Web应用的框架，一个通常的工作流程如下：\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09215029-0e373ecbed66473789272c4699425e6a.png\" width=\"580\" height=\"79\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:15px;background-color:#FFFFFF;\">\r\n	<strong>项目实践</strong> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	本篇以一个实际项目为例，通过Yeoman来构建一个简单的Blog页面：\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	环境准备好之后，我们开始自己的项目开发了，首先为自己的项目准备一个目录，我这里是: rivertown.sinaapp.com。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	然后第一步，使用 yo 进行快速的初始化，初始化时会询问我们是否使用Bootstrap和RequireJS框架，我这里都选择了是。完成后一个Web应用的基础框架就建立好了。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09215059-cb58523abf2d4acf958a3b76ea2a3e15.png\" width=\"580\" height=\"598\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	初始化的WebApp目录结构如下，app目录是我们项目的主目录，test目录中对应的一些JS的单元测试文件。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09215127-478ec4003df249619923158eecb0b4d7.png\" width=\"580\" height=\"376\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	注意我们需要安装黄色字体的提示，将npm和bower安装到项目本地。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	修改页面文件以及样式。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	对页面进行预览和测试。当代码编辑到一定程度，我们就需要对页面进行测试了，这个时候需要Grunt派上用场，执行下面的命令：\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09215153-ce88f2339c8e474496446908d2f6ce38.png\" width=\"580\" height=\"279\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	很快，浏览器中就可以看到我们的页面了。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09215212-679713b408474d1db70976d25011fc26.png\" width=\"580\" height=\"424\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	更神奇的是，一旦我们编辑了项目源文件之后，切换到Safari窗口，就马上能够看到修改所带来的变化，根本不用手工刷新页面！\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	&nbsp;\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	如果我们想对JS进行测试，那么必须利用npm将PhantomJS安装到本地，然后执行grunt test。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	最后的步骤就是编译生成项目了，执行 grunt 就可以将项目编译生成在 dist 目录下，有可能生成的时候会提示 phantomjs 没有的错误，这个时候执行 grunt --force 强制跳过这一步就可以了。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09215247-a611b7f409bf427c831ae476bc7991a9.png\" width=\"580\" height=\"324\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	查看具体的main.css和main.js中的内容，可以发现里面的内容都是经过优化之后的。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<img src=\"http://images.cnitblog.com/blog/39469/201303/09215303-7bddc52fb2974029b17d7d0f896e57aa.png\" width=\"580\" height=\"267\" alt=\"\" /> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:15px;background-color:#FFFFFF;\">\r\n	<strong>使用体验</strong> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	经过一下午的试用，第一对于有这么一个集成化的构建、开发、编译流程，感觉非常新奇，相比于传统的开发方式。我需要首先确定用哪些框架，然后各个网站收集源代码，进行整合，还要部署一个测试的Web服务器，不管是用（Apache、Nginx还是Xampp），最后还要做代码的优化。而现在使用了Yeoman之后，所有的这些工作都被自动化、流程化了，我只需要按照既定的步骤来做，很多事情Yeoman都帮我做好了，对于前端开发来说，节省了非常多的力气。而且，生成项目的代码质量也都很不错。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	遗憾的地方在于目前Yeoman的相关资料还比较少，中文的资料也非常少，对于如何深入的学习和定制化，还需要继续的钻研。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	PS：吐槽一下百度，不得不说对于IT工作者来说，百度真的不是一个好的选择，输入Yeoman，除了Infoq的两篇介绍性的内容，其他的内容几乎与我需要的都相隔万里，也许是国内关注Yeoman太少的原因，但愿如此。\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	<br />\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	参考资料：\r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	1、<a href=\"http://dl.cdn.chip.eu/downloads/224463/Snow_Leopard_EN.zip?cid=5721758&platform=dcu&1362754176-1362761676-1c6561-B-a3c135af25f380ada9886c5071a2a788\">Yeoman：适合现代Web应用的现代工作流</a> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	2、<a href=\"http://yeoman.io/\">Yeoman.io</a> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	3、<a href=\"http://nodejs.org/\">Nodejs.org</a> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	4、<a href=\"http://compass-style.org/install/\">Compass</a> \r\n</div>\r\n<div style=\"margin:0px auto;text-align:-webkit-auto;font-family:Arial;font-size:medium;background-color:#FFFFFF;\">\r\n	5、<a href=\"https://github.com/yeoman/yeoman/wiki/Getting-started-with-1.0\">Yeoman Get Started with 1.0</a> \r\n</div>\r\n<div>\r\n	本文内容收录自：http://www.cnblogs.com/cocowool/archive/2013/03/09/2952003.html\r\n</div>\r\n<p>\r\n	<br />\r\n</p>', '1437479961', '1458120818', '954', '1', '未知', '2', '前端构建神器Yeoman', '1', '0');
INSERT INTO `sxs_article` VALUES ('28', 'admin', 'h', '', '2', '', '关于BigDecimal相加的值总为0的问题', '<p>\r\n	问题描述：\r\n</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;\r\n<pre>BigDecimal amountCount=BigDecimal.<span style=\"color:#660e7a;font-weight:bold;font-style:italic;\">ZERO</span><span style=\"color:#cc7832;\">;</span></pre>\r\n<pre>amountCount.add(<span style=\"color:#000080;font-weight:bold;\">new </span>BigDecimal(100)); <span style=\"color:#cc7832;\"> </span></pre>\r\n结果是amountCount值依然为0\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	解决方法：\r\n</p>\r\n<p>\r\n	<br />\r\nBigDecimal为不可变类,&nbsp;\r\n	<p>\r\n		所以执行运算的结果需要再返回给amountCount\r\n	</p>\r\n	<p>\r\n<pre>amountCount= amountCount.add(<span style=\"color:#000080;font-weight:bold;\">new </span>BigDecimal(100))<span style=\"color:#cc7832;\">;</span></pre>\r\n	</p>\r\n</p>', '1437619806', '1437619806', '875', '1', '未知', '2', 'BigDecimal相加的问题', '1', '0');
INSERT INTO `sxs_article` VALUES ('29', 'admin', 'h', '', '9', 'linux', ' 在Linux系统中有三种命令可以用来查阅全部的文件，分别是cat、more和less命令。它们查阅文件的使用方法也比较简单都是 命令 文件名 ，但是三者又有着区别。 1.cat命令可以一次显示整个文件，如果文件比较大，使用不是很方便； 2.more命令可以让屏幕在显示满一屏幕时暂停，此时可按空格健继续显示下一个画面，或按Q键停止显示。 3.less命令也可以分页显示文件，和more命令的区别就在', '<div class=\"content-list-text\">\r\n	<p>\r\n		在Linux系统中有三种命令可以用来查阅全部的文件，分别是cat、more和less命令。它们查阅文件的使用方法也比较简单都是 <strong><em>命令 文件名</em></strong>&nbsp;，但是三者又有着区别。\r\n	</p>\r\n	<p>\r\n		1.cat命令可以一次显示整个文件，如果文件比较大，使用不是很方便；\r\n	</p>\r\n	<p>\r\n		2.more命令可以让屏幕在显示满一屏幕时暂停，此时可按空格健继续显示下一个画面，或按Q键停止显示。\r\n	</p>\r\n	<p>\r\n		3.less命令也可以分页显示文件，和more命令的区别就在于它支持上下键卷动屏幕，当结束浏览时，只要在less命令的提示符“: ”下按Q键即可。\r\n	</p>\r\n	<p>\r\n		另外，多数情况下more和less命令会配合管道符来分页输出需要在屏幕上显示的内容。\r\n	</p>\r\n	<p>\r\n		另外：\r\n	</p>\r\n	<p>\r\n		1. 如果你只想看文件的前5行，可以使用head命令，如： <br />\r\nhead -5 /etc/passwd <br />\r\n2. 如果你想查看文件的后10行，可以使用tail命令，如： <br />\r\ntail -10 /etc/passwd 或 tail -n 10 /etc/passwd <br />\r\ntail -f /var/log/messages <br />\r\n参数-f使tail不停地去读最新的内容，这样有实时监视的效果 用Ctrl＋c来终止！ <br />\r\n3. 查看文件中间一段，你可以使用sed命令，如： <br />\r\nsed -n \'5,10p\' /etc/passwd <br />\r\n这样你就可以只查看文件的第5行到第10行。 <br />\r\n	</p>\r\n</div>', '1438483739', '1438584943', '828', '1', '未知', '2', 'Linux 查看文件', '1', '0');
INSERT INTO `sxs_article` VALUES ('32', 'admin', 'h', '', '9', 'Apache', ' 一、配置文件 语法 * 主配置文件httpd.conf，更改只有重启服务才会生效 * 配置中一行一个命令，如果要多行一个命令，则最后以\\结束，且与该行最后个字符无其它字符或者空白 * 每行注释以#开头,会被忽略，一行命令符后不能再接注释 * 空行空白字符在配置文件中被忽略 * 配置文件错误检测可以通过 Test Configuration来完成(httpd.exe -w -t -f \"D:\\Software\\GreenSoft\\Apache\\conf\\httpd.conf\" -d \"D:\\Software\\Green', '<p>\r\n	<strong>一、配置文件</strong>\r\n</p>\r\n<p>\r\n	语法\r\n</p>\r\n<p>\r\n	* 主配置文件httpd.conf，更改只有重启服务才会生效<br />\r\n* 配置中一行一个命令，如果要多行一个命令，则最后以\\结束，且与该行最后个字符无其它字符或者空白<br />\r\n* 每行注释以#开头,会被忽略，一行命令符后不能再接注释<br />\r\n* 空行空白字符在配置文件中被忽略<br />\r\n*\r\n 配置文件错误检测可以通过 Test Configuration来完成(httpd.exe -w -t -f \r\n\"D:\\Software\\GreenSoft\\Apache\\conf\\httpd.conf\" -d \r\n\"D:\\Software\\GreenSoft\\Apache\\.\")\r\n</p>\r\n<p>\r\n	<br />\r\n模块\r\n</p>\r\n<p>\r\n	Related Modules		Related Directives<br />\r\n--------------------------------------------<br />\r\nmod_so			&lt;IfModule&gt;<br />\r\nLoadModule\r\n</p>\r\n<p>\r\n	* httpd基于模块化，编译配置时，默认会把基本的功能模块加载到服务器内核。<br />\r\n* 对于动态加载的模块可以通过LoadModule指令在任何时候完成。<br />\r\n* &lt;IfModule&gt;可用于条件加载<br />\r\n* Dos命令 httpd.exe -l 可以查看已经加载的模块\r\n</p>\r\n<p>\r\n	* httpd.exe支持的参数指令\r\n</p>\r\n<p>\r\n	-D name            : define a name for use in &lt;IfDefine name&gt; directives<br />\r\n-d directory       : specify an alternate initial ServerRoot<br />\r\n-f file            : specify an alternate ServerConfigFile<br />\r\n-C \"directive\"     : process directive before reading config files<br />\r\n-c \"directive\"     : process directive after reading config files<br />\r\n-n name            : set service name and use its ServerConfigFile<br />\r\n-k start           : tell Apache to start<br />\r\n-k restart         : tell running Apache to do a graceful restart<br />\r\n-k stop|shutdown   : tell running Apache to shutdown<br />\r\n-k install         : install an Apache service<br />\r\n-k config          : change startup Options of an Apache service<br />\r\n-k uninstall       : uninstall an Apache service<br />\r\n-w                 : hold open the console window on error<br />\r\n-e level           : show startup errors of level (see LogLevel)<br />\r\n-E file            : log startup errors to file<br />\r\n-v                 : show version number<br />\r\n-V                 : show compile settings<br />\r\n-h                 : list available command line options (this page)<br />\r\n-l                 : list compiled in modules<br />\r\n-L                 : list available configuration directives<br />\r\n-t -D DUMP_VHOSTS  : show parsed settings (currently only vhost settings)<br />\r\n-S                 : a synonym for -t -D DUMP_VHOSTS<br />\r\n-t -D DUMP_MODULES : show all loaded modules<br />\r\n-M                 : a synonym for -t -D DUMP_MODULES<br />\r\n-t                 : run syntax check for config files<br />\r\n-T                 : start without DocumentRoot(s) check\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	指令作用范围\r\n</p>\r\n<p>\r\n	<br />\r\nRelated Modules		Related Directives<br />\r\n-----------------------------------------<br />\r\n&lt;Directory&gt;<br />\r\n&lt;DirectoryMatch&gt;<br />\r\n&lt;Files&gt;<br />\r\n&lt;FilesMatch&gt;<br />\r\n&lt;Location&gt;<br />\r\n&lt;LocationMatch&gt;<br />\r\n&lt;VirtualHost&gt;\r\n</p>\r\n<p>\r\n	* 指令范围标签可以指定指令生效的范围，其可以嵌套<br />\r\n* 可以通过在&lt;VirtualHost&gt;标签中放置多个指令以同时支持多个虚拟主机站点<br />\r\n* 节点配置参见：<a href=\"http://httpd.apache.org/docs/2.4/sections.html\">http://httpd.apache.org/docs/2.4/sections.html</a>\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	.htaccess文件\r\n</p>\r\n<p>\r\n	* httpd通过在站点目录里面放置.htaccess文件允许配置分散<br />\r\n* .htaccess的语法与主配置文件一致，对于该配置文件的变更只要请求过来会立即生效<br />\r\n* 可以在.htaccess中放置的指令见：<a href=\"http://httpd.apache.org/docs/2.4/mod/directive-dict.html#Context\">http://httpd.apache.org/docs/2.4/mod/directive-dict.html#Context</a><br />\r\n* 如果有权限配置主配置，则应避免使用.htaccess文件方式来配置，这种方式影响服务器性能<br />\r\n1）配置.htaccess文件后，httpd会查找每个目录的.htaccess文件，不管你实际有没有使用<br />\r\n2）文档被请求的时候，.htaccess文件每次都会被加载\r\n</p>\r\n<p>\r\n	3）httpd会在多层目录中查找.htaccess文件，以应用完整的指令。<br />\r\n4）.htaccess中地址重写指令中的正则表达式在每次请求的时候重新编译。<br />\r\n5）安全问题，用户在修改.htaccess使管理员对配置的管理失控。只有设置AllowOverride指令才可以使用户使用指定的指令。\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<br />\r\n* 在.htaccess中配置指令与在主配置中配置Dirctory块可以达到相同效果，但是后者有更好的性能。\r\n</p>\r\n<p>\r\n	Contents of .htaccess file in /www/htdocs/example<br />\r\nAddType text/example .exm\r\n</p>\r\n<p>\r\n	等价于：\r\n</p>\r\n<p>\r\n	Section from your httpd.conf file\r\n</p>\r\n<p>\r\n	&lt;Directory /www/htdocs/example&gt;<br />\r\nAddType text/example .exm<br />\r\n&lt;/Directory&gt;\r\n</p>\r\n<p>\r\n	<br />\r\n* 禁用.htaccess可以用指令 AllowOverride None\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<strong>二、Apache目录结构</strong>\r\n</p>\r\n<p>\r\n	根目录<br />\r\n|-- bin       程序命令目录<br />\r\n|-- build<br />\r\n|-- cgi-bin<br />\r\n|-- conf      配置文件目录<br />\r\n|-- error<br />\r\n|-- htdocs    编译安装时站点目录<br />\r\n|-- icons<br />\r\n|-- include<br />\r\n|-- lib <br />\r\n|-- logs       默认日志文件存放包括错误日志(error_log)和访问日志（access_log） tail -f access_log可以随时看访问记录， 里面httpd.pid还会记录主进程号<br />\r\n|-- man<br />\r\n|-- manual<br />\r\n|-- modules   模块目录  例如PHP  MEMCACHE编译后的模块在这里面\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	Bin目录<br />\r\n|-- ab                   apache http服务器性能压力测试工具，类似的jmeter  loadrunner  webbench<br />\r\n|-- apachectl            apache的启动命令<br />\r\n|-- apr-1-config<br />\r\n|-- apu-1-config<br />\r\n|-- apxs                 apache服务器编译和安装扩展的工具，在进行DSO方式模块编译时会用到例如编译PHP时就用到：--with-apxs2=/usr/local/apache/bin/apxs<br />\r\n|-- checkgid<br />\r\n|-- dbmmanage<br />\r\n|-- envvars<br />\r\n|-- envvars-std<br />\r\n|-- htcacheclean         清理磁盘缓存区的命令，一般少用<br />\r\n|-- htdbm<br />\r\n|-- htdigest<br />\r\n|-- htpasswd             建立更新基本认证文件  例如配置nagio监控时候会用到<br />\r\n|-- httpd                为apache的控制命令程序，apachectl执行的时候会调用到httpd<br />\r\n|-- httxt2dbm<br />\r\n|-- logresolve\r\n</p>\r\n<p>\r\n	<br />\r\nConf目录<br />\r\n|-- extra                                辅助apache配置文件<br />\r\n|   |-- httpd-autoindex.conf<br />\r\n|   |-- httpd-dav.conf                   dav支持配置<br />\r\n|   |-- httpd-default.conf               apache相关服务配置 如超时时间 保持连接时间<br />\r\n|   |-- httpd-info.conf<br />\r\n|   |-- httpd-languages.conf             语言支持<br />\r\n|   |-- httpd-manual.conf<br />\r\n|   |-- httpd-mpm.conf                    服务器池管理，如apache模式配置 连接等<br />\r\n|   |-- httpd-multilang-errordoc.conf<br />\r\n|   |-- httpd-ssl.conf                    支持SSL加密配置<br />\r\n|   |-- httpd-userdir.conf<br />\r\n|   |-- httpd-vhosts.conf                 虚拟机配置文件<br />\r\n|-- httpd.conf                            主配置文件<br />\r\n|-- magic<br />\r\n|-- mime.types<br />\r\n|-- original\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<strong>三、httpd.conf主配置文件常见配置</strong>\r\n</p>\r\n<p>\r\n	<br />\r\nServerRoot \"/usr/local/apache2.2.22\"   apache安装目录<br />\r\nListen 80                              apache端口 <br />\r\n&lt;IfModule !mpm_netware_module&gt;<br />\r\n&lt;IfModule !mpm_winnt_module&gt;<br />\r\nUser daemon                              apache运行用户<br />\r\nGroup daemon                             apache运行组<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;/IfModule&gt;<br />\r\nServerAdmin you@example.com              管理员邮箱<br />\r\nDocumentRoot \"/usr/local/apache2.2.22/htdocs\"   站点目录，注意最后不要加/线\r\n</p>\r\n<p>\r\n	&lt;Directory /&gt;                            根目录权限<br />\r\nOptions FollowSymLinks               可以使用符号链接<br />\r\nAllowOverride None<br />\r\nOrder deny,allow<br />\r\nDeny from all<br />\r\n&lt;/Directory&gt;<br />\r\n&lt;Directory \"/usr/local/apache2.2.22/htdocs\"&gt; 目录权限 注意Indexes的作用是允许浏览目录<br />\r\nOptions Indexes FollowSymLinks<br />\r\nAllowOverride None                       禁止用户对目录配置文件.htaccess修改，一般为none<br />\r\nOrder allow,deny<br />\r\nAllow from all <br />\r\n&lt;/Directory&gt;\r\n</p>\r\n<p>\r\n	&lt;IfModule dir_module&gt;<br />\r\nDirectoryIndex index.html                 站点目录首页文件多个文件用空格隔开<br />\r\n&lt;/IfModule&gt;\r\n</p>\r\n<p>\r\n	&lt;FilesMatch \"^\\.ht\"&gt;                           防止WEB用户查看以.ht开头的隐藏文件<br />\r\nOrder allow,deny<br />\r\nDeny from all<br />\r\nSatisfy All<br />\r\n&lt;/FilesMatch&gt;\r\n</p>\r\n<p>\r\n	ErrorLog \"logs/error_log\"                        错误日志<br />\r\nLogLevel warn                                    警告级别<br />\r\n&lt;IfModule log_config_module&gt;<br />\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %&gt;s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined 复合日志格式<br />\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %&gt;s %b\" common    常规日志格式<br />\r\n&lt;IfModule logio_module&gt;<br />\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %&gt;s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O\" combinedio  复合日志格式<br />\r\n&lt;/IfModule&gt;<br />\r\nCustomLog \"logs/access_log\" common   默认访问日志格式<br />\r\n&lt;/IfModule&gt;\r\n</p>\r\n<p>\r\n	&lt;IfModule alias_module&gt;<br />\r\nScriptAlias /cgi-bin/ \"/usr/local/apache2.2.22/cgi-bin/\"  CGI别名配置<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;IfModule cgid_module&gt;<br />\r\n&lt;/IfModule&gt;\r\n</p>\r\n<p>\r\n	&lt;Directory \"/usr/local/apache2.2.22/cgi-bin\"&gt;            CGI权限访问路径<br />\r\nAllowOverride None<br />\r\nOptions None<br />\r\nOrder allow,deny<br />\r\nAllow from all<br />\r\n&lt;/Directory&gt;<br />\r\nDefaultType text/plain   定义不能确定MIME类型时候使用默认MIME类型，如果服务主要包含text或HTML ,text/plain是一个好选择\r\n</p>\r\n<p>\r\n	&lt;IfModule mime_module&gt;<br />\r\nTypesConfig conf/mime.types<br />\r\nAddType application/x-compress .Z          允许信息在传输中使用mosaic/x 2.1+解压信息  但不是所有浏览器都支持<br />\r\nAddType application/x-gzip .gz .tgz<br />\r\n&lt;/IfModule&gt;\r\n</p>\r\n<p>\r\n	&lt;IfModule ssl_module&gt;<br />\r\nSSLRandomSeed startup builtin<br />\r\nSSLRandomSeed connect builtin<br />\r\n&lt;/IfModule&gt;\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<strong>四、虚拟主机http_vhost.conf配置文件</strong>\r\n</p>\r\n<p>\r\n	NameVirtuaHost *:80	表示基于名称的虚拟主机  *:80表示监听本机所有IP的80端口上提供HTTP服务，*可以设置为具体IP<br />\r\n&lt;VirtualHost *:80&gt;<br />\r\nserveradmin 管理员邮箱<br />\r\nservername  域名<br />\r\nserveralias 别名        可以设置多个域名指向同一个站点<br />\r\nerrorlog    错误日志<br />\r\ncustomlog   访问日志<br />\r\n&lt;/VirtualHost&gt;\r\n</p>\r\n<p>\r\n	<br />\r\n虚拟主机的配置是局部优先原则，也就是http_vhost.conf配置了，那么就不会从主配置文件http.conf中读取了\r\n</p>\r\n<p>\r\n	<br />\r\n<strong>五、修改Apache默认站点目录</strong>\r\n</p>\r\n<p>\r\n	1、文档路径更改 <br />\r\nDocumentRoot \"D:/Software/GreenSoft/Apache/htdocs\" <br />\r\n改成<br />\r\nDocumentRoot \"E:/wwwroot/Apache\"\r\n</p>\r\n<p>\r\n	2、目录更改<br />\r\n&lt;Directory \"D:/Software/GreenSoft/Apache/htdocs\"&gt;<br />\r\n改成<br />\r\n&lt;Directory \"E:/wwwroot/Apache\"&gt;\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<br />\r\n<strong>六、配置多站点方式</strong>\r\n</p>\r\n<p>\r\n	方式一 拷贝配置文件，安装新服务<br />\r\n1、将httpd.conf复制一个新的文件httpdNew.conf<br />\r\n2、将httpdNew.conf中的侦听端口改成未使用的自定义的端口。 Listen:8111<br />\r\n3、将httpdNew.conf中的网站目录 DocumentRoot \"原绝对路径\" 改成 DocumentRoot \"新绝对路径\"<br />\r\n4、将httpdNew.conf中的权限设置 &lt;Directory  \"原绝对路径\" &gt; 改成 &lt;Directory  \"新绝对路径\" &gt;<br />\r\n5、安装新服务。Dos下进到Apache安装目录下的Bin目录，输入命令 httpd.exe -k install -n \"服务名\" -f \"X:\\Apache安装目录根目录conf\\httpdNew.conf\"<br />\r\n6、启动新服务。输入命令 httpd -k start\r\n</p>\r\n<p>\r\n	<br />\r\n方式二 添加新端口，新虚拟目录的方式<br />\r\n1、httpd.conf在之前侦听端口的基础上，加上新侦听端口 Listen 8333.这样Apache有多个侦听端口<br />\r\n2、httpd.conf中加入虚拟主机支持。加入指令：NameVirtualHost *<br />\r\n3、找到&lt;VirtualHost&gt; definition注释所在位置。加入指令：<br />\r\n&lt;VirtualHost localhost:8333&gt;<br />\r\nServerName localhost<br />\r\nDocumentRoot \"虚拟站点新绝对路径\"<br />\r\n&lt;/VirtualHost&gt;\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	方式三 建立虚拟主机方式<br />\r\n1、修改虚拟主机配置文件 X:\\Apache安装目录根目录conf\\extra\\httpd-vhosts.conf文件.加入配置：<br />\r\n&lt;VirtualHost 127.0.1.1:8222&gt;<br />\r\nDocumentRoot \"虚拟站点新绝对路径\"<br />\r\nServerName url.com<br />\r\nErrorLog \"虚拟站点新绝对路径/error.log\"<br />\r\n&lt;/VirtualHost&gt;\r\n</p>\r\n<p>\r\n	2、修改主配置文件X:\\Apache安装目录根目录conf\\httpd.conf。去掉#Include conf/extra/httpd-vhosts.conf前面的#号<br />\r\n3、修改主配置文件X:\\Apache安装目录根目录conf\\httpd.conf。加目录权限：<br />\r\n&lt;Directory \"虚拟站点新绝对路径\"&gt;<br />\r\nOptions Indexes FollowSymLinks MultiViews ExecCGI<br />\r\nAllowOverride All<br />\r\nOrder allow,deny<br />\r\nAllow from all<br />\r\n&lt;/Directory&gt;<br />\r\n4、重启对应的Apache服务\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<strong>七、配置Apache支持Url重写</strong>\r\n</p>\r\n<p>\r\n	1、加载重写模块。httpd.conf中找到#LoadModule rewrite_module modules/mod_rewrite.so，去掉#号<br />\r\n2、httpd.conf中找到AllowOverride None，改成 AllowOverride All (All表示整台服务器上都支持URL规则重写)<br />\r\n3、httpd.conf加入<br />\r\n&lt;Directory \"站点绝对路径\"&gt;<br />\r\nOptions FollowSymLinks<br />\r\nAllowOverride All<br />\r\n&lt;/Directory&gt;<br />\r\n4、重启Apache服务器并启动服务<br />\r\n5、在URL重写的网站目录下放一个.htaccess文件，文件名是.htaccess。如无此文件或此文件中没定义任何关于URL重写的规则,则重写不会生效。<br />\r\n6、在.htaccess中通过正则表达式映射需要伪静态的页面。URL正则表达式如下：<br />\r\nRewriteEngine on<br />\r\nRewriteRule index.html index.php<br />\r\nRewriteRule (\\d+).html<span class=\"MathJax_Preview\"></span><span id=\"MathJax-Element-1-Frame\" class=\"MathJax\"><span id=\"MathJax-Span-1\" class=\"math\"><span style=\"font-size:126%;\"><span><span id=\"MathJax-Span-2\" class=\"mrow\"><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-3\" class=\"mi\">i</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-4\" class=\"mi\">n</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-5\" class=\"mi\">f<span></span></span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-6\" class=\"mi\">o</span><span style=\"font-family:MathJax_Main;color:red;\" id=\"MathJax-Span-7\" class=\"mtext\">\\.</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-8\" class=\"mi\">p</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-9\" class=\"mi\">h</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-10\" class=\"mi\">p</span><span style=\"font-family:MathJax_Main;color:red;\" id=\"MathJax-Span-11\" class=\"mtext\">\\?</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-12\" class=\"mi\">i</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-13\" class=\"mi\">n</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-14\" class=\"mi\">f<span></span></span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-15\" class=\"mi\">o</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-16\" class=\"mi\">i</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-17\" class=\"mi\">d<span></span></span><span style=\"font-family:MathJax_Main;\" id=\"MathJax-Span-18\" class=\"mo\">=</span></span><span></span></span></span><span style=\"vertical-align:-0.392em;\"></span></span></span>1<br />\r\n效果为：www.abc.cn/info/info.php?infoid=100 映射为 www.abc.cn/info/100.html\r\n</p>\r\n<p>\r\n	<br />\r\n可用于以下用途：<br />\r\n1、http错误的自定义页。格式 ErrorDocument 错误代码 /目录名/名.扩展名<br />\r\nErrorDocument 404 /errors/notfound.html<br />\r\nErrorDocument 401 \"你权限访问该页面!\"\r\n</p>\r\n<p>\r\n	2、拒绝某IP的访问<br />\r\norder allow,deny <br />\r\ndeny from 210.10.56.32 <br />\r\ndeny from 219.5.45. <br />\r\ndeny from www.baidu.com<br />\r\nallow from all\r\n</p>\r\n<p>\r\n	3、保护.htaccess文档<br />\r\n4、Url转向(文档迁移，目录更改，显示友好易记的url）。格式：<br />\r\nRedirect /旧目录/旧文档名 新文档名<br />\r\nRedirect 旧目录 新目录\r\n</p>\r\n<p>\r\n	5、更改默认主页<br />\r\nDirectoryIndex 新的缺省名<br />\r\nDirectoryIndex filename.html index.cgi index.pl default.htm\r\n</p>\r\n<p>\r\n	6、反盗链<br />\r\nRewriteEngine on <br />\r\nRewriteCond %{ HTTP_REFERER } !^<span class=\"MathJax_Preview\"></span><span id=\"MathJax-Element-2-Frame\" class=\"MathJax\"><span id=\"MathJax-Span-19\" class=\"math\"><span style=\"font-size:126%;\"><span><span id=\"MathJax-Span-20\" class=\"mrow\"><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-21\" class=\"mi\">R</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-22\" class=\"mi\">e</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-23\" class=\"mi\">w</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-24\" class=\"mi\">r</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-25\" class=\"mi\">i</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-26\" class=\"mi\">t</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-27\" class=\"mi\">e</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-28\" class=\"mi\">C<span></span></span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-29\" class=\"mi\">o</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-30\" class=\"mi\">n</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-31\" class=\"mi\">d<span></span></span></span><span></span></span></span><span style=\"vertical-align:-0.105em;\"></span></span></span> [NC] <br />\r\nRewriteRule .(gif&amp;line;jpg)<span class=\"MathJax_Preview\"></span><span id=\"MathJax-Element-3-Frame\" class=\"MathJax\"><span id=\"MathJax-Span-32\" class=\"math\"><span id=\"MathJax-Span-33\" class=\"noError\">-&nbsp;[F]&nbsp;&nbsp;RewriteRule&nbsp;.(gif&amp;line;jpg)</span></span></span> http://www.mydomain.com/替代名 [R,L]\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<strong>八、配置反盗链</strong><br />\r\n1、参见 配置Apache支持Url重写 节，配置Apache支持url重写<br />\r\n2、在站点的.htaccess文件中加入<br />\r\nRewriteEngine on<br />\r\n#允许空“HTTP_REFERER”的访问<br />\r\nRewriteCond %{HTTP_REFERER} !^<span class=\"MathJax_Preview\"></span><span id=\"MathJax-Element-4-Frame\" class=\"MathJax\"><span id=\"MathJax-Span-34\" class=\"math\"><span style=\"font-size:126%;\"><span><span id=\"MathJax-Span-35\" class=\"mrow\"><span style=\"font-family:MathJax_Main;\" id=\"MathJax-Span-36\" class=\"mo\">[</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-37\" class=\"mi\">N<span></span></span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-38\" class=\"mi\">C<span></span></span><span style=\"font-family:MathJax_Main;\" id=\"MathJax-Span-39\" class=\"mo\">]</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-40\" class=\"mi\">R</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-41\" class=\"mi\">e</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-42\" class=\"mi\">w</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-43\" class=\"mi\">r</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-44\" class=\"mi\">i</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-45\" class=\"mi\">t</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-46\" class=\"mi\">e</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-47\" class=\"mi\">C<span></span></span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-48\" class=\"mi\">o</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-49\" class=\"mi\">n</span><span style=\"font-family:MathJax_Math;font-style:italic;\" id=\"MathJax-Span-50\" class=\"mi\">d<span></span></span></span><span></span></span></span><span style=\"vertical-align:-0.392em;\"></span></span></span> http://nobing.cn/no.png [R,NC,L]\r\n</p>\r\n<p>\r\n	说明：<br />\r\nR 就是转向的意思<br />\r\nNC 指的是不区分大小写<br />\r\nL 的作用是指明本次转向到此结束，后续的转向不受先前判断语句的影响\r\n</p>\r\n<p>\r\n	多个扩展名用|分隔\r\n</p>\r\n<p>\r\n	&nbsp;\r\n</p>\r\n<p>\r\n	<br />\r\n<strong>九、配置缓存</strong><br />\r\n<br />\r\nLoadModule cache_module modules/mod_cache.so <br />\r\nLoadModule mem_cache_module modules/mod_mem_cache.so <br />\r\n&lt;IfModule mod_cache.c&gt; <br />\r\n#默认缓存有效期(秒)<br />\r\nCacheDefaultExpire 3600 <br />\r\nCacheMaxExpire 86400 <br />\r\nCacheLastModifiedFactor 0.1 <br />\r\n<br />\r\n#禁止缓存某些特定的URL <br />\r\nCacheDisable /local_files <br />\r\n#使用特定的存储类型缓存某些特定的URL <br />\r\nCacheEnable mem /manual <br />\r\nCacheEnable fd /images <br />\r\nCacheEnable disk / <br />\r\n&lt;IfModule mod_mem_cache.c&gt; <br />\r\nCacheEnable mem / <br />\r\nMCacheSize 8192 <br />\r\nMCacheMaxObjectCount 10000 <br />\r\nMCacheMinObjectSize 1 <br />\r\nMCacheMaxObjectSize 51200 <br />\r\n#MCacheRemovalAlgorithm LRU <br />\r\n&lt;/IfModule&gt; <br />\r\n&lt;/IfModule&gt;\r\n</p>\r\n<p>\r\n	本文转载自：http://www.cnblogs.com/janas/archive/2012/08/27/2659230.html\r\n</p>', '1439513403', '1439513403', '767', '1', '未知', '2', 'Apache服务器配置', '1', '0');
INSERT INTO `sxs_article` VALUES ('33', 'admin', 'h', '', '10', 'spring，事件', ' 一、一些概念 事件是可以被控件识别的操作，如按下确定按钮，选择某个单选按钮或者复选框。每一种控件有自己可以识别的事件，如窗体的加载、单击、双击等事件，编辑框(文本框)的文本改变事，等等。事件有系统事件和用户事件。系统事件由系统激发，如时间每隔24小时，银行储户的存款日期增加一天。用户事件由用户激发，如用户点击按钮，在文本框中显示特定的文本。事件', '<h1>\r\n	一、一些概念\r\n</h1>\r\n<p>\r\n	　事件是可以被控件识别的操作，如按下确定按钮，选择某个单选按钮或者复选框。每一种控件有自己可以识别的事件，如窗体的加载、单击、双击等事件，\r\n编辑框(文本框)的文本改变事，等等。事件有系统事件和用户事件。系统事件由系统激发，如时间每隔24小时，银行储户的存款日期增加一天。用户事件由用户\r\n激发，如用户点击按钮，在文本框中显示特定的文本。事件驱动控件执行某项功能。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	&nbsp;触发事件的对象称为事件发送者；接收事件的对象称为事件接收者。\r\n</p>\r\n<p>\r\n	&nbsp;事件模型一般用到了观察者模式，下面简单介绍下：\r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150815/20150815101734_55890.jpg\" alt=\"\" height=\"297\" width=\"586\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		SUBJECT\r\n		<ul>\r\n			<li>\r\n				目标知道它的观察者。可以有任意多个观察者观察同一个目标。\r\n			</li>\r\n			<li>\r\n				提供注册和删除观察者对象的接口。\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		Observer（观察者）\r\n		<ul>\r\n			<li>\r\n				为那些在目标发生改变时需获得通知的对象定义一个更新接口。\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		ConcreteSubject（具体目标）\r\n		<ul>\r\n			<li>\r\n				将有关状态存入各ConcreteObserver对象。\r\n			</li>\r\n			<li>\r\n				当它的状态发生改变时,向它的各个观察者发出通知。\r\n			</li>\r\n		</ul>\r\n	</li>\r\n	<li>\r\n		ConcreteObserver（具体观察者）\r\n		<ul>\r\n			<li>\r\n				维护一个指向ConcreteSubject对象的引用。\r\n			</li>\r\n			<li>\r\n				存储有关状态，这些状态应与目标的状态保持一致。\r\n			</li>\r\n			<li>\r\n				实现Observer的更新接口以使自身状态与目标的状态保持一致。\r\n			</li>\r\n		</ul>\r\n	</li>\r\n</ul>\r\n<h1>\r\n	二、spring事件机制\r\n</h1>\r\n<p>\r\n	首先上图一张：\r\n</p>\r\n<p>\r\n	<img src=\"/Uploads/image/20150815/20150815101826_77430.jpg\" alt=\"\" height=\"619\" width=\"681\" /> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<ul>\r\n	<li>\r\n		ApplicationListener 就是我们的 Observer，需要到容器中注册。他要关心他所关心的ApplicationEvent&nbsp;。一般有如下代码：if (event instanceof BlackListEvent) {}\r\n	</li>\r\n	<li>\r\n		ApplicationEventMulticaster是我们的SUBJECT一个代理。他会管理我们的&nbsp;ApplicationListener&nbsp;。\r\n	</li>\r\n	<li>\r\n		ApplicationEvent 是事件，它就是媒介，充当介质的作用。\r\n	</li>\r\n</ul>\r\n<p>\r\n	在spring中,容器管理所有的 bean。是ApplicationEvent 驱动的，一个ApplicationEvent &nbsp;publish了，观察这个事件的监听者就会送到通知。\r\n</p>\r\n<p>\r\n	<br />\r\n<span style=\"font-family:mceinline;\"></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-family:mceinline;\"><strong><span style=\"font-size:16px;\">下面我们使用spring的事件机制完成特定情况的功能，假设有如下使用场景：</span></strong></span> \r\n</p>\r\n<p>\r\n	<br />\r\n<span style=\"font-family:mceinline;\"><strong><span style=\"font-size:16px;\"></span></strong></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-family:mceinline;\"><span style=\"font-size:16px;\">应用场景：很多时候我们想要在某个类加载完毕时干某件事情，但是使用了spring管理对象，我们这个类引用了其他类（可能是更复杂的关联），所以当我们\r\n去使用这个类做事情时发现包空指针错误，这是因为我们这个类有可能已经初始化完成，但是引用的其他类不一定初始化完成，所以发生了空指针错误，解决方案如\r\n下：</span></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-family:mceinline;\"><span style=\"font-size:16px;\"><br />\r\n</span></span> \r\n</p>\r\n<p>\r\n	<span style=\"font-family:mceinline;\"><span style=\"font-size:16px;\"> 1、写一个类继承spring的ApplicationListener监听，并监控ContextRefreshedEvent事件（容易初始化完成事件）<br />\r\n<br />\r\n2、定义简单的bean：<br />\r\n<br />\r\n或者直接使用@Component(\"BeanDefineConfigue\")注解方式<br />\r\n<br />\r\n<br />\r\n<br />\r\n完整的类如下：<br />\r\n<br />\r\npackage com.creatar.portal.webservice;<br />\r\n<br />\r\nimport org.springframework.context.ApplicationListener;<br />\r\nimport org.springframework.context.event.ContextRefreshedEvent;<br />\r\nimport org.springframework.stereotype.Component;<br />\r\n<br />\r\n@Component(\"BeanDefineConfigue\")<br />\r\npublic class BeanDefineConfigue implements<br />\r\nApplicationListener{//ContextRefreshedEvent为初始化完毕事件，spring还有很多事件可以利用&nbsp;<br />\r\n<br />\r\n@Autowired<br />\r\n&nbsp; private IRoleDao roleDao;<br />\r\n/**<br />\r\n* 当一个ApplicationContext被初始化或刷新触发<br />\r\n*/<br />\r\n@Override<br />\r\npublic void onApplicationEvent(ContextRefreshedEvent event) {<br />\r\n// roleDao.getUserList();//spring容器初始化完毕加载用户列表到内存<br />\r\nSystem.out.println(\"spring容易初始化完毕================================================\");<br />\r\n}<br />\r\n<br />\r\n}<br />\r\n<br />\r\n或者使用xml配置方式（非注解），简单配置个bean即可<br />\r\n&lt;bean id=\"beanDefineConfigue\" class=\"com.creatar.portal.webservice.BeanDefineConfigue\"&gt;&lt;/bean&gt;<br />\r\n<br />\r\n其他定义方式：<br />\r\n<br />\r\n完整的类如下：<br />\r\n<br />\r\npackage com.creatar.portal.webservice;<br />\r\n<br />\r\nimport java.util.ArrayList;<br />\r\nimport java.util.List;<br />\r\n<br />\r\nimport org.springframework.context.ApplicationEvent;<br />\r\nimport org.springframework.context.ApplicationListener;<br />\r\nimport org.springframework.context.event.ContextRefreshedEvent;<br />\r\nimport org.springframework.stereotype.Component;<br />\r\n<br />\r\n@Component(\"BeanDefineConfigue2\")<br />\r\npublic class BeanDefineConfigue2 implements ApplicationListener{<br />\r\n<br />\r\nListlist = new ArrayList();<br />\r\n<br />\r\n/**<br />\r\n* 当一个ApplicationContext被初始化或刷新触发<br />\r\n*/<br />\r\n@Override<br />\r\npublic void onApplicationEvent(ApplicationEvent event) {<br />\r\nif (event instanceof ContextRefreshedEvent) {<br />\r\nSystem.out.println(\"spring容易初始化完毕================================================888\");<br />\r\n}<br />\r\n<br />\r\n}<br />\r\n}<br />\r\n<br />\r\nspring其他事件：<br />\r\n<br />\r\nspring中已经内置的几种事件：<br />\r\n<br />\r\nContextClosedEvent&nbsp;&nbsp; 、ContextRefreshedEvent&nbsp; 、ContextStartedEvent&nbsp; 、ContextStoppedEvent&nbsp;&nbsp; 、RequestHandleEvent<br />\r\n<br />\r\n<span style=\"color:#E53333;\">遇到的问题</span><span style=\"color:red;\">：</span><br />\r\napplicationontext和使用MVC之后的webApplicationontext会两次调用上面的方法，如何区分这个两种容器呢？<br />\r\n<br />\r\n但是这个时候，会存在一个问题，在web 项目中（spring mvc），系统会存在两个容器，一个是root application \r\ncontext ,另一个就是我们自己的 projectName-servlet context（作为root application \r\ncontext的子容器）。<br />\r\n<br />\r\n这种情况下，就会造成onApplicationEvent方法被执行两次。为了避免上面提到的问题，我们可以只在root application context初始化完成后调用逻辑代码，其他的容器的初始化完成，则不做任何处理，修改后代码<br />\r\n<br />\r\n如下：<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; @Override&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void onApplicationEvent(ContextRefreshedEvent event) {&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(event.getApplicationContext().getParent() == null){//<span style=\"color:red;\">root application context 没有parent，他就是老大</span>.&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //需要执行的逻辑代码，当spring容器初始化完成后就会执行该方法。&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </span></span> \r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>', '1439605418', '1439605726', '1015', '1', '未知', '2', 'Spring事件机制之ApplicationListener与ApplicationEvent', '1', '0');
INSERT INTO `sxs_article` VALUES ('34', 'admin', 'h', '', '9', '', 'linux下，使用ln命令创建、删除软链接', '<p>\r\n	创建与删除软链接的方法如下：\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	在linux下，使用<a href=\"http://www.jbxue.com/LINUXjishu/14054.html\" target=\"_blank\" class=\"infotextkey\">ln命令</a>创建、删除软链接。\r\n</p>\r\n<p>\r\n	例如：<br />\r\n<span style=\"color:#0000ff;\">ln -s /home/zhenwx/htccode-v1/ /home/zhenwx/htccode&nbsp;&nbsp; <br />\r\n</span>以上建立/home/zhenwx/htccode-v1 的软连接\r\n</p>\r\n<p>\r\n	<a href=\"http://www.jbxue.com/os/linux/\" target=\"_blank\" class=\"infotextkey\">linux</a>下的软链接类似于windows下的快捷方式。\r\n</p>\r\n<p>\r\n	说明：<br />\r\n<span style=\"color:#0000ff;\">ln -s /home/zhenwx/htccode-v1/&nbsp;&nbsp;&nbsp; /home/zhenwx/htccode <br />\r\n</span>其中/home/zhenwx/htccode-v1/为源文件，/home/zhenwx/htccode 为链接文件名，创建软链接后，进入/home/zhenwx/htccode目录，实际上是链接进入了/home/zhenwx/htccode-v1/目录。\r\n</p>\r\n<p>\r\n	当执行命令：<br />\r\n<span style=\"color:#ff0000;\">cd /home/zhenwx/htccode/时，进入的实际是：/home/zhenwx/htccode-v1/ 目录。</span> \r\n</p>\r\n<p>\r\n	注意：执行<a href=\"http://www.jbxue.com/LINUXjishu/14009.html\" target=\"_blank\" class=\"infotextkey\">cd命令</a>时，/home/zhenwx/htccode-v1/ 目录应已建立，不要创建目录/home/zhenwx/htccode/。\r\n</p>\r\n<p>\r\n	删除软链接，使用如下命令：<br />\r\n<span style=\"color:#0000ff;\">rm -rf&nbsp; /home/zhenwx/htccode <br />\r\n</span><span style=\"color:#ff0000;\">注意，这里不是rm -rf&nbsp; /home/zhenwx/htccode/，最后的目录后面是没有/符号的。</span> \r\n</p>', '1439777944', '1439778949', '782', '1', '未知', '2', 'Linux 创建软链接', '1', '0');
INSERT INTO `sxs_article` VALUES ('35', 'admin', 'h', '', '5', 'mysql', 'mysql 中 \"非数字\"=0 衡为true', '<p>\r\n	mysql 中 \"非数字\"=0 衡为true\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint\">SELECT \"jlkfdsfad\"=0  TRUE\r\n\r\nSELECT \"jlkfdsfad\"=1  FALSE\r\n\r\nSELECT \"131231\"=0   FALSE\r\n\r\nSELECT \"131231\"=131231  true</pre>\r\n<p>\r\n	<br />\r\n</p>', '1440649683', '1440651838', '822', '1', '未知', '2', 'mysql 中 \"非数字\"=0 衡为true', '1', '0');
INSERT INTO `sxs_article` VALUES ('36', 'admin', 'h', '', '1', 'bug', '问题描述：一段代码有个数据库插入数据的操作，这段代码由任务调度框架Quartz在凌晨过五分钟的时候触发调用，问题来了，有一天这段代码执行一次，数据库却有double倍数据插入，由输出的日志可以很确信这段代码在那个时段只执行了一次，为什么会有双倍的数据插入。后来反复做了测试，都没有重现这个问题。如果有大侠可以看到这个问题，并能分享下自己认为有可能的原因，在', '&nbsp;问题描述：一段代码有个数据库插入数据的操作，这段代码由任务调度框架Quartz在凌晨过五分钟的时候触发调用，问题来了，有一天这段代码执行一次，数据库却有double倍数据插入，由输出的日志可以很确信这段代码在那个时段只执行了一次，为什么会有双倍的数据插入。后来反复做了测试，都没有重现这个问题。如果有大侠可以看到这个问题，并能分享下自己认为有可能的原因，在下感激不尽', '1440854389', '1440854389', '794', '1', '未知', '2', '未解问题集之一', '1', '0');
INSERT INTO `sxs_article` VALUES ('37', 'admin', 'h', '', '2', 'html标签', 'java 去除富文本内容的html标签', '<pre class=\"prettyprint lang-java\">    /**\r\n     * 去除富文本内容的html标签\r\n     * @param content\r\n     * @return\r\n     */\r\n    public static String stripHtml(String content) {\r\n        // &lt;p&gt;段落替换为换行\r\n        content = content.replaceAll(\"&lt;p .*?&gt;\", \"\\r\\n\");\r\n        // &lt;br&gt;&lt;br/&gt;替换为换行\r\n        content = content.replaceAll(\"&lt;br\\\\s*/?&gt;\", \"\\r\\n\");\r\n          // 去掉其它的&lt;&gt;之间的东西\r\n        content = content.replaceAll(\"\\\\&lt;.*?&gt;\", \"\");\r\n        return content;\r\n    }</pre>', '1441708642', '1441708642', '1260', '1', '未知', '2', 'java 去除富文本内容的html标签', '1', '0');
INSERT INTO `sxs_article` VALUES ('38', 'admin', 'c', '/Uploads/image/20150929/20150929095750_81030.jpg', '7', 'angular,filter', 'ng的内置过滤器\r\n\r\n　　ng内置了九种过滤器，使用方法都非常简单，看文档即懂。不过为了以后不去翻它的文档，我在这里还是做一个详细的记录。', '<p>\r\n	ng的内置过滤器\r\n</p>\r\n<p>\r\n	　　ng内置了九种过滤器，使用方法都非常简单，看文档即懂。不过为了以后不去翻它的文档，还是做一个详细的记录。\r\n</p>\r\n<p>\r\n	　　1. currency (货币处理)\r\n</p>\r\n<p>\r\n	　　使用currency可以将数字格式化为货币，默认是美元符号，你可以自己传入所需的符号，例如我传入人民币：\r\n</p>\r\n{{num | currency : \'￥\'}}\r\n<p>\r\n	　　2. date (日期格式化)\r\n</p>\r\n<p>\r\n	　　原生的js对日期的格式化能力有限，ng提供的date过滤器基本可以满足一般的格式化要求。用法如下：\r\n</p>\r\n{{date | date : \'yyyy-MM-dd hh:mm:ss EEEE\'}}\r\n<p>\r\n	　参数用来指定所要的格式，y M d h m s E 分别表示 年 月 日 时 分 秒 \r\n星期，你可以自由组合它们。也可以使用不同的个数来限制格式化的位数。另外参数也可以使用特定的描述性字符串，例如“shortTime”将会把时间格式\r\n为12:05 pm这样的。ng提供了八种描述性的字符串，个人觉得这些有点多余，我完全可以根据自己的意愿组合出想要的格式，不愿意去记这么多单词~\r\n</p>\r\n<p>\r\n	　　3. filter(匹配子串)\r\n</p>\r\n<p>\r\n	　这个名叫filter的filter（不得不说这名字起的，真让人容易混淆——！）用来处理一个数组，然后可以过滤出含有某个子串 \r\n的元素，作为一个子数组来返回。可以是字符串数组，也可以是对象数组。如果是对象数组，可以匹配属性的值。它接收一个参数，用来定义子串的匹配规则。下面\r\n 举个例子说明一下参数的用法，我用现在特别火的几个孩子定义了一个数组：\r\n</p>\r\n$scope.childrenArray = [<br />\r\n{name:\'kimi\',age:3},<br />\r\n{name:\'cindy\',age:4},<br />\r\n{name:\'anglar\',age:4},<br />\r\n{name:\'shitou\',age:6},<br />\r\n{name:\'tiantian\',age:5}<br />\r\n];$scope.func = function(e){return e.age&gt;4;}{{ childrenArray | filter : \'a\' }} //匹配属性值中含有a的<br />\r\n{{ childrenArray | filter : 4 }} //匹配属性值中含有4的<br />\r\n{{ childrenArray | filter : {name : \'i\'} }} //参数是对象，匹配name属性中含有i的<br />\r\n{{childrenArray | filter : func }} //参数是函数，指定返回age&gt;4的\r\n<p>\r\n	　　4. json(格式化json对象)\r\n</p>\r\n<p>\r\n	　json过滤器可以把一个js对象格式化为json字符串，没有参数。这东西有什么用呢，我一般也不会在页面上输出一个json串啊，官网说它 \r\n可以用来进行调试，嗯，是个不错的选择。或者，也可以用在js中使用，作用就和我们熟悉的JSON.stringify()一样。用法超级简单：\r\n</p>\r\n{{ jsonTest | json}}\r\n<p>\r\n	　　5. limitTo(限制数组长度或字符串长度)\r\n</p>\r\n<p>\r\n	　　limitTo过滤器用来截取数组或字符串，接收一个参数用来指定截取的长度，如果参数是负值，则从数组尾部开始截取。个人觉得这个filter有点鸡肋，首先只能从数组或字符串的开头/尾部进行截取，其次，js原生的函数就可以代替它了，看看怎么用吧：\r\n</p>\r\n{{ childrenArray | limitTo : 2 }} //将会显示数组中的前两项\r\n<p>\r\n	　　6. lowercase(小写)\r\n</p>\r\n<p>\r\n	　　把数据转化为全部小写。太简单了，不多解释。同样是很鸡肋的一个filter，没有参数，只能把整个字符串变为小写，不能指定字母。怎么用我都懒得写了。\r\n</p>\r\n<p>\r\n	　　7. uppercase(大写)\r\n</p>\r\n<p>\r\n	　　同上。\r\n</p>\r\n<p>\r\n	　　8. number(格式化数字)\r\n</p>\r\n<p>\r\n	　　number过滤器可以为一个数字加上千位分割，像这样，123,456,789。同时接收一个参数，可以指定float类型保留几位小数：\r\n</p>\r\n{{ num | number : 2 }}\r\n<p>\r\n	　　9.&nbsp;orderBy(排序)\r\n</p>\r\n<p>\r\n	　orderBy过滤器可以将一个数组中的元素进行排序，接收一个参数来指定排序规则，参数可以是一个字符串，表示以该属性名称进行排序。可以是 \r\n一个函数，定义排序属性。还可以是一个数组，表示依次按数组中的属性值进行排序（若按第一项比较的值相等，再按第二项比较），还是拿上面的孩子数组举例：\r\n</p>\r\n<div>\r\n	{{ childrenArray | orderBy : \'age\' }}\r\n</div>\r\n//按age属性值进行排序，若是-age，则倒序<br />\r\n<div>\r\n	{{ childrenArray | orderBy : orderFunc }}\r\n</div>\r\n//按照函数的返回值进行排序<br />\r\n<div>\r\n	{{ childrenArray | orderBy : [\'age\',\'name\'] }}\r\n</div>\r\n//如果age相同，按照name进行排序', '1441709124', '1443492277', '1000', '1', '未知', '2', 'angular的内置过滤器', '1', '0');
INSERT INTO `sxs_article` VALUES ('42', 'admin', 'h', 'http://www.sxs.pub/Uploads/image/20150929/20150929095750_81030.jpg', '7', '$resource，angular ', ' 安装 ngResource模块是一个可选的angularjs模块，如果需要使用，我们要单独引用js script type=\"text/javascript\" src=\"/javascripts/angular-resource.js\" 应用$resource 我们并不是直接通过$resource服务本身同服务器通信，$resource是一个创建资源对象的工厂，用来创建同服务端交互的对象。 var User = $resource(\'/api/users/:userId\', {userId:\'@id\'}); 返回的User对象包含了同后端服务进行交互的方法，我们可以把User对象理解成', '<h3 style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;\">\r\n	安装\r\n</h3>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	ngResource模块是一个可选的angularjs模块，如果需要使用，我们要单独引用js\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-js\">&lt;script type=\"text/javascript\" src=\"/javascripts/angular-resource.js\"&gt;</pre>\r\n<h3 style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;\">\r\n	应用$resource\r\n</h3>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	我们并不是直接通过$resource服务本身同服务器通信，$resource是一个创建资源对象的工厂，用来创建同服务端交互的对象。\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	var User = $resource(\'/api/users/:userId\', {userId:\'@id\'});\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	返回的User对象包含了同后端服务进行交互的方法，我们可以把User对象理解成同RESTFul的后端服务进行交互的接口。\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	该对象包含两个get类型的方法已经三个非get类型的方法。\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	User.get({id:\'123\'}, successFn, errorFn);\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	该方法向url发送一个get请求，并期望一个json类型的响应。这里会向/api/users/123发送一个请求，successFn处理请求成功响应，errorFn处理错误。\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	User.query(params, successFn, errorFn)\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	同get()方法使用类似，一般用来请求多条数据。\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	save(params, payload, successFn, errorFn);\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	save方法会发起一个post请求，params参数用来填充url中变量，对象payload会作为请求体进行发送\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	delete(params, payload, successFn,errorFn)\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	delete方法一个DELETE请求，payload作为消息体进行发送\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	remove(params, payload, successFn, errorFn)\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	同delete类似，不同的是remove用来移除多条数据\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	通过$resource生成的对象来同服务器进行交互的时候，我们看可以定义处理成功以及处理失败的函数，这些函数接受的参数不仅仅是简单的对象，而是经\r\n过包装之后的对象，会被添加$save(), $remove(), $delete三个方法，可以直接调用这三个方法来后服务端进行交互。\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-js\">User.get({id:\'123\'}, function(user){\r\n  user.name = \'changeAnotherName\';\r\n  user.$save();\r\n//这里等价于User.save({id:\'123\'},{name:\'changeAnotherName\'})\r\n});</pre>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<h3 style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;\">\r\n	扩展$resource\r\n</h3>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	$resource对常见的五种请求进行封装，我们还可以对$resource进行扩展。\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	这里要扩展$resource我们需要传入第三个参数，该参数是一个对象。\r\n</p>\r\n<p style=\"font-family:\'sans serif\',tahoma,verdana,helvetica;font-size:12px;\">\r\n	<br />\r\n</p>\r\n<pre class=\"prettyprint lang-js\">$resource(\'/api/users\',{},{\r\n  sendEmail:{\r\n    method:\'\',\r\n    url:\'\',\r\n    params:{},\r\n    isArray:boolean,\r\n    transformRequest:函数或者函数数组\r\n    transformResponse:函数或者函数数组\r\n    cache:布尔型或缓存对象\r\n    timeout:数值或promise对象\r\n    withCredentials:布尔类型\r\n    responseType:字符串，用来设置XMLHttpRequestResponseType属性\r\n  }\r\n})</pre>', '1444560589', '1444560589', '808', '1', '未知', '2', 'angular $resource对象', '1', '0');
INSERT INTO `sxs_article` VALUES ('39', 'admin', 'h,c', '/Uploads/image/20150929/20150929095750_81030.jpg', '7', 'angular', 'angular 常用事件', '<h2 id=\"articleHeader0\">\r\n	ngClick\r\n</h2>\r\n<p>\r\n	<strong>适用标签：所有</strong><br />\r\n<strong>触发条件：单击</strong> \r\n</p>\r\n<pre class=\"hljs php\"><span class=\"hljs-comment\">#html</span> \r\n<div class=\"hljs-string\">\r\n	\"LearnCtrl\"&gt;\r\n	<div class=\"hljs-string\">\r\n		\"click()\"&gt;click me\r\n	</div>\r\n\"click()\"&gt;click me\r\n</div>\r\n<span class=\"hljs-comment\">#script</span> angular.module(<span class=\"hljs-string\">\'learnModule\'</span>, [])\r\n\r\n        .controller(<span class=\"hljs-string\">\'LearnCtrl\'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(<span class=\"hljs-variable\">$scope</span>)</span> </span>{ <span class=\"hljs-variable\">$scope</span>.click = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> </span>{\r\n                alert(<span class=\"hljs-string\">\'click\'</span>);\r\n            }\r\n        });</pre>\r\n<h2 id=\"articleHeader1\">\r\n	ngDblclick\r\n</h2>\r\n<p>\r\n	<strong>适用标签：所有</strong><br />\r\n<strong>触发条件：双击</strong> \r\n</p>\r\n<pre class=\"hljs php\"><span class=\"hljs-comment\">#html</span> \r\n<div class=\"hljs-string\">\r\n	\"LearnCtrl\"&gt;\r\n	<div class=\"hljs-string\">\r\n		\"dblclick()\"&gt;click me\r\n	</div>\r\n\"dblclick()\"&gt;click me\r\n</div>\r\n<span class=\"hljs-comment\">#script</span> angular.module(<span class=\"hljs-string\">\'learnModule\'</span>, [])\r\n\r\n        .controller(<span class=\"hljs-string\">\'LearnCtrl\'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(<span class=\"hljs-variable\">$scope</span>)</span> </span>{ <span class=\"hljs-variable\">$scope</span>.dblclick = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> </span>{\r\n                alert(<span class=\"hljs-string\">\'click\'</span>);\r\n            }\r\n        });</pre>\r\n<h2 id=\"articleHeader2\">\r\n	ngBlur\r\n</h2>\r\n<p>\r\n	<strong>适用标签：</strong> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<strong>a</strong> \r\n	</li>\r\n	<li>\r\n		<strong>input</strong> \r\n	</li>\r\n	<li>\r\n		<strong>select</strong> \r\n	</li>\r\n	<li>\r\n		<strong>textarea</strong> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<strong>触发条件：失去焦点</strong> \r\n</p>\r\n<pre class=\"hljs xml\">#html <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">div</span> <span class=\"hljs-attribute\">ng-controller</span>=<span class=\"hljs-value\">\"LearnCtrl\"</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">a</span> <span class=\"hljs-attribute\">href</span>=<span class=\"hljs-value\">\"\"</span> <span class=\"hljs-attribute\">ng-blur</span>=<span class=\"hljs-value\">\"blur()\"</span>&gt;</span>link<span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->a</span>&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">input</span> <span class=\"hljs-attribute\">type</span>=<span class=\"hljs-value\">\"text\"</span> <span class=\"hljs-attribute\">ng-blur</span>=<span class=\"hljs-value\">\"blur()\"</span>/&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">textarea</span> <span class=\"hljs-attribute\">cols</span>=<span class=\"hljs-value\">\"30\"</span> <span class=\"hljs-attribute\">rows</span>=<span class=\"hljs-value\">\"10\"</span> <span class=\"hljs-attribute\">ng-blur</span>=<span class=\"hljs-value\">\"blur()\"</span>&gt;</span><span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->textarea</span>&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">select</span> <span class=\"hljs-attribute\">ng-blur</span>=<span class=\"hljs-value\">\"blur()\"</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">option</span>&gt;</span>----<span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->option</span>&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">option</span>&gt;</span>jacky<span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->option</span>&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">option</span>&gt;</span>rose<span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->option</span>&gt; <span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->select</span>&gt; <span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->div</span>&gt; #script\r\nangular.module(\'learnModule\', [])\r\n\r\n        .controller(\'LearnCtrl\', function ($scope) {\r\n            $scope.blur = function () {\r\n                alert(\'blur\');\r\n            }\r\n        });</pre>\r\n<h2 id=\"articleHeader3\">\r\n	ngFocus\r\n</h2>\r\n<p>\r\n	<strong>适用标签：</strong> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<strong>a</strong> \r\n	</li>\r\n	<li>\r\n		<strong>input</strong> \r\n	</li>\r\n	<li>\r\n		<strong>select</strong> \r\n	</li>\r\n	<li>\r\n		<strong>textarea</strong> \r\n	</li>\r\n</ul>\r\n<p>\r\n	<strong>触发条件：获取焦点</strong> \r\n</p>\r\n<pre class=\"hljs xml\">#html <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">div</span> <span class=\"hljs-attribute\">ng-controller</span>=<span class=\"hljs-value\">\"LearnCtrl\"</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">a</span> <span class=\"hljs-attribute\">href</span>=<span class=\"hljs-value\">\"\"</span> <span class=\"hljs-attribute\">ng-focus</span>=<span class=\"hljs-value\">\"focus()\"</span>&gt;</span>link<span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->a</span>&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">input</span> <span class=\"hljs-attribute\">type</span>=<span class=\"hljs-value\">\"text\"</span> <span class=\"hljs-attribute\">ng-focus</span>=<span class=\"hljs-value\">\"focus()\"</span>/&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">textarea</span> <span class=\"hljs-attribute\">cols</span>=<span class=\"hljs-value\">\"30\"</span> <span class=\"hljs-attribute\">rows</span>=<span class=\"hljs-value\">\"10\"</span> <span class=\"hljs-attribute\">ng-focus</span>=<span class=\"hljs-value\">\"focus()\"</span>&gt;</span><span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->textarea</span>&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">select</span> <span class=\"hljs-attribute\">ng-focus</span>=<span class=\"hljs-value\">\"focus()\"</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">option</span>&gt;</span>----<span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->option</span>&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">option</span>&gt;</span>jacky<span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->option</span>&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">option</span>&gt;</span>rose<span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->option</span>&gt; <span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->select</span>&gt; <span class=\"hljs-tag\"><!--<span class=\"hljs-title\"-->div</span>&gt; #script\r\nangular.module(\'learnModule\', [])\r\n\r\n        .controller(\'LearnCtrl\', function ($scope) {\r\n            $scope.focus= function () {\r\n                alert(\'focus\');\r\n            }\r\n        });</pre>\r\n<h2 id=\"articleHeader4\">\r\n	ngChange\r\n</h2>\r\n<p>\r\n	<strong>适用标签：input</strong><br />\r\n<strong>触发条件：model更新</strong> \r\n</p>\r\n<p>\r\n	输入框的内容改变并不代表model的值更新。按我的理解，一般当两个状态互相切换时，model值会更新。两个状态我称之为合法状态和不合法状态。\r\n</p>\r\n<p>\r\n	不合法的状态：输入的内容不符合type类型，如email类型。输入的内容不符合校验条件，如ngMinlength。不合法的状态下，<strong>model会被更新成undefined</strong>。\r\n</p>\r\n<p>\r\n	合法的状态：输入的内容是符合类型和校验条件的。\r\n</p>\r\n<pre class=\"hljs php\"><span class=\"hljs-comment\">#html</span> \r\n<div class=\"hljs-string\">\r\n	\"LearnCtrl\"&gt;\"text\" ng-model=<span class=\"hljs-string\">\"text\"</span> ng-change=<span class=\"hljs-string\">\"change()\"</span> ng-minlength=<span class=\"hljs-string\">\"5\"</span>/&gt;\r\n</div>\r\n<span class=\"hljs-comment\">#script</span> angular.module(<span class=\"hljs-string\">\'learnModule\'</span>, [])\r\n\r\n        .controller(<span class=\"hljs-string\">\'LearnCtrl\'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(<span class=\"hljs-variable\">$scope</span>)</span> </span>{ <span class=\"hljs-comment\">//$scope.text=\'\';</span> <span class=\"hljs-variable\">$scope</span>.change = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">()</span> </span>{\r\n                alert(<span class=\"hljs-string\">\'change\'</span>);\r\n            }            \r\n        });</pre>\r\n<p>\r\n	初始化和不初始化text的条件下，change触发是不一样的哦，这里涉及到model初始化和更新机制。\r\n</p>\r\n<h2 id=\"articleHeader5\">\r\n	ngCopy\r\n</h2>\r\n<p>\r\n	<strong>适用标签：</strong> \r\n</p>\r\n<ul>\r\n	<li>\r\n		<strong>a</strong> \r\n	</li>\r\n	<li>\r\n		<strong>input</strong> \r\n	</li>\r\n	<li>\r\n		<strong>select</strong> \r\n	</li>\r\n	<li>\r\n		<strong>textarea</strong> \r\n	</li>\r\n</ul>\r\n<p>\r\n	官方api上说使用的标签是这些，我没明白a和select复制有啥子用。另外，我换个div实际上也能触发copy事件。一般常用的就是input和textarea。\r\n</p>\r\n<p>\r\n	<strong>触发条件：复制。鼠标右键复制和快捷键Ctrl+C都会触发。</strong> \r\n</p>\r\n<pre class=\"hljs php\"><span class=\"hljs-comment\">#html</span> \r\n<div class=\"hljs-string\">\r\n	\"LearnCtrl\"&gt;\"text\" ng-copy=<span class=\"hljs-string\">\"copy()\"</span>/&gt;\"30\"&lt;/span&gt; rows=&lt;span class=\"hljs-string\"&gt;\"10\"&lt;/span&gt; ng-copy=&lt;span class=\"hljs-string\"&gt;\"copy()\"&lt;/span&gt;&gt;&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.copy = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-string\"&gt;\'copy\'&lt;/span&gt;);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader6\"&gt;ngCut&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：&lt;/strong&gt; &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;input&lt;/strong&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;select&lt;/strong&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;textarea&lt;/strong&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;触发条件：剪切。鼠标右键剪切和快捷键Ctrl+X都会触发。&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;input type=&lt;span class=\"hljs-string\"&gt;\"text\"&lt;/span&gt; ng-cut=&lt;span class=\"hljs-string\"&gt;\"cut()\"&lt;/span&gt;/&gt;\r\n    &lt;textarea cols=&lt;span class=\"hljs-string\"&gt;\"30\"&lt;/span&gt; rows=&lt;span class=\"hljs-string\"&gt;\"10\"&lt;/span&gt; ng-cut=&lt;span class=\"hljs-string\"&gt;\"cut()\"&lt;/span&gt;&gt;&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.cut = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-string\"&gt;\'cut\'&lt;/span&gt;);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader7\"&gt;ngPaste&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：&lt;/strong&gt; &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;input&lt;/strong&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;select&lt;/strong&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;textarea&lt;/strong&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;触发条件：粘贴。鼠标右键粘贴和快捷键Ctrl+V都会触发。&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;input type=&lt;span class=\"hljs-string\"&gt;\"text\"&lt;/span&gt; ng-paste=&lt;span class=\"hljs-string\"&gt;\"paste()\"&lt;/span&gt;/&gt;\r\n    &lt;textarea cols=&lt;span class=\"hljs-string\"&gt;\"30\"&lt;/span&gt; rows=&lt;span class=\"hljs-string\"&gt;\"10\"&lt;/span&gt; ng-paste=&lt;span class=\"hljs-string\"&gt;\"paste()\"&lt;/span&gt;&gt;&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.paste = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-string\"&gt;\'paste\'&lt;/span&gt;);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader8\"&gt;ngKeydown&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：所有&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;个人感觉还是input和textarea比较常用&lt;/p&gt;&lt;p&gt;&lt;strong&gt;触发条件：键盘按键按下&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;要把$event传过去，一般都是要判断按了哪个按键的。&lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;input type=&lt;span class=\"hljs-string\"&gt;\"text\"&lt;/span&gt; ng-keydown=&lt;span class=\"hljs-string\"&gt;\"keydown($event)\"&lt;/span&gt;/&gt;\r\n    &lt;textarea cols=&lt;span class=\"hljs-string\"&gt;\"30\"&lt;/span&gt; rows=&lt;span class=\"hljs-string\"&gt;\"10\"&lt;/span&gt; ng-keydown=&lt;span class=\"hljs-string\"&gt;\"keydown($event)\"&lt;/span&gt;&gt;&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.keydown = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;.keyCode);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader9\"&gt;ngKeyup&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：所有&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;个人感觉还是input和textarea比较常用&lt;/p&gt;&lt;p&gt;&lt;strong&gt;触发条件：键盘按键按下并松开&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;input type=&lt;span class=\"hljs-string\"&gt;\"text\"&lt;/span&gt; ng-keyup=&lt;span class=\"hljs-string\"&gt;\"keyup($event)\"&lt;/span&gt;/&gt;\r\n    &lt;textarea cols=&lt;span class=\"hljs-string\"&gt;\"30\"&lt;/span&gt; rows=&lt;span class=\"hljs-string\"&gt;\"10\"&lt;/span&gt; ng-keyup=&lt;span class=\"hljs-string\"&gt;\"keyup($event)\"&lt;/span&gt;&gt;&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.keyup = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;.keyCode);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader10\"&gt;ngKeypress&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：所有&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;个人感觉还是input和textarea比较常用&lt;/p&gt;&lt;p&gt;&lt;strong&gt;触发条件：键盘按键按下&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;input type=&lt;span class=\"hljs-string\"&gt;\"text\"&lt;/span&gt; ng-keypress=&lt;span class=\"hljs-string\"&gt;\"keypress($event)\"&lt;/span&gt;/&gt;\r\n    &lt;textarea cols=&lt;span class=\"hljs-string\"&gt;\"30\"&lt;/span&gt; rows=&lt;span class=\"hljs-string\"&gt;\"10\"&lt;/span&gt; ng-keypress=&lt;span class=\"hljs-string\"&gt;\"keypress($event)\"&lt;/span&gt;&gt;&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.keypress = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;.keyCode);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader11\"&gt;keydown，keypress，keydown三者区别&lt;/h2&gt;&lt;h3 id=\"articleHeader12\"&gt;引发事件的按键&lt;/h3&gt;&lt;p&gt;非字符键不会引发 KeyPress 事件，但非字符键却可以引发 KeyDown 和 KeyUp 事件。&lt;/p&gt;&lt;h3 id=\"articleHeader13\"&gt;事件引发的时间&lt;/h3&gt;&lt;p&gt;KeyDown 和 KeyPress 事件在按下键时发生，KeyUp 事件在释放键时发生。&lt;/p&gt;&lt;h3 id=\"articleHeader14\"&gt;事件发生的顺序&lt;/h3&gt;&lt;p&gt;KeyDown -&gt; KeyPress -&gt; KeyUp。如果按一个键很久才松开，发生的事件为：KeyDown -&gt; \r\nKeyPress -&gt; KeyDown -&gt; KeyPress -&gt; KeyDown -&gt; KeyPress -&gt;\r\n ... -&gt; KeyUp。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;KeyDown触发后，不一定触发KeyUp，当KeyDown 按下后，拖动鼠标，那么将不会触发KeyUp事件。&lt;/li&gt;&lt;li&gt;KeyPress主要用来捕获数字(注意：包括Shift+数字的符号)、字母（注意：包括大小写）、小键盘等除了F1-12、SHIFT、\r\nAlt、Ctrl、Insert、Home、PgUp、Delete、End、PgDn、ScrollLock、Pause、NumLock、{菜单\r\n键}、{开始键}和方向键外的ANSI字符。&lt;/li&gt;&lt;li&gt;KeyDown 和KeyUp 通常可以捕获键盘除了PrScrn所有按键(这里不讨论特殊键盘的特殊键）。&lt;/li&gt;&lt;li&gt;KeyPress 只能捕获单个字符。&lt;/li&gt;&lt;li&gt;KeyDown 和KeyUp 可以捕获组合键。&lt;/li&gt;&lt;li&gt;KeyPress 可以捕获单个字符的大小写。&lt;/li&gt;&lt;li&gt;KeyDown和KeyUp 对于单个字符捕获的KeyValue 都是一个值，也就是不能判断单个字符的大小写。&lt;/li&gt;&lt;li&gt;KeyPress 不区分小键盘和主键盘的数字字符。&lt;/li&gt;&lt;li&gt;KeyDown 和KeyUp 区分小键盘和主键盘的数字字符。&lt;/li&gt;&lt;li&gt;其中PrScrn 按键KeyPress、KeyDown和KeyUp 都不能捕获。&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=\"articleHeader15\"&gt;ngMousedown&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：所有&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;触发条件：鼠标按下，左右中间按下都会触发&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;button ng-mousedown=&lt;span class=\"hljs-string\"&gt;\"mousedown($event)\"&lt;/span&gt;&gt;button&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.mousedown = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;.which);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader16\"&gt;ngMouseup&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：所有&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;触发条件：鼠标按下弹起，左右中间按下弹起都会触发&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;button ng-mouseup=&lt;span class=\"hljs-string\"&gt;\"mouseup($event)\"&lt;/span&gt;&gt;button&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.mouseup = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-variable\"&gt;$event&lt;/span&gt;.which);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader17\"&gt;ngMouseenter&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：所有&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;触发条件：鼠标进入&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;button ng-mouseenter=&lt;span class=\"hljs-string\"&gt;\"mouseenter()\"&lt;/span&gt;&gt;button&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.mouseenter = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-string\"&gt;\'mouseenter\'&lt;/span&gt;);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader18\"&gt;ngMouseleave&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：所有&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;触发条件：鼠标离开&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;button ng-mouseleave=&lt;span class=\"hljs-string\"&gt;\"mouseleave()\"&lt;/span&gt;&gt;button&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.mouseleave = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-string\"&gt;\'mouseleave\'&lt;/span&gt;);\r\n            }\r\n        });&lt;/pre&gt;\r\n&lt;h2 id=\"articleHeader19\"&gt;ngMousemove&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;适用标签：所有&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;触发条件：鼠标移动&lt;/strong&gt; &lt;/p&gt;\r\n&lt;pre class=\"hljs php\"&gt;&lt;span class=\"hljs-comment\"&gt;#html&lt;/span&gt; &lt;div ng-controller=&lt;span class=\"hljs-string\"&gt;\"LearnCtrl\"&lt;/span&gt;&gt;\r\n    &lt;button ng-mousemove=&lt;span class=\"hljs-string\"&gt;\"mousemove()\"&lt;/span&gt;&gt;button&lt;/div&gt;&lt;span class=\"hljs-comment\"&gt;#script&lt;/span&gt; angular.module(&lt;span class=\"hljs-string\"&gt;\'learnModule\'&lt;/span&gt;, [])\r\n\r\n        .controller(&lt;span class=\"hljs-string\"&gt;\'LearnCtrl\'&lt;/span&gt;, &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-variable\"&gt;$scope&lt;/span&gt;.mousemove = &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\r\n                alert(&lt;span class=\"hljs-string\"&gt;\'mousemove\'&lt;/span&gt;);\r\n            }\r\n        });&lt;/pre&gt;\r\n</div>\r\n</pre>', '1441770151', '1443492178', '1375', '1', '未知', '2', 'angular 常用事件', '1', '0');
INSERT INTO `sxs_article` VALUES ('31', 'admin', '', '', '9', 'Xshell,sftp,war,Linux', ' 1、get 从远程服务器上下载一个文件存放到本地，如下： 先通过lcd切换到本地那个目录下，然后通过get file lcd d:\\ //表示切换到本地的d盘下 get ./test.sql //这样就将当前文件下载本地的d盘下 2、put 是将本地的文件上传到远程服务器上，如下： put //在windows下弹出选择文件的窗口 3、lcd 先通过lcd切换到本地那个目录下 lcd d:\\ //表示切换到本地的d盘下 4、lls 显示当前目录下的所有文件 5、pwd ', '<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	1、get\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	从远程服务器上下载一个文件存放到本地，如下：\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	先通过lcd切换到本地那个目录下，然后通过get file\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	&gt;&gt; lcd d:\\ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //表示切换到本地的d盘下\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	&gt;&gt; get ./test.sql　　//这样就将当前文件下载本地的d盘下\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	2、put\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	是将本地的文件上传到远程服务器上，如下：\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	&gt;&gt; &nbsp;put &nbsp; &nbsp; &nbsp; &nbsp;//在windows下弹出选择文件的窗口\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	3、lcd\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	先通过lcd切换到本地那个目录下\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	&gt;&gt; lcd d:\\ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //表示切换到本地的d盘下\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	4、lls\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	显示当前目录下的所有文件\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	5、pwd\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	显示当前目录\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	<br />\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	附，war包解析命令：jar -xvf XXX.war 解压在当前文件夹\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	<br />\r\n</p>\r\n<p>\r\n	jar 命令详解 &nbsp;\r\n</p>\r\n<p>\r\n	使用不带任何的 jar 命令我们可以看到 jar 命令的用法如下：\r\n</p>\r\n<p>\r\n	jar {ctxu}[vfm0M] [jar-文件] [manifest-文件] [-C目录] 文件名 ...\r\n</p>\r\n<p>\r\n	其中 {ctxu} 是 jar 命令的子命令，每次 jar命令只能包含 ctxu 中的一个，它们分别表示：\r\n</p>\r\n<p>\r\n	-c　创建新的 JAR文件包\r\n</p>\r\n<p>\r\n	-t　列出 JAR文件包的内容列表\r\n</p>\r\n<p>\r\n	-x　展开 JAR文件包的指定文件或者所有文件\r\n</p>\r\n<p>\r\n	-u　更新已存在的 JAR文件包 (添加文件到 JAR文件包中)\r\n</p>\r\n<p>\r\n	特别注意，在参数的下达中， c/x/t/u仅能存在一个！不可同时存在！\r\n</p>\r\n<p>\r\n	因为不可能同时压缩与解压缩。\r\n</p>\r\n<p>\r\n	-z ：是否同时具有 gzip的属性？亦即是否需要用 gzip 压缩？\r\n</p>\r\n<p>\r\n	-j ：是否同时具有 bzip2的属性？亦即是否需要用 bzip2 压缩？\r\n</p>\r\n<p>\r\n	-v ：压缩的过程中显示文件！这个常用，但不建议用在背景执行过程！\r\n</p>\r\n<p>\r\n	-f　指定 JAR文件名，通常这个参数是必须的\r\n</p>\r\n<p>\r\n	请留意，在 f 之后要立即接档名喔！不要再加参数！\r\n</p>\r\n<p>\r\n	　　　例如使用『 tar -zcvfP tfile sfile』就是错误的写法，要写成\r\n</p>\r\n<p>\r\n	　　　『 tar -zcvPf tfile sfile』才对喔！\r\n</p>\r\n<p>\r\n	-p ：使用原文件的原来属性（属性不会依据使用者而变）\r\n</p>\r\n<p>\r\n	-P ：可以使用绝对路径来压缩！\r\n</p>\r\n<p>\r\n	-N ：比后面接的日期(yyyy/mm/dd)还要新的才会被打包进新建的文件中！\r\n</p>\r\n<p>\r\n	–exclude FILE：在压缩的过程中，不要将 FILE打包！\r\n</p>\r\n<p>\r\n	-m　指定需要包含的 MANIFEST清单文件\r\n</p>\r\n<p>\r\n	-0　只存储，不压缩，这样产生的 JAR文件包会比不用该参数产生的体积大，但速度更快\r\n</p>\r\n<p>\r\n	-M　不产生所有项的清单（MANIFEST〕文件，此参数会忽略 -m参数\r\n</p>\r\n<p>\r\n	[jar-文件]即需要生成、查看、更新或者解开的 JAR 文件包，它是 -f参数的附属参数\r\n</p>\r\n<p>\r\n	[manifest-文件]即 MANIFEST 清单文件，它是 -m参数的附属参数\r\n</p>\r\n<p>\r\n	[-C 目录]表示转到指定目录下去执行这个 jar 命令的操作。它相当于先使用 cd命令转该目录下再执行不带 -C 参数的 jar命令，它只能在创建和更新 JAR 文件包的时候可用。　　\r\n</p>\r\n<p>\r\n	文件名 ... 指定一个文件/目录列表，这些文件/目录就是要添加到 JAR文件包中的文件/目录。如果指定了目录，那么 jar命令打包的时候会自动把该目录中的所有文件和子目录打入包中。\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p style=\"margin-left:auto;color:#333333;font-family:verdana, Arial, Helvetica, sans-serif;\">\r\n	<br />\r\n</p>', '1438573590', '1438575033', '1779', '1', '未知', '2', 'Xshell 下sftp文件传输命令集及war包解析命令', '1', '0');
INSERT INTO `sxs_article` VALUES ('40', 'admin', 'c', '', '2', 'quartz', ' Quartz定时任务时间格式配置说明', '<p class=\"MsoNormal\" style=\"text-indent:-18pt;\">\r\n	<span style=\"font-family:宋体;\"><span><span style=\"font-size:small;\">1、</span><span>&nbsp; </span></span></span><span style=\"font-size:small;\"><span style=\"font-family:宋体;\"><span>&nbsp;</span>CronTrigger</span><span style=\"font-family:宋体;\">时间格式配置说明 </span></span> \r\n</p>\r\n<p style=\"text-indent:21.1pt;\">\r\n	<span style=\"font-family:宋体;\"><strong><span style=\"font-size:10.5pt;\">CronTrigger</span></strong><strong><span style=\"font-size:10.5pt;\">配置格式</span></strong><span style=\"font-size:10.5pt;\">:</span></span> \r\n</p>\r\n<p style=\"text-indent:21pt;\">\r\n	<span style=\"font-size:10.5pt;\"><span style=\"font-family:宋体;\">格式<span>: [</span>秒<span>] [</span>分<span>] [</span>小时<span>] [</span>日<span>] [</span>月<span>] [</span>周<span>] [</span>年<span>]</span></span></span> \r\n</p>\r\n<p style=\"text-indent:21pt;\">\r\n	<span style=\"font-size:10.5pt;\"><span style=\"font-family:宋体;\"><span> </span></span></span> \r\n</p>\r\n<table class=\"MsoNormalTable ke-zeroborder\" style=\"margin:auto auto auto 1.5pt;width:506px;\" border=\"0\" cellpadding=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"47\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">序号<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"58\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">说明<span> </span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"94\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">是否必填<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"166\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">允许填写的值<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"129\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">允许的通配符<span> </span></span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"47\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">1</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"58\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">秒<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"94\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">是<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"166\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">0-59&nbsp; </span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"129\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">, - * /</span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"47\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">2</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"58\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">分<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"94\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">是<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"166\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">0-59 </span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"129\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">, - * /</span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"47\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">3</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"58\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">小时<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"94\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">是<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"166\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">0-23</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"129\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">, - * /</span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"47\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">4</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"58\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">日<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"94\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">是<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"166\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">1-31</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"129\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">, - * ? / L W</span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"47\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">5</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"58\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">月<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"94\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">是<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"166\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">1-12 or JAN-DEC</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"129\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">, - * /</span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"47\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">6</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"58\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">周<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"94\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">是<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"166\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">1-7 or SUN-SAT</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"129\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">, - * ? / L # </span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"47\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">7</span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"58\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">年<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"94\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">否<span></span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"166\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-size:small;\"><span style=\"font-family:宋体;\">empty </span><span style=\"font-family:宋体;\">或<span> 1970-2099</span></span></span> \r\n				</p>\r\n			</td>\r\n			<td style=\"background-color:transparent;border:#e2e2e2;\" width=\"129\">\r\n				<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n					<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">, - * / </span></span> \r\n				</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"text-indent:21pt;\">\r\n	<span style=\"font-size:10.5pt;\"><span style=\"font-family:宋体;\"></span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:21.1pt;text-align:left;\" align=\"left\">\r\n	<span style=\"font-size:small;\"><strong><span style=\"font-family:宋体;\">通配符说明</span></strong><span style=\"font-family:宋体;\">:</span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n	<strong><span style=\"color:red;font-family:宋体;\"><span style=\"font-size:small;\">* </span></span></strong><span style=\"font-family:宋体;\"><span style=\"font-size:small;\">：表示所有值<span>. </span>例如<span>:</span>在分的字段上设置<span> \"*\",</span>表示每一分钟都会触发。</span><span><br />\r\n<span style=\"font-size:small;\"><strong><span style=\"color:red;\">?</span></strong> </span></span><span style=\"font-size:small;\">：表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如<span>:</span>要在每月的<span>10</span>号触发一个操作，但不关心是周几，所以需要周位置的那个字段设置为<span>\"?\" </span>具体设置为</span><span style=\"font-size:small;\"><span> 0 0 0 10 <span style=\"color:red;\">*</span> ?<br />\r\n<strong><span style=\"color:red;\">-</span></strong> </span>：表示区间。例如 在小时上设置<span> \"10-12\",</span>表示<span> 10,11,12</span>点都会触发。</span><span><br />\r\n<span style=\"font-size:small;\"><strong><span style=\"color:red;\">,</span></strong> </span></span><span style=\"font-size:small;\">：表示指定多个值，例如在周字段上设置<span> \"MON,WED,FRI\" </span>表示周一，周三和周五触发</span><span><br />\r\n<strong><span style=\"color:red;\"><span style=\"font-size:small;\">/ </span></span></strong></span><span style=\"font-size:small;\">：用于递增触发。如在秒上面设置<span>\"5/15\" </span>表示从<span>5</span>秒开始，每增<span>15</span>秒触发<span>(5,20,35,50)</span>。 在月字段上设置<span>\'1/3\'</span>所示每月<span>1</span>号开始，每隔三天触发一次。</span><span><br />\r\n<span style=\"font-size:small;\"><strong><span style=\"color:red;\">L</span></strong> </span></span><span style=\"font-size:small;\">：表示最后的意思。在日字段设置上，表示当月的最后一天<span>(</span>依据当前月份，如果是二月还会依据是否是润年<span>[leap]), </span>在周字段上表示星期六，相当于<span>\"7\"</span>或<span>\"SAT\"</span>。如果在<span>\"L\"</span>前加上数字，则表示该数据的最后一个。</span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:25.7pt;text-align:left;\" align=\"left\">\r\n	<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">例如在周字段上设置<span>\"6L\"</span>这样的格式<span>,</span>则表示<span>“</span>本月最后一个星期五<span>\" </span></span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n	<span style=\"font-size:small;\"><strong><span style=\"color:red;font-family:宋体;\">W</span></strong><span style=\"font-family:宋体;\"> </span><span style=\"font-family:宋体;\">：表示离指定日期的最近那个工作日<span>(</span>周一至周五<span>). </span>例如在日字段上设置<span>\"15W\"</span>，表示离每月<span>15</span>号最近的那个工作日触发。如果<span>15</span>号正好是周六，则找最近的周五<span>(14</span>号<span>)</span>触发<span>, </span>如果<span>15</span>号是周未，则找最近的下周一<span>(16</span>号<span>)</span>触发<span>.</span>如果<span>15</span>号正好在工作日<span>(</span>周一至周五<span>)</span>，则就在该天触发。如果指定格式为<span> \"1W\",</span>它则表示每月<span>1</span>号往后最近的工作日触发。如果<span>1</span>号正是周六，则将在<span>3</span>号下周一触发。<span>(</span>注，<span>\"W\"</span>前只能设置具体的数字<span>,</span>不允许区间<span>\"-\").</span></span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:21pt;text-align:left;\" align=\"left\">\r\n	<span style=\"font-size:small;\"><span style=\"font-family:宋体;\">\'L\'</span><span style=\"font-family:宋体;\">和<span> \'W\'</span>可以一组合使用。如果在日字段上设置<span>\"LW\",</span>则表示在本月的最后一个工作日触发<span> </span></span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:21pt;text-align:left;\" align=\"left\">\r\n	<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">&nbsp;</span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-align:left;\" align=\"left\">\r\n	<span style=\"font-size:small;\"><strong><span style=\"color:red;font-family:宋体;\">#</span></strong><span style=\"font-family:宋体;\"> </span><span style=\"font-family:宋体;\">：序号<span>(</span>表示每月的第几周星期几<span>)</span>，例如在周字段上设置<span>\"6#3\"</span>表示在每月的第三个周星期六<span>.</span>注意如果指定<span>\"6#5\",</span>正好第五周没有星期六，则不会触发该配置<span>(</span>用在母亲节和父亲节再合适不过了<span>) </span></span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:21pt;text-align:left;\" align=\"left\">\r\n	<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">周字段的设置，若使用英文字母是不区分大小写的<span> MON </span>与<span>mon</span>相同<span>.</span></span></span> \r\n</p>\r\n<p class=\"MsoNormal\" style=\"text-indent:21.1pt;\">\r\n	<strong><span style=\"font-family:宋体;\"><span style=\"font-size:small;\">常用示例<span>: </span></span></span></strong> \r\n</p>\r\n<p style=\"text-indent:21pt;\">\r\n	<span style=\"font-size:10.5pt;\"><span style=\"font-family:宋体;\">格式<span>: [</span>秒<span>] [</span>分<span>] [</span>小时<span>] [</span>日<span>] [</span>月<span>] [</span>周<span>] [</span>年<span>]</span></span></span> \r\n</p>\r\n<p class=\"MsoNormal\">\r\n	<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">0 0 12 * * ?&nbsp;<span>&nbsp;&nbsp;&nbsp; </span><span>&nbsp;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span style=\"font-family:宋体;\"><span style=\"font-size:small;\">每天<span>12</span>点触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 15 10 ? * *&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>每天<span>10</span>点<span>15</span>分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 15 10 * * ?&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>每天<span>10</span>点<span>15</span>分触发</span><span style=\"font-size:small;\"><span>&nbsp; <br />\r\n0 15 10 * * ? *&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>每天<span>10</span>点<span>15</span>分触发</span><span style=\"font-size:small;\"><span>&nbsp; <br />\r\n0 15 10 * * ? 2005&nbsp; <span>&nbsp;&nbsp;&nbsp;</span>2005</span>年每天<span>10</span>点<span>15</span>分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 * 14 * * ?&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>每天下午的<span> 2</span>点到<span>2</span>点<span>59</span>分每分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 0/5 14 * * ?&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>每天下午的<span> 2</span>点到<span>2</span>点<span>59</span>分<span>(</span>整点开始，每隔<span>5</span>分触发</span><span style=\"font-size:small;\"><span>)&nbsp; <br />\r\n0 0/5 14,18 * * ?&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>每天下午的<span> 18</span>点到<span>18</span>点<span>59</span>分<span>(</span>整点开始，每隔<span>5</span>分触发<span>) </span></span></span> <br />\r\n<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">0 0-5 14 * * ?&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span style=\"font-family:宋体;\"><span style=\"font-size:small;\">每天下午的<span> 2</span>点到<span>2</span>点<span>05</span>分每分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 10,44 14 ? 3 WED&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;</span>3</span>月分每周三下午的<span> 2</span>点<span>10</span>分和<span>2</span>点<span>44</span>分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 15 10 ? * MON-FRI&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;</span></span>从周一到周五每天上午的<span>10</span>点<span>15</span>分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 15 10 15 * ?&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;</span></span>每月<span>15</span>号上午<span>10</span>点<span>15</span>分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 15 10 L * ?&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>每月最后一天的<span>10</span>点<span>15</span>分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 15 10 ? * 6L&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>每月最后一周的星期五的<span>10</span>点<span>15</span>分触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 15 10 ? * 6L 2002-2005&nbsp; </span>从<span>2002</span>年到<span>2005</span>年每月最后一周的星期五的<span>10</span>点<span>15</span>分触发&nbsp;</span></span> <br />\r\n<span style=\"font-family:宋体;\"><span style=\"font-size:small;\">0 15 10 ? * 6#3&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span style=\"font-family:宋体;\"><span style=\"font-size:small;\">每月的第三周的星期五开始触发</span><span style=\"font-size:small;\"><span> <br />\r\n0 0 12 1/5 * ?&nbsp; <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>每月的第一个中午开始每隔<span>5</span>天触发一次</span><span style=\"font-size:small;\"><span> <br />\r\n0 11 11 11 11 ?&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;</span></span>每年的<span>11</span>月<span>11</span>号<span> 11</span>点<span>11</span>分触发<span>(</span>光棍节<span>)</span></span></span> \r\n</p>\r\n<p>\r\n	最后分享个在线语法生成工具地址：<a href=\"http://cron.qqe2.com/\" target=\"_blank\">http://cron.qqe2.com/</a>\r\n</p>', '1442306907', '1461988657', '1391', '1', '未知', '2', ' Quartz定时任务时间格式配置说明', '1', '0');
INSERT INTO `sxs_article` VALUES ('41', 'admin', 'h', '/Uploads/image/20150929/20150929095750_81030.jpg', '7', 'angular', '指令，我将其理解为AngularJS操作HTML element的一种途径。\r\n由于学习AngularJS的第一步就是写内置指令ng-app以指出该节点是应用的根节点，所以指令早已不陌生', '<p>\r\n	这篇日志简单记录了一些内置指令，先使用起来，再谈一些有趣的东西。\r\n</p>\r\n<p>\r\n	<strong>内置指令</strong> \r\n</p>\r\n<p>\r\n	所有的内置指令的前缀都为ng，不建议自定义指令使用该前缀，以免冲突。<br />\r\n首先从一些常见的内置指令开始。<br />\r\n先列出一些关键的内置指令，顺便简单说说作用域的问题。\r\n</p>\r\n<p>\r\n	<strong>ng-model</strong> \r\n</p>\r\n<p>\r\n	将表单控件和当前作用域的属性进行绑定，这么解释似乎也不太正确。<br />\r\n但先不要管咬文嚼字，用起来倒是易懂，\r\n</p>\r\n<p>\r\n	<strong>ng-init</strong> \r\n</p>\r\n<p>\r\n	该指令被调用时会初始化内部作用域。<br />\r\n这个指令一般会出现在比较小的应用中，比如给个demo什么的...\r\n</p>\r\n<p>\r\n	除了ng-init，我们还有更多更好的选择。\r\n</p>\r\n<p>\r\n	<strong>ng-app</strong> \r\n</p>\r\n<p>\r\n	每一次用AngularJS都离不开这个指令，顺便说下$rootScope。<br />\r\n声明了ng-app的元素会成为$rootScope的起点，而$rootScope是作用域链的根，通常声明在你懂的。<br />\r\n也就是说根下的作用域都可以访问它。<br />\r\n但是，不建议过度使用$rootScope，免得全局变量满天飞，效率又差又难管。<br />\r\n下面是一个例子:\r\n</p>\r\n<p>\r\n	<strong>ng-controller</strong> \r\n</p>\r\n<p>\r\n	我们用这个指令在一个DOM元素上装上controller。<br />\r\n一个控制器? 确实，从字面意思上这样理解倒是不错，那我们为什么需要控制器?<br />\r\n记得AngularJS 1.2.x时还可以这样定义controller来着...\r\n</p>\r\n<p>\r\n	AngularJS 1.3.x中禁止了这种方式，因为这种方式会让controller满天飞，分不清层次，所有东西都挂在$rootScope上... <br />\r\nng-controller必须有一个表达式作为参数，另外通过$scope来继承上级$scope的方法和属性什么的，$rootScope也包括在内。<br />\r\n下面只是一个简单的例子，ancestor无法访问child的作用域。\r\n</p>\r\n<p>\r\n	作用域的问题远不止如此，暂且搁下，继续看看其他内置指令。\r\n</p>\r\n<p>\r\n	<strong>ng-form</strong> \r\n</p>\r\n<p>\r\n	起初不明白为什么会有个表单指令，标签感觉也够用啊。<br />\r\n以表单验证为例，在上一篇中有这么一段代码:\r\n</p>\r\n<p>\r\n	也就是表单的状态为$invalid时禁用提交按钮。<br />\r\n如果场景再稍微复杂一点点，比如一个父表单中有多个子表单，子表单中有3个验证通过时父表单便可以提交。<br />\r\n但是，是不可以嵌套的。<br />\r\n考虑到这种场景，我们便使用ng-form指令来解决这一问题。\r\n</p>\r\n<p>\r\n	<strong>ng-disabled</strong> \r\n</p>\r\n<p>\r\n	像这种只要出现则生效的属性，我们可以在AngularJS中通过表达式返回值true/false令其生效。<br />\r\n禁用表单输入字段。\r\n</p>\r\n<div class=\"codetitle\">\r\n	&nbsp;\r\n</div>\r\n<p>\r\n	<strong>ng-readonly</strong> \r\n</p>\r\n<p>\r\n	通过表达式返回值true/false将表单输入字段设为只读。<br />\r\n弄个例子，3秒后变成只读.\r\n</p>\r\n<div class=\"codetitle\">\r\n	&nbsp;\r\n</div>\r\n<p>\r\n	<strong>ng-checked</strong> \r\n</p>\r\n<p>\r\n	这个是给多选用的\r\n</p>\r\n<p>\r\n	<strong>ng-selected</strong> \r\n</p>\r\n这个是给下拉框用的<br />\r\n<p>\r\n	<strong>ng-show/ng-hide</strong> \r\n</p>\r\n<p>\r\n	根据表达式显示/隐藏HTML元素，注意是隐藏，不是从DOM移除\r\n</p>\r\n<p>\r\n	<strong>ng-change</strong> \r\n</p>\r\n<p>\r\n	不是HTML那套onXXX之类的，而是ng-XXX。<br />\r\n结合ng-model使用，以ng-change为例:\r\n</p>\r\n<div class=\"codetitle\">\r\n	&nbsp;\r\n</div>\r\n<p>\r\n	或者比如ng-options\r\n</p>\r\n<p>\r\n	<strong>{{}}</strong> \r\n</p>\r\n<p>\r\n	其实这个也是一个指令，也许觉得和ng-bind差不多，但页面渲染略慢时可能会被看到。<br />\r\n另外，{{}}的performance远不如ng-bind，只是用起来很方便。\r\n</p>\r\n<p>\r\n	<strong>ng-bind</strong> \r\n</p>\r\n<p>\r\n	ng-bind的行为和{{}}差不多，只是我们可以用这个指令来避免FOUC(Flash Of Unrendered Content)，也就是未渲染导致的闪烁。\r\n</p>\r\n<p>\r\n	<strong>ng-cloak</strong> \r\n</p>\r\n<p>\r\n	ng-cloak也可以为我们解决FOUC。 ng-cloak会将内部元素隐藏，直到路由调用对应的页面。\r\n</p>\r\n<p>\r\n	<strong>ng-if</strong> \r\n</p>\r\n<p>\r\n	如果ng-if中的表达式为false，则对应的元素整个会从DOM中移除而非隐藏，但审查元素时你可以看到表达式变成注释了。<br />\r\n如果相进行隐藏，可以使用ng-hide。\r\n</p>\r\n<p>\r\n	<strong>ng-switch</strong> \r\n</p>\r\n<p>\r\n	单独使用没什么意思，下面是例子:\r\n</p>\r\n<p>\r\n	<strong>ng-repeat</strong> \r\n</p>\r\n<p>\r\n	不明白为毛不叫iterate，总之是遍历集合，给每个元素生成模板实例，每个实例的作用域中可以用一些特殊属性\r\n</p>\r\n<br />\r\n<br />\r\n<p>\r\n	<strong>ng-href</strong> \r\n</p>\r\n<p>\r\n	起初我在一个文本域中弄了个ng-model，然后像这样<a href=\"{{myUrl}}\">在href里面写了进去。<br />\r\n其实这样href和ng-href看不出什么区别</a> \r\n</p>\r\n<div class=\"codetitle\">\r\n	<a href=\"{{myUrl}}\"><span></span></a> <br />\r\n</div>\r\n<p>\r\n	<strong>ng-src<br />\r\n</strong> \r\n</p>\r\n<p>\r\n	大同小异，即表达式生效前不要加载该资源。\r\n</p>\r\n<p>\r\n	<strong>ng-class</strong> \r\n</p>\r\n<p>\r\n	用作用域中的对象动态改变类样式\r\n</p>\r\n<br />', '1443491720', '1443492124', '831', '1', '未知', '2', 'angular常用内置指令', '1', '0');
INSERT INTO `sxs_article` VALUES ('43', 'admin', 'h', '', '7', 'jquery,table', ' 引入 使用 Javascript代码 $(document).ready( function (){ $( \'#example\' ).dataTable(); }); //另一个例子 $(document).ready( function (){ $( \'#example\' ).dataTable({ \"bInfo\" : false }); }); 要注意的是，要被dataTable处理的table对象，必须有thead与tbody，而且，结构要规整（数据不一定要完整），这样才能正确处理。 以下是在进行dataTable绑定处理时候可以附加的参数： 属性名称 取值范围 解释 bAutoWidth true or false, default true 是', '<span>引入</span><br />\r\n<br />\r\n<span>使用</span> \r\n<div>\r\n	<div>\r\n		<div>\r\n			Javascript代码&nbsp;&nbsp;\r\n		</div>\r\n	</div>\r\n<span><span>$(document).ready(</span><span>function</span><span>(){&nbsp;&nbsp;</span></span><span>&nbsp;&nbsp;&nbsp;&nbsp;$(<span>\'#example\'</span><span>).dataTable();&nbsp;&nbsp;</span></span><span>});&nbsp;&nbsp;</span><span>&nbsp;&nbsp;</span><span><span>//&nbsp;另一个例子</span><span>&nbsp;&nbsp;</span></span><span>$(document).ready(<span>function</span><span>(){&nbsp;&nbsp;</span></span><span>&nbsp;&nbsp;&nbsp;&nbsp;$(<span>\'#example\'</span><span>).dataTable({&nbsp;&nbsp;</span></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>\"bInfo\"</span><span>:&nbsp;</span><span>false</span><span>&nbsp;&nbsp;</span></span><span>&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;</span><span>});&nbsp;&nbsp;</span>\r\n</div>\r\n<br />\r\n<br />\r\n要注意的是，要被dataTable处理的table对象，必须有thead与tbody，而且，结构要规整（数据不一定要完整），这样才能正确处理。 <br />\r\n<br />\r\n以下是在进行dataTable绑定处理时候可以附加的参数： <br />\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				属性名称\r\n			</td>\r\n			<td>\r\n				取值范围\r\n			</td>\r\n			<td>\r\n				解释\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bAutoWidth\r\n			</td>\r\n			<td>\r\n				true or false, default true\r\n			</td>\r\n			<td>\r\n				是否自动计算表格各列宽度\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bDeferRender\r\n			</td>\r\n			<td>\r\n				true or false, default false\r\n			</td>\r\n			<td>\r\n				用于渲染的一个参数\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bFilter\r\n			</td>\r\n			<td>\r\n				true or false, default true\r\n			</td>\r\n			<td>\r\n				开关，是否启用客户端过滤功能\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bInfo\r\n			</td>\r\n			<td>\r\n				true or false, default true\r\n			</td>\r\n			<td>\r\n				开关，是否显示表格的一些信息\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bJQueryUI\r\n			</td>\r\n			<td>\r\n				true or false, default false\r\n			</td>\r\n			<td>\r\n				是否使用jquery ui themeroller的风格\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bLengthChange\r\n			</td>\r\n			<td>\r\n				true or false, default true\r\n			</td>\r\n			<td>\r\n				开关，是否显示一个每页长度的选择条（需要分页器支持）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bPaginate\r\n			</td>\r\n			<td>\r\n				true or false, default true\r\n			</td>\r\n			<td>\r\n				开关，是否显示（使用）分页器\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bProcessing\r\n			</td>\r\n			<td>\r\n				true or false, defualt false\r\n			</td>\r\n			<td>\r\n				开关，以指定当正在处理数据的时候，是否显示“正在处理”这个提示信息\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bScrollInfinite\r\n			</td>\r\n			<td>\r\n				true or false, default false\r\n			</td>\r\n			<td>\r\n				开关，以指定是否无限滚动（与sScrollY配合使用），在大数据量的时候很有用。当这个标志为true的时候，分页器就默认关闭\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bSort\r\n			</td>\r\n			<td>\r\n				true or false, default true\r\n			</td>\r\n			<td>\r\n				开关，是否让各列具有按列排序功能\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bSortClasses\r\n			</td>\r\n			<td>\r\n				true or false, default true\r\n			</td>\r\n			<td>\r\n				开关，指定当当前列在排序时，是否增加classes \'sorting_1\', \'sorting_2\' and \'sorting_3\'，打开后，在处理大数据时，性能有所损失\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bStateSave\r\n			</td>\r\n			<td>\r\n				true or false, default false\r\n			</td>\r\n			<td>\r\n				开关，是否打开客户端状态记录功能。这个数据是记录在cookies中的，打开了这个记录后，即使刷新一次页面，或重新打开浏览器，之前的状态都是保存下来的\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				sScrollX\r\n			</td>\r\n			<td>\r\n				\'disabled\' or&nbsp; \'100%\' 类似的字符串\r\n			</td>\r\n			<td>\r\n				是否开启水平滚动，以及指定滚动区域大小\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				sScrollY\r\n			</td>\r\n			<td>\r\n				\'disabled\' or \'200px\' 类似的字符串\r\n			</td>\r\n			<td>\r\n				是否开启垂直滚动，以及指定滚动区域大小\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				--\r\n			</td>\r\n			<td>\r\n				--\r\n			</td>\r\n			<td>\r\n				--\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				选项\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n			<td>\r\n				&nbsp;\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				aaSorting\r\n			</td>\r\n			<td>\r\n				array array[int,string], 如[], [[0,\'asc\'], [0,\'desc\']]\r\n			</td>\r\n			<td>\r\n				指定按多列数据排序的依据\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				aaSortingFixed\r\n			</td>\r\n			<td>\r\n				同上\r\n			</td>\r\n			<td>\r\n				同上。唯一不同点是不能被用户的自定义配置冲突\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				aLengthMenu\r\n			</td>\r\n			<td>\r\n				default [10, 25, 50, 100]，可以为一维数组，也可为二维数组，比如：[[10, 25, 50, -1], [10, 25, 50, \"All\"]]\r\n			</td>\r\n			<td>\r\n				这个为选择每页的条目数，当使用一个二维数组时，二维层面只能有两个元素，第一个为显示每页条目数的选项，第二个是关于这些选项的解释\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				aoSearchCols\r\n			</td>\r\n			<td>\r\n				default null, 类似：[null, {\"sSearch\": \"My filter\"}, null,{\"sSearch\": \"^[0-9]\", \"bEscapeRegex\": false}]\r\n			</td>\r\n			<td>\r\n				给每个列单独定义其初始化搜索列表特性（这一块还没搞懂）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				asStripClasses\r\n			</td>\r\n			<td>\r\n				default [\'odd\', \'even\'], 比如[\'strip1\', \'strip2\', \'strip3\']\r\n			</td>\r\n			<td>\r\n				指定要被应用到各行的class风格，会自动循环\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bDestroy\r\n			</td>\r\n			<td>\r\n				true or false, default false\r\n			</td>\r\n			<td>\r\n				用于当要在同一个元素上执行新的dataTable绑定时，将之前的那个数据对象清除掉，换以新的对象设置\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bRetrieve\r\n			</td>\r\n			<td>\r\n				true or false, default false\r\n			</td>\r\n			<td>\r\n				用于指明当执行dataTable绑定时，是否返回DataTable对象\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bScrollCollapse\r\n			</td>\r\n			<td>\r\n				true or false, default false\r\n			</td>\r\n			<td>\r\n				指定适当的时候缩起滚动视图\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				bSortCellsTop\r\n			</td>\r\n			<td>\r\n				true or false, default false\r\n			</td>\r\n			<td>\r\n				（未知的东东）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				iCookieDuration\r\n			</td>\r\n			<td>\r\n				整数，默认7200，单位为秒\r\n			</td>\r\n			<td>\r\n				指定用于存储客户端信息到cookie中的时间长度，超过这个时间后，自动过期\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				iDeferLoading\r\n			</td>\r\n			<td>\r\n				整数，默认为null\r\n			</td>\r\n			<td>\r\n				延迟加载，它的参数为要加载条目的数目，通常与bServerSide，sAjaxSource等配合使用\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				iDisplayLength\r\n			</td>\r\n			<td>\r\n				整数，默认为10\r\n			</td>\r\n			<td>\r\n				用于指定一屏显示的条数，需开启分页器\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				iDisplayStart\r\n			</td>\r\n			<td>\r\n				整数，默认为0\r\n			</td>\r\n			<td>\r\n				用于指定从哪一条数据开始显示到表格中去\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				iScrollLoadGap\r\n			</td>\r\n			<td>\r\n				整数，默认为100\r\n			</td>\r\n			<td>\r\n				用于指定当DataTable设置为滚动时，最多可以一屏显示多少条数据\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				oSearch\r\n			</td>\r\n			<td>\r\n				默认{ \"sSearch\": \"\", \"bRegex\": false, \"bSmart\": true }\r\n			</td>\r\n			<td>\r\n				又是初始时指定搜索参数相关的，有点复杂，没搞懂目前\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				sAjaxDataProp\r\n			</td>\r\n			<td>\r\n				字符串，default \'aaData\'\r\n			</td>\r\n			<td>\r\n				指定当从服务端获取表格数据时，数据项使用的名字\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				sAjaxSource\r\n			</td>\r\n			<td>\r\n				URL字符串，default null\r\n			</td>\r\n			<td>\r\n				指定要从哪个URL获取数据\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				sCookiePrefix\r\n			</td>\r\n			<td>\r\n				字符串，default \'SpryMedia_DataTables_\'\r\n			</td>\r\n			<td>\r\n				当打开状态存储特性后，用于指定存储在cookies中的字符串的前缀名字\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				sDom\r\n			</td>\r\n			<td>\r\n				default lfrtip (when bJQueryUI is false) or &lt;\"H\"lfr&gt;t&lt;\"F\"ip&gt; (when bJQueryUI is true)\r\n			</td>\r\n			<td>\r\n				这是用于定义DataTable布局的一个强大的属性，另开专门文档来补充说明吧\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				sPaginationType\r\n			</td>\r\n			<td>\r\n				\'full_numbers\' or \'two_button\', default \'two_button\'\r\n			</td>\r\n			<td>\r\n				用于指定分页器风格\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				sScrollXInner\r\n			</td>\r\n			<td>\r\n				string default \'disabled\'\r\n			</td>\r\n			<td>\r\n				又是水平滚动相关的，没搞懂啥意思\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<br />\r\n<br />\r\nDataTable支持如下回调函数 <br />\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n				回调函数名称\r\n			</td>\r\n			<td>\r\n				参数\r\n			</td>\r\n			<td>\r\n				返回值\r\n			</td>\r\n			<td>\r\n				默认\r\n			</td>\r\n			<td>\r\n				功能\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnCookieCallback\r\n			</td>\r\n			<td>\r\n				1.string: Name of the cookie defined by DataTables 2.object: Data to\r\n be stored in the cookie 3.string: Cookie expires string 4.string: Path \r\nof the cookie to set\r\n			</td>\r\n			<td>\r\n				string: cookie formatted string (which should be encoded by using encodeURIComponent())\r\n			</td>\r\n			<td>\r\n				null\r\n			</td>\r\n			<td>\r\n				当每次cookies改变时，会触发这个函数调用\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnDrawCallback\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				在每次table被draw完后调用，至于做什么就看着办吧\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnFooterCallback\r\n			</td>\r\n			<td>\r\n				1.node : \"TR\" element for the footer 2.array array strings : Full \r\ntable data (as derived from the original HTML) 3.int : Index for the \r\ncurrent display starting point in the display array&lt; 4.int : Index \r\nfor the current display ending point in the display array 5.array int : \r\nIndex array to translate the visual position to the full data array\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				用于在每次重画的时候修改表格的脚部\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnFormatNumber\r\n			</td>\r\n			<td>\r\n				1.int : number to be formatted\r\n			</td>\r\n			<td>\r\n				String : formatted string for DataTables to show the number\r\n			</td>\r\n			<td>\r\n				有默认的\r\n			</td>\r\n			<td>\r\n				用于在大数字上，自动加入一些逗号，分隔开\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnHeaderCallback\r\n			</td>\r\n			<td>\r\n				1.node : \"TR\" element for the header 2.array array strings : Full \r\ntable data (as derived from the original HTML) 3.int : Index for the \r\ncurrent display starting point in the display array 4.int : Index for \r\nthe current display ending point in the display array 5.array int : \r\nIndex array to translate the visual position to the full data array\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				用于在每次draw发生时，修改table的header\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnInfoCallback\r\n			</td>\r\n			<td>\r\n				1.object: DataTables settings object 2.int: Starting position in \r\ndata for the draw 3.int: End position in data for the draw 4.int: Total \r\nnumber of rows in the table (regardless of filtering) 5.int: Total \r\nnumber of rows in the data set, after filtering 6.string: The string \r\nthat DataTables has formatted using it\'s own rules\r\n			</td>\r\n			<td>\r\n				string: The string to be displayed in the information element.\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				用于传达table信息\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnInitComplete\r\n			</td>\r\n			<td>\r\n				1.object:oSettings - DataTables settings object\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				表格初始化完成后调用\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnPreDrawCallback\r\n			</td>\r\n			<td>\r\n				1.object:oSettings - DataTables settings object\r\n			</td>\r\n			<td>\r\n				Boolean\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				用于在开始绘制之前调用，返回false的话，会阻止draw事件发生；返回其它值，draw可以顺利执行\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnRowCallback\r\n			</td>\r\n			<td>\r\n				1.node : \"TR\" element for the current row 2.array strings : Raw data\r\n array for this row (as derived from the original HTML) 3.int : The \r\ndisplay index for the current table draw 4.int : The index of the data \r\nin the full list of rows (after filtering)\r\n			</td>\r\n			<td>\r\n				node : \"TR\" element for the current row\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				当创建了行，但还未绘制到屏幕上的时候调用，通常用于改变行的class风格\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnServerData\r\n			</td>\r\n			<td>\r\n				1.string: HTTP source to obtain the data from (i.e. sAjaxSource) \r\n2.array objects: A key/value pair object containing the data to send to \r\nthe server 3.function: Function to be called on completion of the data \r\nget process that will draw the data on the page.\r\n			</td>\r\n			<td>\r\n				void\r\n			</td>\r\n			<td>\r\n				$.getJSON\r\n			</td>\r\n			<td>\r\n				用于替换默认发到服务端的请求操作\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnStateLoadCallback\r\n			</td>\r\n			<td>\r\n				1.object:oSettings - DataTables settings object 2.object:oData - \r\nObject containing information retrieved from the state saving cookie \r\nwhich should be restored. For the exact properties please refer to the \r\nDataTables code.\r\n			</td>\r\n			<td>\r\n				Boolean - false if the state should not be loaded, true otherwise\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				在cookies中的数据被加载前执行，可以方便地修改这些数据\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n				fnStateSaveCallback\r\n			</td>\r\n			<td>\r\n				1.object:oSettings - DataTables settings object 2.String:sValue - a \r\nJSON string (without the final closing brace) which should be stored in \r\nthe state saving cookie.\r\n			</td>\r\n			<td>\r\n				String - the full string that should be used to save the state\r\n			</td>\r\n			<td>\r\n				无\r\n			</td>\r\n			<td>\r\n				在状态数据被存储到cookies前执行，可以方便地做一些预操作\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>', '1445496617', '1445496617', '813', '1', '未知', '2', 'jquery datatable 参数', '1', '0');
INSERT INTO `sxs_article` VALUES ('44', 'admin', 'h', 'http://pic.58pic.com/58pic/14/51/76/13U58PICu5G_1024.png', '5', 'mysql', ' 一、数学函数 ABS(x) 返回x的绝对值 BIN(x) 返回x的二进制（OCT返回八进制，HEX返回十六进制） CEILING(x) 返回大于x的最小整数值 EXP(x) 返回值e（自然对数的底）的x次方 FLOOR(x) 返回小于x', '<h2 class=\"para-title level-2\" style=\"font-size:24px;color:#333333;font-family:\'Microsoft YaHei\', SimHei, Verdana;font-weight:500;background:url(http://baike.bdimg.com/static/wiki-lemma/normal/resource/img/paraTitle-line_c5e6d61.png) #FFFFFF;\">\r\n	<span class=\"title-text\" style=\"font-size:22px;color:#000000;line-height:24px;\"><strong>一、数学函数</strong><br />\r\n<span style=\"font-family:Arial;font-size:14px;line-height:26px;background-color:#FFFFFF;\">ABS(x)&nbsp;&nbsp; 返回x的绝对值</span><br />\r\n	<div id=\"sina_keyword_ad_area2\" class=\"articalContent  \" style=\"font-family:Arial;font-size:14px;background-color:#FFFFFF;\">\r\n		BIN(x)&nbsp;&nbsp; 返回x的二进制（OCT返回八进制，HEX返回十六进制）<br />\r\nCEILING(x)&nbsp;&nbsp; 返回大于x的最小整数值<br />\r\nEXP(x)&nbsp;&nbsp; 返回值e（自然对数的底）的x次方<br />\r\nFLOOR(x)&nbsp;&nbsp; 返回小于x的最大整数值<br />\r\nGREATEST(x1,x2,...,xn)返回集合中最大的值<br />\r\nLEAST(x1,x2,...,xn)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回集合中最小的值<br />\r\nLN(x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回x的自然对数<br />\r\nLOG(x,y)返回x的以y为底的对数<br />\r\nMOD(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回x/y的模（余数）<br />\r\nPI()返回pi的值（圆周率）<br />\r\nRAND()返回０到１内的随机值,可以通过提供一个参数(种子)使RAND()随机数生成器生成一个指定的值。<br />\r\nROUND(x,y)返回参数x的四舍五入的有y位小数的值<br />\r\nSIGN(x) 返回代表数字x的符号的值<br />\r\nSQRT(x) 返回一个数的平方根<br />\r\nTRUNCATE(x,y)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回数字x截短为y位小数的结果<br />\r\n<strong>二、聚合函数(常用于GROUP BY从句的SELECT查询中)</strong><br />\r\nAVG(col)返回指定列的平均值<br />\r\nCOUNT(col)返回指定列中非NULL值的个数<br />\r\nMIN(col)返回指定列的最小值<br />\r\nMAX(col)返回指定列的最大值<br />\r\nSUM(col)返回指定列的所有值之和<br />\r\nGROUP_CONCAT(col) 返回由属于一组的列值连接组合而成的结果<br />\r\n<strong>三、字符串函数</strong><br />\r\nASCII(char)返回字符的ASCII码值<br />\r\nBIT_LENGTH(str)返回字符串的比特长度<br />\r\nCONCAT(s1,s2...,sn)将s1,s2...,sn连接成字符串<br />\r\nCONCAT_WS(sep,s1,s2...,sn)将s1,s2...,sn连接成字符串，并用sep字符间隔<br />\r\nINSERT(str,x,y,instr) 将字符串str从第x位置开始，y个字符长的子串替换为字符串instr，返回结果<br />\r\nFIND_IN_SET(str,list)分析逗号分隔的list列表，如果发现str，返回str在list中的位置<br />\r\nLCASE(str)或LOWER(str) 返回将字符串str中所有字符改变为小写后的结果<br />\r\nLEFT(str,x)返回字符串str中最左边的x个字符<br />\r\nLENGTH(s)返回字符串str中的字符数<br />\r\nLTRIM(str) 从字符串str中切掉开头的空格<br />\r\nPOSITION(substr,str) 返回子串substr在字符串str中第一次出现的位置<br />\r\nQUOTE(str) 用反斜杠转义str中的单引号<br />\r\nREPEAT(str,srchstr,rplcstr)返回字符串str重复x次的结果<br />\r\nREVERSE(str) 返回颠倒字符串str的结果<br />\r\nRIGHT(str,x) 返回字符串str中最右边的x个字符<br />\r\nRTRIM(str) 返回字符串str尾部的空格<br />\r\nSTRCMP(s1,s2)比较字符串s1和s2<br />\r\nTRIM(str)去除字符串首部和尾部的所有空格<br />\r\nUCASE(str)或UPPER(str) 返回将字符串str中所有字符转变为大写后的结果<br />\r\n<strong>四、日期和时间函数</strong><br />\r\nCURDATE()或CURRENT_DATE() 返回当前的日期<br />\r\nCURTIME()或CURRENT_TIME() 返回当前的时间<br />\r\nDATE_ADD(date,INTERVAL int keyword)返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH);<br />\r\nDATE_FORMAT(date,fmt)&nbsp;&nbsp;依照指定的fmt格式格式化日期date值<br />\r\nDATE_SUB(date,INTERVAL int keyword)返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH);<br />\r\nDAYOFWEEK(date)&nbsp;&nbsp;&nbsp;返回date所代表的一星期中的第几天(1~7)<br />\r\nDAYOFMONTH(date)&nbsp;&nbsp;返回date是一个月的第几天(1~31)<br />\r\nDAYOFYEAR(date)&nbsp;&nbsp;&nbsp;返回date是一年的第几天(1~366)<br />\r\nDAYNAME(date)&nbsp;&nbsp;&nbsp;返回date的星期名，如：SELECT DAYNAME(CURRENT_DATE);<br />\r\nFROM_UNIXTIME(ts,fmt)&nbsp;&nbsp;根据指定的fmt格式，格式化UNIX时间戳ts<br />\r\nHOUR(time)&nbsp;&nbsp;&nbsp;返回time的小时值(0~23)<br />\r\nMINUTE(time)&nbsp;&nbsp;&nbsp;返回time的分钟值(0~59)<br />\r\nMONTH(date)&nbsp;&nbsp;&nbsp;返回date的月份值(1~12)<br />\r\nMONTHNAME(date)&nbsp;&nbsp;&nbsp;返回date的月份名，如：SELECT MONTHNAME(CURRENT_DATE);<br />\r\nNOW()&nbsp;&nbsp;&nbsp;&nbsp;返回当前的日期和时间<br />\r\nQUARTER(date)&nbsp;&nbsp;&nbsp;返回date在一年中的季度(1~4)，如SELECT QUARTER(CURRENT_DATE);<br />\r\nWEEK(date)&nbsp;&nbsp;&nbsp;返回日期date为一年中第几周(0~53)<br />\r\nYEAR(date)&nbsp;&nbsp;&nbsp;返回日期date的年份(1000~9999)<br />\r\n一些示例：<br />\r\n获取当前系统时间：SELECT FROM_UNIXTIME(UNIX_TIMESTAMP());<br />\r\nSELECT EXTRACT(YEAR_MONTH FROM CURRENT_DATE);<br />\r\nSELECT EXTRACT(DAY_SECOND FROM CURRENT_DATE);<br />\r\nSELECT EXTRACT(HOUR_MINUTE FROM CURRENT_DATE);<br />\r\n返回两个日期值之间的差值(月数)：SELECT PERIOD_DIFF(200302,199802);<br />\r\n在Mysql中计算年龄：<br />\r\nSELECT DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS(birthday)),\'%Y\')+0 AS age FROM employee;<br />\r\n这样，如果Brithday是未来的年月日的话，计算结果为0。<br />\r\n下面的SQL语句计算员工的绝对年龄，即当Birthday是未来的日期时，将得到负值。<br />\r\nSELECT DATE_FORMAT(NOW(), \'%Y\') - DATE_FORMAT(birthday, \'%Y\') -(DATE_FORMAT(NOW(), \'00-%m-%d\') &lt;DATE_FORMAT(birthday, \'00-%m-%d\')) AS age from employee<br />\r\n<strong>五、加密函数</strong><br />\r\nAES_ENCRYPT(str,key)&nbsp;&nbsp;返回用密钥key对字符串str利用高级加密标准算法加密后的结果，调用AES_ENCRYPT的结果是一个二进制字符串，以BLOB类型存储<br />\r\nAES_DECRYPT(str,key)&nbsp;&nbsp;返回用密钥key对字符串str利用高级加密标准算法解密后的结果<br />\r\nDECODE(str,key)&nbsp;&nbsp;&nbsp;使用key作为密钥解密加密字符串str<br />\r\nENCRYPT(str,salt)&nbsp;&nbsp;&nbsp;使用UNIXcrypt()函数，用关键词salt(一个可以惟一确定口令的字符串，就像钥匙一样)加密字符串str<br />\r\nENCODE(str,key)&nbsp;&nbsp;&nbsp;使用key作为密钥加密字符串str，调用ENCODE()的结果是一个二进制字符串，它以BLOB类型存储<br />\r\nMD5()&nbsp;&nbsp;&nbsp;&nbsp;计算字符串str的MD5校验和<br />\r\nPASSWORD(str)&nbsp;&nbsp;&nbsp;返回字符串str的加密版本，这个加密过程是不可逆转的，和UNIX密码加密过程使用不同的算法。<br />\r\nSHA()&nbsp;&nbsp;&nbsp;&nbsp;计算字符串str的安全散列算法(SHA)校验和<br />\r\n示例：<br />\r\nSELECT ENCRYPT(\'root\',\'salt\');<br />\r\nSELECT ENCODE(\'xufeng\',\'key\');<br />\r\nSELECT DECODE(ENCODE(\'xufeng\',\'key\'),\'key\');#加解密放在一起<br />\r\nSELECT AES_ENCRYPT(\'root\',\'key\');<br />\r\nSELECT AES_DECRYPT(AES_ENCRYPT(\'root\',\'key\'),\'key\');<br />\r\nSELECT MD5(\'123456\');<br />\r\nSELECT SHA(\'123456\');<br />\r\n<strong>六、控制流函数</strong><br />\r\nMySQL有4个函数是用来进行条件操作的，这些函数可以实现SQL的条件逻辑，允许开发者将一些应用程序业务逻辑转换到数据库后台。<br />\r\nMySQL控制流函数：<br />\r\nCASE WHEN[test1] THEN [result1]...ELSE [default] END如果testN是真，则返回resultN，否则返回default<br />\r\nCASE [test] WHEN[val1] THEN [result]...ELSE [default]END&nbsp;&nbsp;如果test和valN相等，则返回resultN，否则返回default<br />\r\nIF(test,t,f)&nbsp;&nbsp;&nbsp;如果test是真，返回t；否则返回f<br />\r\nIFNULL(arg1,arg2) 如果arg1不是空，返回arg1，否则返回arg2<br />\r\nNULLIF(arg1,arg2) 如果arg1=arg2返回NULL；否则返回arg1<br />\r\n这些函数的第一个是IFNULL()，它有两个参数，并且对第一个参数进行判断。如果第一个参数不是NULL，函数就会向调用者返回第一个参数；如果是NULL,将返回第二个参数。<br />\r\n如：SELECT IFNULL(1,2), IFNULL(NULL,10),IFNULL(4*NULL,\'false\');<br />\r\nNULLIF()函数将会检验提供的两个参数是否相等，如果相等，则返回NULL，如果不相等，就返回第一个参数。<br />\r\n如：SELECT NULLIF(1,1),NULLIF(\'A\',\'B\'),NULLIF(2+3,4+1);<br />\r\n和许多脚本语言提供的IF()函数一样，MySQL的IF()函数也可以建立一个简单的条件测试，这个函数有三个参数，第一个是要被判断的表达式，如果表达式为真，IF()将会返回第二个参数，如果为假，IF()将会返回第三个参数。<br />\r\n如：SELECTIF(1&lt;10,2,3),IF(56&gt;100,\'true\',\'false\');<br />\r\nIF()函数在只有两种可能结果时才适合使用。然而，在现实世界中，我们可能发现在条件测试中会需要多个分支。在这种情况下，MySQL提供了CASE函数，它和PHP及Perl语言的switch-case条件例程一样。<br />\r\nCASE函数的格式有些复杂，通常如下所示：<br />\r\nCASE [expression to be evaluated]<br />\r\nWHEN [val 1] THEN [result 1]<br />\r\nWHEN [val 2] THEN [result 2]<br />\r\nWHEN [val 3] THEN [result 3]<br />\r\n......<br />\r\nWHEN [val n] THEN [result n]<br />\r\nELSE [default result]<br />\r\nEND<br />\r\n这里，第一个参数是要被判断的值或表达式，接下来的是一系列的WHEN-THEN块，每一块的第一个参数指定要比较的值，如果为真，就返回结果。所有的WHEN-THEN块将以ELSE块结束，当END结束了所有外部的CASE块时，如果前面的每一个块都不匹配就会返回ELSE块指定的默认结果。如果没有指定ELSE块，而且所有的WHEN-THEN比较都不是真，MySQL将会返回NULL。<br />\r\nCASE函数还有另外一种句法，有时使用起来非常方便，如下：<br />\r\nCASE<br />\r\nWHEN [conditional test 1] THEN [result 1]<br />\r\nWHEN [conditional test 2] THEN [result 2]<br />\r\nELSE [default result]<br />\r\nEND<br />\r\n这种条件下，返回的结果取决于相应的条件测试是否为真。<br />\r\n示例：<br />\r\nmysql&gt;SELECT CASE \'green\'<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHEN \'red\' THEN \'stop\'<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHEN \'green\' THEN \'go\' END;<br />\r\nSELECT CASE 9 WHEN 1 THEN \'a\' WHEN 2 THEN \'b\' ELSE \'N/A\' END;<br />\r\nSELECT CASE WHEN (2+2)=4 THEN \'OK\' WHEN(2+2)&lt;&gt;4 THEN \'not OK\' END ASSTATUS;<br />\r\nSELECT Name,IF((IsActive = 1),\'已激活\',\'未激活\') AS RESULT FROMUserLoginInfo;<br />\r\nSELECT fname,lname,(math+sci+lit) AS total,<br />\r\nCASE WHEN (math+sci+lit) &lt; 50 THEN \'D\'<br />\r\nWHEN (math+sci+lit) BETWEEN 50 AND 150 THEN \'C\'<br />\r\nWHEN (math+sci+lit) BETWEEN 151 AND 250 THEN \'B\'<br />\r\nELSE \'A\' END<br />\r\nAS grade FROM marks;<br />\r\nSELECT IF(ENCRYPT(\'sue\',\'ts\')=upass,\'allow\',\'deny\') AS LoginResultFROM users WHERE uname = \'sue\';#一个登陆验证<br />\r\n<strong>七、格式化函数</strong><br />\r\nDATE_FORMAT(date,fmt)&nbsp;&nbsp;依照字符串fmt格式化日期date值<br />\r\nFORMAT(x,y)&nbsp;&nbsp;&nbsp;把x格式化为以逗号隔开的数字序列，y是结果的小数位数<br />\r\nINET_ATON(ip)&nbsp;&nbsp;&nbsp;返回IP地址的数字表示<br />\r\nINET_NTOA(num)&nbsp;&nbsp;&nbsp;返回数字所代表的IP地址<br />\r\nTIME_FORMAT(time,fmt)&nbsp;&nbsp;依照字符串fmt格式化时间time值<br />\r\n其中最简单的是FORMAT()函数，它可以把大的数值格式化为以逗号间隔的易读的序列。<br />\r\n示例：<br />\r\nSELECT FORMAT(34234.34323432,3);<br />\r\nSELECT DATE_FORMAT(NOW(),\'%W,%D %M %Y %r\');<br />\r\nSELECT DATE_FORMAT(NOW(),\'%Y-%m-%d\');<br />\r\nSELECT DATE_FORMAT(19990330,\'%Y-%m-%d\');<br />\r\nSELECT DATE_FORMAT(NOW(),\'%h:%i %p\');<br />\r\nSELECT INET_ATON(\'10.122.89.47\');<br />\r\nSELECT INET_NTOA(175790383);<br />\r\n<strong>八、类型转化函数</strong><br />\r\n为了进行数据类型转化，MySQL提供了CAST()函数，它可以把一个值转化为指定的数据类型。类型有：BINARY,CHAR,DATE,TIME,DATETIME,SIGNED,UNSIGNED<br />\r\n示例：<br />\r\nSELECT CAST(NOW() AS SIGNED INTEGER),CURDATE()+0;<br />\r\nSELECT \'f\'=BINARY \'F\',\'f\'=CAST(\'F\' AS BINARY);<br />\r\n<strong>九、系统信息函数</strong><br />\r\nDATABASE()&nbsp;&nbsp;&nbsp;返回当前数据库名<br />\r\nBENCHMARK(count,expr)&nbsp;&nbsp;将表达式expr重复运行count次<br />\r\nCONNECTION_ID()&nbsp;&nbsp;&nbsp;返回当前客户的连接ID<br />\r\nFOUND_ROWS()&nbsp;&nbsp;&nbsp;返回最后一个SELECT查询进行检索的总行数<br />\r\nUSER()或SYSTEM_USER()&nbsp;&nbsp;返回当前登陆用户名<br />\r\nVERSION()&nbsp;&nbsp;&nbsp;返回MySQL服务器的版本<br />\r\n示例：<br />\r\nSELECT DATABASE(),VERSION(),USER();<br />\r\nSELECTBENCHMARK(9999999,LOG(RAND()*PI()));#该例中,MySQL计算LOG(RAND()*PI())表达式9999999次。\r\n	</div>\r\n</span>\r\n</h2>\r\n<div class=\"para\" style=\"font-size:14px;color:#333333;font-family:arial, 宋体, sans-serif;background-color:#FFFFFF;\">\r\n	<a target=\"_blank\" href=\"http://baike.baidu.com/view/420676.htm\"></a>\r\n</div>', '1445683109', '1445683365', '937', '1', '未知', '2', 'mysql函数大全', '1', '0');
